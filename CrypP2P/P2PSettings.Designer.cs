//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Text;
using System.Security.Cryptography;
using System;
namespace Cryptool.P2P {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public sealed partial class P2PSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static P2PSettings defaultInstance = ((P2PSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new P2PSettings())));
        
        public static P2PSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string PeerName {
            get {
                return ((string)(this["PeerName"]));
            }
            set {
                this["PeerName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("CrypTool2")]
        public string WorldName {
            get {
                return ((string)(this["WorldName"]));
            }
            set {
                this["WorldName"] = value;
            }
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string Password
        {
            get
            {
                return decrypt(((string)(this["Password"])));
            }
            set
            {
                this["Password"] = encrypt(value);
            }
        }

        /// <summary>
        /// Encrypts the given string using the current windows user password and converts
        /// this to a base64 string
        /// </summary>
        /// <param name="s"></param>
        /// <returns>encrypted base64 string</returns>
        private string encrypt(string s)
        {
            byte[] bytes = Encoding.Unicode.GetBytes(s);
            byte[] encBytes = ProtectedData.Protect(bytes, null, DataProtectionScope.CurrentUser);
            return Convert.ToBase64String(encBytes);
        }

        /// <summary>
        /// Decrypts the given base64 string using the current windows user password
        /// </summary>
        /// <param name="s"></param>
        /// <returns>decrypted string</returns>
        private string decrypt(string s)
        {
            if (string.IsNullOrEmpty(s))
            {
                return "";
            }
            byte[] encBytes = Convert.FromBase64String(s);
            byte[] bytes = ProtectedData.Unprotect(encBytes, null, DataProtectionScope.CurrentUser);
            return Encoding.Unicode.GetString(bytes);
        }

        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool Log2Monitor {
            get {
                return ((bool)(this["Log2Monitor"]));
            }
            set {
                this["Log2Monitor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Snal")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2PLinkManagerType LinkManager {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2PLinkManagerType)(this["LinkManager"]));
            }
            set {
                this["LinkManager"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("IrcBootstrapper")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2PBootstrapperType Bootstrapper {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2PBootstrapperType)(this["Bootstrapper"]));
            }
            set {
                this["Bootstrapper"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ConnectOnStartup {
            get {
                return ((bool)(this["ConnectOnStartup"]));
            }
            set {
                this["ConnectOnStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string WorkspacePath {
            get {
                return ((string)(this["WorkspacePath"]));
            }
            set {
                this["WorkspacePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int LocalReceivingPort {
            get {
                return ((int)(this["LocalReceivingPort"]));
            }
            set {
                this["LocalReceivingPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("60")]
        public int DistributedJobListRefreshInterval {
            get {
                return ((int)(this["DistributedJobListRefreshInterval"]));
            }
            set {
                this["DistributedJobListRefreshInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseLocalAddressDetection {
            get {
                return ((bool)(this["UseLocalAddressDetection"]));
            }
            set {
                this["UseLocalAddressDetection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("WebDHT")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2PArchitecture Architecture {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2PArchitecture)(this["Architecture"]));
            }
            set {
                this["Architecture"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4456")]
        public int ServerPort {
            get {
                return ((int)(this["ServerPort"]));
            }
            set {
                this["ServerPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("paps.vs.uni-due.de")]
        public string ServerHost {
            get {
                return ((string)(this["ServerHost"]));
            }
            set {
                this["ServerHost"] = value;
            }
        }
    }
}
