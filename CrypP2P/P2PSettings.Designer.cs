//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.P2P {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public sealed partial class P2PSettings : global::System.Configuration.ApplicationSettingsBase {
        
        private static P2PSettings defaultInstance = ((P2PSettings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new P2PSettings())));
        
        public static P2PSettings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("CrypTool2")]
        public string PeerName {
            get {
                return ((string)(this["PeerName"]));
            }
            set {
                this["PeerName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("CrypTool2")]
        public string WorldName {
            get {
                return ((string)(this["WorldName"]));
            }
            set {
                this["WorldName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool Log2Monitor {
            get {
                return ((bool)(this["Log2Monitor"]));
            }
            set {
                this["Log2Monitor"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Snal")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2PLinkManagerType LinkManager {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2PLinkManagerType)(this["LinkManager"]));
            }
            set {
                this["LinkManager"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("IrcBootstrapper")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2PBootstrapperType Bootstrapper {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2PBootstrapperType)(this["Bootstrapper"]));
            }
            set {
                this["Bootstrapper"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("FullMeshOverlay")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2POverlayType Overlay {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2POverlayType)(this["Overlay"]));
            }
            set {
                this["Overlay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("FullMeshDHT")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2PDHTType Dht {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2PDHTType)(this["Dht"]));
            }
            set {
                this["Dht"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool ConnectOnStartup {
            get {
                return ((bool)(this["ConnectOnStartup"]));
            }
            set {
                this["ConnectOnStartup"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string WorkspacePath {
            get {
                return ((string)(this["WorkspacePath"]));
            }
            set {
                this["WorkspacePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int LocalReceivingPort {
            get {
                return ((int)(this["LocalReceivingPort"]));
            }
            set {
                this["LocalReceivingPort"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int DistributedJobListRefreshInterval {
            get {
                return ((int)(this["DistributedJobListRefreshInterval"]));
            }
            set {
                this["DistributedJobListRefreshInterval"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseLocalAddressDetection {
            get {
                return ((bool)(this["UseLocalAddressDetection"]));
            }
            set {
                this["UseLocalAddressDetection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("TCP")]
        public global::Cryptool.Plugins.PeerToPeer.Internal.P2PTransportProtocol TransportProtocol {
            get {
                return ((global::Cryptool.Plugins.PeerToPeer.Internal.P2PTransportProtocol)(this["TransportProtocol"]));
            }
            set {
                this["TransportProtocol"] = value;
            }
        }
    }
}
