// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ct2ipc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace CrypTool.Plugins.Ipc.Messages {

  /// <summary>Holder for reflection information generated from ct2ipc.proto</summary>
  public static partial class Ct2IpcReflection {

    #region Descriptor
    /// <summary>File descriptor for ct2ipc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Ct2IpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxjdDJpcGMucHJvdG8SE2RlLmN0Mi5pcGMubWVzc2FnZXMiSgoNQ3QySXBj",
            "TWVzc2FnZRIWCg5zZXF1ZW5jZU51bWJlchgBIAEoAxITCgttZXNzYWdlVHlw",
            "ZRgCIAEoBRIMCgRib2R5GAMgASgMIlAKCEN0MkhlbGxvEhcKD3Byb3RvY29s",
            "VmVyc2lvbhgBIAEoBRITCgtwcm9ncmFtTmFtZRgCIAEoCRIWCg5wcm9ncmFt",
            "VmVyc2lvbhgDIAEoCSIdCgtDdDJTaHV0ZG93bhIOCgZyZWFzb24YASABKAki",
            "KQoJQ3QyVmFsdWVzEg0KBXBpbklkGAEgAygFEg0KBXZhbHVlGAIgAygJIq4B",
            "CgtDdDJMb2dFbnRyeRI7Cghsb2dMZXZlbBgBIAEoDjIpLmRlLmN0Mi5pcGMu",
            "bWVzc2FnZXMuQ3QyTG9nRW50cnkuTG9nTGV2ZWwSDQoFZW50cnkYAiABKAki",
            "UwoITG9nTGV2ZWwSDAoIQ1QyRVJST1IQABIOCgpDVDJXQVJOSU5HEAESCwoH",
            "Q1QySU5GTxACEgwKCENUMkRFQlVHEAMSDgoKQ1QyQkFMTE9PThAEIjUKC0N0",
            "MlByb2dyZXNzEhAKCG1heFZhbHVlGAEgASgBEhQKDGN1cnJlbnRWYWx1ZRgC",
            "IAEoASIzCgpDdDJHb29kYnllEhAKCGV4aXRDb2RlGAEgASgFEhMKC2V4aXRN",
            "ZXNzYWdlGAIgASgJQlcKGW9yZy5jcnlwdG9vbC5pcGMubWVzc2FnZXNCDkN0",
            "MklwY01lc3NhZ2Vz+AEBogIGY3QyaXBjqgIdQ3J5cHRvb2wuUGx1Z2lucy5J",
            "cGMuTWVzc2FnZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2IpcMessage), global::CrypTool.Plugins.Ipc.Messages.Ct2IpcMessage.Parser, new[]{ "SequenceNumber", "MessageType", "Body" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2Hello), global::CrypTool.Plugins.Ipc.Messages.Ct2Hello.Parser, new[]{ "ProtocolVersion", "ProgramName", "ProgramVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2Shutdown), global::CrypTool.Plugins.Ipc.Messages.Ct2Shutdown.Parser, new[]{ "Reason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2Values), global::CrypTool.Plugins.Ipc.Messages.Ct2Values.Parser, new[]{ "PinId", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2LogEntry), global::CrypTool.Plugins.Ipc.Messages.Ct2LogEntry.Parser, new[]{ "LogLevel", "Entry" }, null, new[]{ typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2LogEntry.Types.LogLevel) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2Progress), global::CrypTool.Plugins.Ipc.Messages.Ct2Progress.Parser, new[]{ "MaxValue", "CurrentValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::CrypTool.Plugins.Ipc.Messages.Ct2Goodbye), global::CrypTool.Plugins.Ipc.Messages.Ct2Goodbye.Parser, new[]{ "ExitCode", "ExitMessage" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// container for other messages
  /// </summary>
  public sealed partial class Ct2IpcMessage : pb::IMessage<Ct2IpcMessage> {
    private static readonly pb::MessageParser<Ct2IpcMessage> _parser = new pb::MessageParser<Ct2IpcMessage>(() => new Ct2IpcMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ct2IpcMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrypTool.Plugins.Ipc.Messages.Ct2IpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2IpcMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2IpcMessage(Ct2IpcMessage other) : this() {
      sequenceNumber_ = other.sequenceNumber_;
      messageType_ = other.messageType_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2IpcMessage Clone() {
      return new Ct2IpcMessage(this);
    }

    /// <summary>Field number for the "sequenceNumber" field.</summary>
    public const int SequenceNumberFieldNumber = 1;
    private long sequenceNumber_;
    /// <summary>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "messageType" field.</summary>
    public const int MessageTypeFieldNumber = 2;
    private int messageType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 3;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ct2IpcMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ct2IpcMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SequenceNumber != other.SequenceNumber) return false;
      if (MessageType != other.MessageType) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SequenceNumber != 0L) hash ^= SequenceNumber.GetHashCode();
      if (MessageType != 0) hash ^= MessageType.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SequenceNumber != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SequenceNumber);
      }
      if (MessageType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MessageType);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SequenceNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SequenceNumber);
      }
      if (MessageType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageType);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ct2IpcMessage other) {
      if (other == null) {
        return;
      }
      if (other.SequenceNumber != 0L) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.MessageType != 0) {
        MessageType = other.MessageType;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SequenceNumber = input.ReadInt64();
            break;
          }
          case 16: {
            MessageType = input.ReadInt32();
            break;
          }
          case 26: {
            Body = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// type 1
  /// </summary>
  public sealed partial class Ct2Hello : pb::IMessage<Ct2Hello> {
    private static readonly pb::MessageParser<Ct2Hello> _parser = new pb::MessageParser<Ct2Hello>(() => new Ct2Hello());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ct2Hello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrypTool.Plugins.Ipc.Messages.Ct2IpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Hello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Hello(Ct2Hello other) : this() {
      protocolVersion_ = other.protocolVersion_;
      programName_ = other.programName_;
      programVersion_ = other.programVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Hello Clone() {
      return new Ct2Hello(this);
    }

    /// <summary>Field number for the "protocolVersion" field.</summary>
    public const int ProtocolVersionFieldNumber = 1;
    private int protocolVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolVersion {
      get { return protocolVersion_; }
      set {
        protocolVersion_ = value;
      }
    }

    /// <summary>Field number for the "programName" field.</summary>
    public const int ProgramNameFieldNumber = 2;
    private string programName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramName {
      get { return programName_; }
      set {
        programName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "programVersion" field.</summary>
    public const int ProgramVersionFieldNumber = 3;
    private string programVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProgramVersion {
      get { return programVersion_; }
      set {
        programVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ct2Hello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ct2Hello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolVersion != other.ProtocolVersion) return false;
      if (ProgramName != other.ProgramName) return false;
      if (ProgramVersion != other.ProgramVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolVersion != 0) hash ^= ProtocolVersion.GetHashCode();
      if (ProgramName.Length != 0) hash ^= ProgramName.GetHashCode();
      if (ProgramVersion.Length != 0) hash ^= ProgramVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProtocolVersion);
      }
      if (ProgramName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ProgramName);
      }
      if (ProgramVersion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProgramVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolVersion);
      }
      if (ProgramName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramName);
      }
      if (ProgramVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProgramVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ct2Hello other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolVersion != 0) {
        ProtocolVersion = other.ProtocolVersion;
      }
      if (other.ProgramName.Length != 0) {
        ProgramName = other.ProgramName;
      }
      if (other.ProgramVersion.Length != 0) {
        ProgramVersion = other.ProgramVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolVersion = input.ReadInt32();
            break;
          }
          case 18: {
            ProgramName = input.ReadString();
            break;
          }
          case 26: {
            ProgramVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// type 2
  /// </summary>
  public sealed partial class Ct2Shutdown : pb::IMessage<Ct2Shutdown> {
    private static readonly pb::MessageParser<Ct2Shutdown> _parser = new pb::MessageParser<Ct2Shutdown>(() => new Ct2Shutdown());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ct2Shutdown> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrypTool.Plugins.Ipc.Messages.Ct2IpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Shutdown() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Shutdown(Ct2Shutdown other) : this() {
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Shutdown Clone() {
      return new Ct2Shutdown(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private string reason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ct2Shutdown);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ct2Shutdown other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reason.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ct2Shutdown other) {
      if (other == null) {
        return;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// type 3
  /// </summary>
  public sealed partial class Ct2Values : pb::IMessage<Ct2Values> {
    private static readonly pb::MessageParser<Ct2Values> _parser = new pb::MessageParser<Ct2Values>(() => new Ct2Values());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ct2Values> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrypTool.Plugins.Ipc.Messages.Ct2IpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Values() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Values(Ct2Values other) : this() {
      pinId_ = other.pinId_.Clone();
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Values Clone() {
      return new Ct2Values(this);
    }

    /// <summary>Field number for the "pinId" field.</summary>
    public const int PinIdFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_pinId_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> pinId_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PinId {
      get { return pinId_; }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_value_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> value_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ct2Values);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ct2Values other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pinId_.Equals(other.pinId_)) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pinId_.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pinId_.WriteTo(output, _repeated_pinId_codec);
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pinId_.CalculateSize(_repeated_pinId_codec);
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ct2Values other) {
      if (other == null) {
        return;
      }
      pinId_.Add(other.pinId_);
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            pinId_.AddEntriesFrom(input, _repeated_pinId_codec);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// type 4
  /// </summary>
  public sealed partial class Ct2LogEntry : pb::IMessage<Ct2LogEntry> {
    private static readonly pb::MessageParser<Ct2LogEntry> _parser = new pb::MessageParser<Ct2LogEntry>(() => new Ct2LogEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ct2LogEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrypTool.Plugins.Ipc.Messages.Ct2IpcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2LogEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2LogEntry(Ct2LogEntry other) : this() {
      logLevel_ = other.logLevel_;
      entry_ = other.entry_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2LogEntry Clone() {
      return new Ct2LogEntry(this);
    }

    /// <summary>Field number for the "logLevel" field.</summary>
    public const int LogLevelFieldNumber = 1;
    private global::CrypTool.Plugins.Ipc.Messages.Ct2LogEntry.Types.LogLevel logLevel_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::CrypTool.Plugins.Ipc.Messages.Ct2LogEntry.Types.LogLevel LogLevel {
      get { return logLevel_; }
      set {
        logLevel_ = value;
      }
    }

    /// <summary>Field number for the "entry" field.</summary>
    public const int EntryFieldNumber = 2;
    private string entry_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entry {
      get { return entry_; }
      set {
        entry_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ct2LogEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ct2LogEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LogLevel != other.LogLevel) return false;
      if (Entry != other.Entry) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LogLevel != 0) hash ^= LogLevel.GetHashCode();
      if (Entry.Length != 0) hash ^= Entry.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LogLevel != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) LogLevel);
      }
      if (Entry.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Entry);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LogLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogLevel);
      }
      if (Entry.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entry);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ct2LogEntry other) {
      if (other == null) {
        return;
      }
      if (other.LogLevel != 0) {
        LogLevel = other.LogLevel;
      }
      if (other.Entry.Length != 0) {
        Entry = other.Entry;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            logLevel_ = (global::CrypTool.Plugins.Ipc.Messages.Ct2LogEntry.Types.LogLevel) input.ReadEnum();
            break;
          }
          case 18: {
            Entry = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Ct2LogEntry message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum LogLevel {
        [pbr::OriginalName("CT2ERROR")] Ct2Error = 0,
        [pbr::OriginalName("CT2WARNING")] Ct2Warning = 1,
        [pbr::OriginalName("CT2INFO")] Ct2Info = 2,
        [pbr::OriginalName("CT2DEBUG")] Ct2Debug = 3,
        [pbr::OriginalName("CT2BALLOON")] Ct2Balloon = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// type 5
  /// </summary>
  public sealed partial class Ct2Progress : pb::IMessage<Ct2Progress> {
    private static readonly pb::MessageParser<Ct2Progress> _parser = new pb::MessageParser<Ct2Progress>(() => new Ct2Progress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ct2Progress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrypTool.Plugins.Ipc.Messages.Ct2IpcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Progress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Progress(Ct2Progress other) : this() {
      maxValue_ = other.maxValue_;
      currentValue_ = other.currentValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Progress Clone() {
      return new Ct2Progress(this);
    }

    /// <summary>Field number for the "maxValue" field.</summary>
    public const int MaxValueFieldNumber = 1;
    private double maxValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxValue {
      get { return maxValue_; }
      set {
        maxValue_ = value;
      }
    }

    /// <summary>Field number for the "currentValue" field.</summary>
    public const int CurrentValueFieldNumber = 2;
    private double currentValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CurrentValue {
      get { return currentValue_; }
      set {
        currentValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ct2Progress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ct2Progress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxValue, other.MaxValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CurrentValue, other.CurrentValue)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxValue);
      if (CurrentValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CurrentValue);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxValue != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(MaxValue);
      }
      if (CurrentValue != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(CurrentValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxValue != 0D) {
        size += 1 + 8;
      }
      if (CurrentValue != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ct2Progress other) {
      if (other == null) {
        return;
      }
      if (other.MaxValue != 0D) {
        MaxValue = other.MaxValue;
      }
      if (other.CurrentValue != 0D) {
        CurrentValue = other.CurrentValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MaxValue = input.ReadDouble();
            break;
          }
          case 17: {
            CurrentValue = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// type 6
  /// </summary>
  public sealed partial class Ct2Goodbye : pb::IMessage<Ct2Goodbye> {
    private static readonly pb::MessageParser<Ct2Goodbye> _parser = new pb::MessageParser<Ct2Goodbye>(() => new Ct2Goodbye());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ct2Goodbye> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::CrypTool.Plugins.Ipc.Messages.Ct2IpcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Goodbye() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Goodbye(Ct2Goodbye other) : this() {
      exitCode_ = other.exitCode_;
      exitMessage_ = other.exitMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ct2Goodbye Clone() {
      return new Ct2Goodbye(this);
    }

    /// <summary>Field number for the "exitCode" field.</summary>
    public const int ExitCodeFieldNumber = 1;
    private int exitCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExitCode {
      get { return exitCode_; }
      set {
        exitCode_ = value;
      }
    }

    /// <summary>Field number for the "exitMessage" field.</summary>
    public const int ExitMessageFieldNumber = 2;
    private string exitMessage_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExitMessage {
      get { return exitMessage_; }
      set {
        exitMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ct2Goodbye);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ct2Goodbye other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExitCode != other.ExitCode) return false;
      if (ExitMessage != other.ExitMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExitCode != 0) hash ^= ExitCode.GetHashCode();
      if (ExitMessage.Length != 0) hash ^= ExitMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExitCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ExitCode);
      }
      if (ExitMessage.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExitMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExitCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExitCode);
      }
      if (ExitMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExitMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ct2Goodbye other) {
      if (other == null) {
        return;
      }
      if (other.ExitCode != 0) {
        ExitCode = other.ExitCode;
      }
      if (other.ExitMessage.Length != 0) {
        ExitMessage = other.ExitMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExitCode = input.ReadInt32();
            break;
          }
          case 18: {
            ExitMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
