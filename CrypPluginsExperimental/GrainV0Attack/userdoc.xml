<?xml version="1.0" encoding="utf-8" ?>


<documentation>
  <language culture="en"/>

  <language culture="de-DE"/>

  <introduction lang="en">

    Grain v0 is a symmetric stream cipher which is based on two shift registers and a non-linear output function.
    The key size is 80 bits and the size of the initialization vector is 64 bits.
    According to the cipher's attack, we need to set the internal state of the LFSR in the final clock to zero state and then select NFSR randomly.
    Then in reverse we compute the keystream and the initial states of NFSR and LFSR. The frequency of 1s and 0s in the keystream, in the cases where we are dealing with a weak initialization
    process is 1/2 + 2^-6.3. Otherwise, each bit in the keystream has a probability of 1/2 for a "1".
    Attack terminates if the LFSR bits in positions 64 to 79 are 1.

  </introduction>

  <introduction lang="de-DE">
  </introduction>

  <usage lang="en">
    After dragging the GrainV0Attack component onto your workspace, you will have to attach a text input connector to data sources, which corresponds to
    the NFSR in the final clocking. You can add the data of the non-linear register manually or with a random generator. We need to mention here
    that the last method would take 20 minutes until you'll have the results.
    
    Then you have to connect three text output components to the 'Output' connectors, which correspond to the LFSR and NFSR at the initial state.
    NFSR bits in the output component indicate the secret key. LFSR bits indicate the IV. If you have chosen the random generator to fill the NFSR in the last state,
    then you have to add in the outputs of the attack two other text inputs which represent the right NFSR in the 160th state which gives a weak initialization 
    process and the NFSR that is currently being tested from the random generator.
    After that, drag into the workspace the Grain v0 cipher which takes as inputs the 2 outputs of the Grain v0 attack (Key and IV) and gives as output the
    keystream. Bring into the workspace the component "Frequency test" and connect the cipher's output with that in order to see the frequencies of 1s and 0s.

   
  </usage>

  <usage lang="de-DE">
  </usage>

  <presentation lang="en">
  </presentation>

  <presentation lang="de-DE">
  </presentation>

  <references>

    <linkReference>
      <link url="https://eprint.iacr.org/2009/109.pdf" lang="en" />
      <caption lang="en">Cryptanalysis of Stream Cipher Grain Family</caption>

    </linkReference>
  </references>

</documentation>