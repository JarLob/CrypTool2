<?xml version="1.0" encoding="utf-8"?>
<documentation>
  <language culture="en" />
  <language culture="zh-CN" />
  <language culture="ru" />
  <language culture="de-DE" />
  <introduction lang="en">
    A virtual machine, which allows to execute encrypted software, qualifies for secret program execution.<newline />
    If a user wants to get his program executed by a third party without revealing the input, output or the program itself, he can achieve that by encrypting his program (this only works for batch programs without later user interaction). The requirement of not knowing the input or output is not a mandatory one.
    In both cases the third party receives the encrypted program, which can be executed using the virtual machine. The encrypted result will then be returned to the user.<newline />
    To be able to execute an encrypted program, homomorphic encryption is used.<newline />
    The process of executing a program can be described as follows:
    <enum><item>Generate keys <!-- (<docRef item="CrypTool.Plugins.EncryptedVMKeyGen"/>) --></item><item>Assemble and encrypt program code into machine code <!-- (<docRef item="CrypTool.Plugins.EncryptedVMAssembler"/>) --></item><item><b>Execute the machine code</b></item><item>Decrypt and interpret the result <!-- (<docRef item="CrypTool.Plugins.EncryptedVMMemoryDisplay"/>) --></item></enum>
	All these steps are available by using plugins in <i>CrypTool 2</i>.<newline />
	The used virtual machine is based on <i>ShapeCPU</i> and works in conjunction with <i>SEAL</i> (Simple Encrypted Arithmetic Library), which implements the Fan-Vercauteren homomorphic cryptosystem.
	
	<section headline="Machine">
	  The virtual machine processes encrypted machine code and returns the resulting memory content.
	</section></introduction>
  <introduction lang="zh-CN">允许执行加密软件的虚拟机有资格执行秘密程序。如果用户希望在不泄露输入，输出或程序本身的情况下让第三方执行其程序，则可以通过对其程序进行加密来实现这一点（这仅适用于批处理程序，而无需以后的用户交互）。不知道输入或输出的要求不是强制性的。在这两种情况下，第三方都会接收加密的程序，该程序可以使用虚拟机执行。然后，加密的结果将返回给用户。为了能够执行加密程序，使用了同态加密。执行程序的过程如下：生成密钥将程序代码组装并加密为机器代码执行机器代码解密并解释结果所有这些步骤都可以通过使用CrypTool 2中的插件来使用。使用的虚拟机基于ShapeCPU并与SEAL（简单加密算法库）配合使用，后者实现了Fan-Vercauteren同态密码系统。虚拟机处理加密的机器代码并返回生成的内存内容。</introduction>
  <introduction lang="ru">Виртуальная машина, которая позволяет выполнять зашифрованное программное обеспечение, подходит для выполнения секретной программы. Если пользователь хочет получить свою программу, выполненную третьей стороной, не раскрывая ввод, вывод или сама программа, он может добиться этого, зашифровав свою программу (это работает только для пакетных программ без последующего взаимодействия с пользователем). Требование не знать ввод или вывод не является обязательным. В обоих случаях третья сторона получает зашифрованную программу, которая может быть выполнена с использованием виртуальной машины. Зашифрованный результат будет затем возвращен пользователю. Для выполнения зашифрованной программы используется гомоморфное шифрование. Процесс выполнения программы можно описать следующим образом: Генерировать ключи Собрать и зашифровать программный код в машинный код Выполнить машинный кодДископировать и интерпретировать результат Все эти шаги доступны с помощью плагинов в CrypTool 2. Используемая виртуальная машина основана на ShapeCPU и работает совместно с SEAL (простая зашифрованная арифметическая библиотека), которая реализует гомоморфную криптосистему Fan-Vercauteren. Виртуальная машина обрабатывает зашифрованный машинный код и возвращает полученное содержимое памяти.</introduction>
  <introduction lang="de-DE">
    Eine verschlüsselt arbeitende virtuelle Maschine erlaubt es, das auszuführende Programm zu verbergen.<newline />
    Möchte ein Nutzer sein Programm von einer dritten Partei ausführen lassen, ohne dass diese die Eingabe, den Algorithmus oder auch die Ausgabe kennt, so kann er dies durch die Verschlüsselung seines Programms samt Daten erreichen (dies geht nur für Batchprogramme ohne spätere User-Interaktion). Die Forderung nach der Unkenntlichmachung der Eingabe/Ausgabe kann aber auch entfallen.
    In beiden Fällen erhält die dritte Partei das verschlüsselte Programm und führt es mittels der virtuellen Maschine aus. Das verschlüsselte Ergebnis wird danach an den Nutzer zurückübermittelt.<newline />
    Die Möglichkeit, ein verschlüsseltes Programm auszuführen, wird durch die Nutzung eines homomorphen Kryptosystems erreicht.<newline />
    Der Ablauf beim Ausführen eines verschlüsselten Programms sieht wie folgt aus:
    <enum><item>Schlüsselgenerierung <!-- (<docRef item="CrypTool.Plugins.EncryptedVMKeyGen"/>) --></item><item>Assemblierung und Verschlüsselung des Programmcodes in Maschinencode <!-- (<docRef item="CrypTool.Plugins.EncryptedVMAssembler"/>) --></item><item><b>Ausführen des Maschinencodes</b></item><item>Entschlüsselung und Interpretation des Ergebnisses <!-- (<docRef item="CrypTool.Plugins.EncryptedVMMemoryDisplay"/>) --></item></enum>
    Alle diese Schritte sind einzeln als Plugins im <i>CrypTool 2</i> verfügbar.<newline />
    Die verschlüsselt arbeitende virtuelle Maschine basiert auf <i>ShapeCPU</i> und wird in Kombination mit der Kryptobibliothek <i>SEAL</i> (Simple Encrypted Arithmetic Library), welche die homomorphe Verschlüsselung nach <i>Fan-Vercauteren</i> umsetzt, genutzt.

    <section headline="Maschine">
	  Die virtuelle Maschine verarbeitet verschlüsselten Maschinencode und gibt den resultierenden Speicherinhalt zurück.
	</section></introduction>
  <usage lang="en">
    <section headline="Input">
	  The encrypted machine code input should be connected to the corresponding output of the <i>Assembler</i>.
	  All keys and the encryption parameters should be connected to the <i>Key Generator</i>.
    </section>
    <section headline="Output">
	  The result of the evaluated program is the encrypted content of the memory. This should be supplied to the <i>Memory Display</i>.
    </section>
    <section headline="Cycles">
	  The number of instructions which the machine should execute.
    </section>
    <section headline="Progress bar">
      <list>
        <item>0%: Start of the plugin.</item>
        <item>20%: The machine is initialized</item>
        <item>25%: Loading of the machine is finished.</item>
        <item>100%: The machine code has been processed.</item>
      </list>
    </section>
  </usage>
  <usage lang="zh-CN">加密的机器代码输入应连接到汇编程序的相应输出。所有密钥和加密参数都应连接到密钥生成器。评估程序的结果是存储器的加密内容。应该将其提供给内存显示器。机器应执行的指令数。 0％：插件启动20％：机器初始化25％：机器加载完成100％：机器代码已处理。</usage>
  <usage lang="ru">Зашифрованный ввод машинного кода должен быть подключен к соответствующему выходу Ассемблера. Все ключи и параметры шифрования должны быть подключены к генератору ключей. Результатом оцениваемой программы является зашифрованное содержимое памяти. Это должно быть представлено на дисплее памяти. Количество команд, которые должен выполнить компьютер. 0%: начало плагина.20%: машина инициализирована25%: загрузка машины завершена.100%: машинный код обработан.</usage>
  <usage lang="de-DE">
    <section headline="Eingabe">
	  Der vom <i>Assembler</i> generierte, verschlüsselte Maschinencode ist vom Assembler zuzuführen<newline />
	  Alle Schlüssel und die dazugehörigen Parameter sind vom  <i>Schlüsselgenerator</i> zuzuführen.
    </section>
    <section headline="Ausgabe">
	  Der Speicherinhalt nach Abschluss der Berechnungen des Programms ist mit der Komponente <i>Speicher Anzeige</i> zu verbinden.
    </section>
    <section headline="Zyklen">
	  Die Anzahl der zu verarbeitenden Instruktionen.
    </section>
    <section headline="Fortschrittsanzeige">
      <list>
        <item>0%: Start des Plugins.</item>
        <item>20%: Die Initialisierung ist erledigt.</item>
        <item>25%: Laden des Programms abgeschlossen.</item>
        <item>100%: Der Maschinencode wurde verarbeitet.</item>
      </list>
    </section>
  </usage>
  <presentation lang="en"></presentation>
  <presentation lang="de-DE"></presentation>
  <references>
    <linkReference>
      <link url="https://en.wikipedia.org/wiki/Homomorphic_encryption" lang="en" />
      <caption lang="en">Homomorphic encryption (Wikipedia)</caption>
      <link url="https://de.wikipedia.org/wiki/Homomorphe_Verschlüsselung" lang="de-DE" />
      <caption lang="de-DE">Homomorphe Verschlüsselung (Wikipedia)</caption>
    </linkReference>
    <linkReference>
      <link url="http://shapecpu.de/shape-cpu/" />
      <caption lang="en">ShapeCPU</caption>
    </linkReference>
    <linkReference>
      <link url="https://sealcrypto.codeplex.com/" />
      <caption lang="en">Simple Encrypted Arithmetic Library (SEAL)</caption>
    </linkReference>
    <linkReference>
      <link url="https://eprint.iacr.org/2012/144" />
      <caption lang="en">Somewhat Practical Fully Homomorphic Encryption (Fan-Vercauteren)</caption>
    </linkReference>
  </references>
</documentation>