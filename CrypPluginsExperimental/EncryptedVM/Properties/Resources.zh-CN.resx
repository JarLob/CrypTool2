<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EncryptedVM_Assemblerr_Log_Tooltip" xml:space="preserve">
    <value>组装日志</value>
  </data>
  <data name="EncryptedVM_Assembler_Log_Name" xml:space="preserve">
    <value>日志记录</value>
  </data>
  <data name="EncryptedVM_Assembler_Mode_Name" xml:space="preserve">
    <value>从文件加载</value>
  </data>
  <data name="EncryptedVM_Assembler_Mode_Tooltip" xml:space="preserve">
    <value>是否从文件加载源代码</value>
  </data>
  <data name="EncryptedVM_Assembler_Name" xml:space="preserve">
    <value>EncryptedVM汇编器</value>
  </data>
  <data name="EncryptedVM_Assembler_Program_Name" xml:space="preserve">
    <value>程序</value>
  </data>
  <data name="EncryptedVM_Assembler_Program_Tooltip" xml:space="preserve">
    <value>组装程序</value>
  </data>
  <data name="EncryptedVM_Assembler_SourceCode_Name" xml:space="preserve">
    <value>源代码</value>
  </data>
  <data name="EncryptedVM_Assembler_SourceCode_Tooltip" xml:space="preserve">
    <value>汇编源代码</value>
  </data>
  <data name="EncryptedVM_Assembler_SourcePath_Name" xml:space="preserve">
    <value>源代码路径</value>
  </data>
  <data name="EncryptedVM_Assembler_SourcePath_Tooltip" xml:space="preserve">
    <value>包含源代码的文件的路径</value>
  </data>
  <data name="EncryptedVM_Assembler_Tooltip" xml:space="preserve">
    <value>组装用于加密虚拟机的程序</value>
  </data>
  <data name="EncryptedVM_Keygen_KeySize_Name" xml:space="preserve">
    <value>多项式的幂（密钥大小）</value>
  </data>
  <data name="EncryptedVM_Keygen_KeySize_Tooltip" xml:space="preserve">
    <value>多项式模的幂</value>
  </data>
  <data name="EncryptedVM_Keygen_Mode_Name" xml:space="preserve">
    <value>加密</value>
  </data>
  <data name="EncryptedVM_Keygen_Mode_Tooltip" xml:space="preserve">
    <value>是否加密程序</value>
  </data>
  <data name="EncryptedVM_Keygen_Name" xml:space="preserve">
    <value>EncryptedVM Keygen</value>
  </data>
  <data name="EncryptedVM_Keygen_Tooltip" xml:space="preserve">
    <value>为加密的虚拟机生成密钥</value>
  </data>
  <data name="EncryptedVM_Machine_Cycles_Name" xml:space="preserve">
    <value>周期数</value>
  </data>
  <data name="EncryptedVM_Machine_Cycles_Tooltip" xml:space="preserve">
    <value>循环数</value>
  </data>
  <data name="EncryptedVM_Machine_Name" xml:space="preserve">
    <value>EncryptedVM计算机</value>
  </data>
  <data name="EncryptedVM_Machine_Tooltip" xml:space="preserve">
    <value>虚拟加密机</value>
  </data>
  <data name="EncryptedVM_MemoryDisplay_Name" xml:space="preserve">
    <value>加密的VM内存显示</value>
  </data>
  <data name="EncryptedVM_MemoryDisplay_Tooltip" xml:space="preserve">
    <value>解密EncryptedVM计算机的内存</value>
  </data>
  <data name="EncryptedVM_Memory_Decrypted_Name" xml:space="preserve">
    <value>解密的内存</value>
  </data>
  <data name="EncryptedVM_Memory_Decrypted_Tooltip" xml:space="preserve">
    <value>机器（或其一部分）的解密内存</value>
  </data>
  <data name="EncryptedVM_Memory_Encrypted_Name" xml:space="preserve">
    <value>加密记忆体</value>
  </data>
  <data name="EncryptedVM_Memory_Encrypted_Tooltip" xml:space="preserve">
    <value>机器的加密内存</value>
  </data>
  <data name="EncryptedVM_Memory_Rows_Name" xml:space="preserve">
    <value>行数</value>
  </data>
  <data name="EncryptedVM_Memory_Rows_Tooltip" xml:space="preserve">
    <value>要解密的行数</value>
  </data>
  <data name="EncryptionParameters_Name" xml:space="preserve">
    <value>参量</value>
  </data>
  <data name="EncryptionParameters_Tooltip" xml:space="preserve">
    <value>编码/加密/解密/解码参数</value>
  </data>
  <data name="EvaluationKeys_Name" xml:space="preserve">
    <value>评估键</value>
  </data>
  <data name="EvaluationKeys_Tooltip" xml:space="preserve">
    <value>对加密数据执行操作的密钥</value>
  </data>
  <data name="PublicKey_Name" xml:space="preserve">
    <value>公钥</value>
  </data>
  <data name="PublicKey_Tooltip" xml:space="preserve">
    <value>加密数据的密钥</value>
  </data>
  <data name="SecretKey_Name" xml:space="preserve">
    <value>密钥</value>
  </data>
  <data name="SecretKey_Tooltip" xml:space="preserve">
    <value>解密数据的钥匙</value>
  </data>
  <data name="Ac_specified_multiple_times" xml:space="preserve">
    <value>使用第一次出现，多次指定了AC（行：{0}）</value>
  </data>
  <data name="Failed_to_read_source_code_file" xml:space="preserve">
    <value>无法从\“ {0} \”读取源代码</value>
  </data>
  <data name="Invalid_program_no_code" xml:space="preserve">
    <value>无效的程序（不包含代码）</value>
  </data>
  <data name="Invalid_program_too_much_code" xml:space="preserve">
    <value>无效的程序（代码太多）</value>
  </data>
  <data name="Invalid_syntax" xml:space="preserve">
    <value>语法无效（行：{0}，命令：{1}）</value>
  </data>
  <data name="Label_not_found" xml:space="preserve">
    <value>找不到标签\“ {0} \”（行：{1}，命令：{2}）</value>
  </data>
  <data name="Label_used_multiple_times" xml:space="preserve">
    <value>标签\“ {0} \”多次使用（行：{1}，命令：{2}）</value>
  </data>
  <data name="No_ac_defined" xml:space="preserve">
    <value>未定义AC（行：{0}）</value>
  </data>
  <data name="No_pc_defined" xml:space="preserve">
    <value>未定义PC（行：{0}）</value>
  </data>
  <data name="Pc_label_not_found" xml:space="preserve">
    <value>找不到标签\“ {0} \”（行：{1}）</value>
  </data>
  <data name="Pc_specified_multiple_times" xml:space="preserve">
    <value>使用第一次出现多次指定PC（行：{0}）</value>
  </data>
  <data name="EncryptedVM_Machine_Output_Name" xml:space="preserve">
    <value>结果</value>
  </data>
  <data name="EncryptedVM_Machine_Output_Tooltip" xml:space="preserve">
    <value>程序结果</value>
  </data>
  <data name="Dump_End" xml:space="preserve">
    <value>-&amp;gt;转储结束&amp;lt;-</value>
  </data>
  <data name="Dump_Start" xml:space="preserve">
    <value>-&amp;gt; DUMP_START &amp;lt;-</value>
  </data>
  <data name="End_Cycle" xml:space="preserve">
    <value>-&amp;gt;结束过程循环&amp;lt;-</value>
  </data>
  <data name="Executing_Program" xml:space="preserve">
    <value>执行程序...</value>
  </data>
  <data name="Failed_loading_program" xml:space="preserve">
    <value>加载程序失败</value>
  </data>
  <data name="Finished_executing_program" xml:space="preserve">
    <value>...完成的执行程序</value>
  </data>
  <data name="Init_Machine" xml:space="preserve">
    <value>初始化机器...</value>
  </data>
  <data name="Loading_Program" xml:space="preserve">
    <value>正在载入程式...</value>
  </data>
  <data name="Phase_1" xml:space="preserve">
    <value>阶段1：提取</value>
  </data>
  <data name="Phase_2" xml:space="preserve">
    <value>第二阶段：解码</value>
  </data>
  <data name="Phase_3" xml:space="preserve">
    <value>第三阶段：执行</value>
  </data>
  <data name="Phase_4" xml:space="preserve">
    <value>阶段4：加载/存储</value>
  </data>
  <data name="Phase_5" xml:space="preserve">
    <value>阶段5：重写寄存器/标志</value>
  </data>
  <data name="Start_Cycle" xml:space="preserve">
    <value>-&amp;gt; START-PROCESS-CYCLE &amp;lt;-</value>
  </data>
  <data name="EncryptedVM_Memory_Mode_Name" xml:space="preserve">
    <value>运行选择算法</value>
  </data>
  <data name="EncryptedVM_Memory_Mode_Tooltip" xml:space="preserve">
    <value>是显示内存行还是由程序选择</value>
  </data>
  <data name="EncryptedVM_Memory_Program_Name" xml:space="preserve">
    <value>内存显示程序</value>
  </data>
  <data name="EncryptedVM_Memory_Program_Tooltip" xml:space="preserve">
    <value>程序显示内存内容</value>
  </data>
</root>