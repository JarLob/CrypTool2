<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EncryptedVM_Assemblerr_Log_Tooltip" xml:space="preserve">
    <value>Assemblierungsprotokoll</value>
  </data>
  <data name="EncryptedVM_Assembler_Log_Name" xml:space="preserve">
    <value>Protokoll</value>
  </data>
  <data name="EncryptedVM_Assembler_Mode_Name" xml:space="preserve">
    <value>Aus Datei laden</value>
  </data>
  <data name="EncryptedVM_Assembler_Mode_Tooltip" xml:space="preserve">
    <value>Ob der Quelltext aus einer Datei geladen werden soll</value>
  </data>
  <data name="EncryptedVM_Assembler_Name" xml:space="preserve">
    <value>EncryptedVM Assembler</value>
  </data>
  <data name="EncryptedVM_Assembler_Program_Name" xml:space="preserve">
    <value>Programm</value>
  </data>
  <data name="EncryptedVM_Assembler_Program_Tooltip" xml:space="preserve">
    <value>Assembliertes Programm</value>
  </data>
  <data name="EncryptedVM_Assembler_SourceCode_Name" xml:space="preserve">
    <value>Quelltext</value>
  </data>
  <data name="EncryptedVM_Assembler_SourceCode_Tooltip" xml:space="preserve">
    <value>Zu assemblierender Quelltext</value>
  </data>
  <data name="EncryptedVM_Assembler_SourcePath_Name" xml:space="preserve">
    <value>Quelltextpfad</value>
  </data>
  <data name="EncryptedVM_Assembler_SourcePath_Tooltip" xml:space="preserve">
    <value>Pfad zur Datei die den Quelltext enthält</value>
  </data>
  <data name="EncryptedVM_Assembler_Tooltip" xml:space="preserve">
    <value>Assembliert ein Programm für die verschlüsselte virtuelle Maschine</value>
  </data>
  <data name="EncryptedVM_Keygen_KeySize_Name" xml:space="preserve">
    <value>Grad des Poly-Modulos (Schlüsselgröße)</value>
  </data>
  <data name="EncryptedVM_Keygen_KeySize_Tooltip" xml:space="preserve">
    <value>Der Grad des polynomiellen Modulos</value>
  </data>
  <data name="EncryptedVM_Keygen_Mode_Name" xml:space="preserve">
    <value>Mit Verschlüsselung</value>
  </data>
  <data name="EncryptedVM_Keygen_Mode_Tooltip" xml:space="preserve">
    <value>Ob das Programm verschlüsselt werden soll</value>
  </data>
  <data name="EncryptedVM_Keygen_Name" xml:space="preserve">
    <value>EncryptedVM Schlüsselgenerator</value>
  </data>
  <data name="EncryptedVM_Keygen_Tooltip" xml:space="preserve">
    <value>Generiert Schlüssel für die verschlüsselte virtuelle Maschine</value>
  </data>
  <data name="EncryptedVM_Machine_Cycles_Name" xml:space="preserve">
    <value>Zyklen</value>
  </data>
  <data name="EncryptedVM_Machine_Cycles_Tooltip" xml:space="preserve">
    <value>Anzahl der Zyklen</value>
  </data>
  <data name="EncryptedVM_Machine_Name" xml:space="preserve">
    <value>EncryptedVM Maschine</value>
  </data>
  <data name="EncryptedVM_Machine_Tooltip" xml:space="preserve">
    <value>Verschlüsselte virtuelle Maschine</value>
  </data>
  <data name="EncryptedVM_MemoryDisplay_Name" xml:space="preserve">
    <value>EncryptedVM Speicheranzeige</value>
  </data>
  <data name="EncryptedVM_MemoryDisplay_Tooltip" xml:space="preserve">
    <value>Entschlüssele den Speicher einer EncryptedVM Maschine</value>
  </data>
  <data name="EncryptedVM_Memory_Decrypted_Name" xml:space="preserve">
    <value>Entschlüsselter Speicher</value>
  </data>
  <data name="EncryptedVM_Memory_Decrypted_Tooltip" xml:space="preserve">
    <value>Der entschlüsselter Speicher der Maschine (oder Teile dessen)</value>
  </data>
  <data name="EncryptedVM_Memory_Encrypted_Name" xml:space="preserve">
    <value>Verschlüsselter Speicher</value>
  </data>
  <data name="EncryptedVM_Memory_Encrypted_Tooltip" xml:space="preserve">
    <value>Der verschlüsselte Speicher der Maschine</value>
  </data>
  <data name="EncryptedVM_Memory_Rows_Name" xml:space="preserve">
    <value>Reihen</value>
  </data>
  <data name="EncryptedVM_Memory_Rows_Tooltip" xml:space="preserve">
    <value>Anzahl der zu entschlüsselnden Reihen</value>
  </data>
  <data name="EncryptionParameters_Name" xml:space="preserve">
    <value>Parameter</value>
  </data>
  <data name="EncryptionParameters_Tooltip" xml:space="preserve">
    <value>Parameter zum Kodieren/Verschlüsseln/Entschlüsseln/Dekodieren</value>
  </data>
  <data name="EvaluationKeys_Name" xml:space="preserve">
    <value>Evaluationsschlüssel</value>
  </data>
  <data name="EvaluationKeys_Tooltip" xml:space="preserve">
    <value>Schlüssel zur Berechnung von Daten</value>
  </data>
  <data name="PublicKey_Name" xml:space="preserve">
    <value>Öffentlicher Schlüssel</value>
  </data>
  <data name="PublicKey_Tooltip" xml:space="preserve">
    <value>Schlüssel zum Verschlüsseln von Daten</value>
  </data>
  <data name="SecretKey_Name" xml:space="preserve">
    <value>Geheimer Schlüssel</value>
  </data>
  <data name="SecretKey_Tooltip" xml:space="preserve">
    <value>Schlüssel zum Entschlüsseln von Daten</value>
  </data>
  <data name="Ac_specified_multiple_times" xml:space="preserve">
    <value>AC mehrfach definiert; erste Definiton wird verwendet (line: {0})</value>
  </data>
  <data name="Failed_to_read_source_code_file" xml:space="preserve">
    <value>Quelltext konnte nicht von \"{0}\" geladen werden</value>
  </data>
  <data name="Invalid_program_no_code" xml:space="preserve">
    <value>Invalides Programm (enthält keine Instruktionen)</value>
  </data>
  <data name="Invalid_program_too_much_code" xml:space="preserve">
    <value>Invalides Programm (enthält zuviele Instruktionen)</value>
  </data>
  <data name="Invalid_syntax" xml:space="preserve">
    <value>Invalider Syntax (linie: {0}, kommando: {1})</value>
  </data>
  <data name="Label_not_found" xml:space="preserve">
    <value>Bezeichner \"{0}\" nicht gefunden (linie: {0}, kommando: {1})</value>
  </data>
  <data name="Label_used_multiple_times" xml:space="preserve">
    <value>Bezeichner \"{0}\" mehrfach deklariert (linie: {0}, kommando: {1})</value>
  </data>
  <data name="No_ac_defined" xml:space="preserve">
    <value>Kein AC definiert (linie: {0})</value>
  </data>
  <data name="No_pc_defined" xml:space="preserve">
    <value>Kein PC definiert (linie: {0})</value>
  </data>
  <data name="Pc_label_not_found" xml:space="preserve">
    <value>Bezeichner \"{0}\" nicht gefunden (linie: {1})</value>
  </data>
  <data name="Pc_specified_multiple_times" xml:space="preserve">
    <value>PC mehrfach definiert; erste Definiton wird verwendet (line: {0})</value>
  </data>
  <data name="EncryptedVM_Machine_Output_Name" xml:space="preserve">
    <value>Ergebnis</value>
  </data>
  <data name="EncryptedVM_Machine_Output_Tooltip" xml:space="preserve">
    <value>Ergebnis des Programmes</value>
  </data>
  <data name="Dump_End" xml:space="preserve">
    <value>-&gt; SPEICHERABBILD-ENDE &lt;-</value>
  </data>
  <data name="Dump_Start" xml:space="preserve">
    <value>-&gt; SPEICHERABBILD-BEGINN &lt;-</value>
  </data>
  <data name="End_Cycle" xml:space="preserve">
    <value>-&gt; PROZESS-ZYKLUS-ENDE &lt;-</value>
  </data>
  <data name="Executing_Program" xml:space="preserve">
    <value>Programm wird ausgeführt...</value>
  </data>
  <data name="Failed_loading_program" xml:space="preserve">
    <value>Laden des Programmes fehlgeschlagen</value>
  </data>
  <data name="Finished_executing_program" xml:space="preserve">
    <value>...Ausführung des Programmes beendet</value>
  </data>
  <data name="Init_Machine" xml:space="preserve">
    <value>Initialisierung der Maschine...</value>
  </data>
  <data name="Loading_Program" xml:space="preserve">
    <value>Lade Programm...</value>
  </data>
  <data name="Phase_1" xml:space="preserve">
    <value>PHASE 1: Holen</value>
  </data>
  <data name="Phase_2" xml:space="preserve">
    <value>PHASE 2: Dekodieren</value>
  </data>
  <data name="Phase_3" xml:space="preserve">
    <value>PHASE 3: Ausführen</value>
  </data>
  <data name="Phase_4" xml:space="preserve">
    <value>PHASE 4: Laden / Speichern</value>
  </data>
  <data name="Phase_5" xml:space="preserve">
    <value>PHASE 5: Register / Statusindikator neu schreiben</value>
  </data>
  <data name="Start_Cycle" xml:space="preserve">
    <value>-&gt; PROZESS-ZYKLUS-BEGINN &lt;-</value>
  </data>
  <data name="EncryptedVM_Memory_Mode_Name" xml:space="preserve">
    <value>Selektierungsalgorithmus nutzen</value>
  </data>
  <data name="EncryptedVM_Memory_Mode_Tooltip" xml:space="preserve">
    <value>Ob die Reihen des Speichers oder die Selektion des Programms angezeigt werden soll</value>
  </data>
  <data name="EncryptedVM_Memory_Program_Name" xml:space="preserve">
    <value>Speicheranzeigeprogramm</value>
  </data>
  <data name="EncryptedVM_Memory_Program_Tooltip" xml:space="preserve">
    <value>Programm zum Anzeigen des Speichers</value>
  </data>
</root>