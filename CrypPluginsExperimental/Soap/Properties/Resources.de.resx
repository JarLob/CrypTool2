<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
	
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	  <data name="PluginCaption" xml:space="preserve">
    <value>SoapMessage</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>Represents a SoapMessage</value>
  </data>
  <data name="PluginDescriptionURL" xml:space="preserve">
    <value></value>
  </data>
    <data name="WsdlCaption" xml:space="preserve">
    <value>WSDL Input</value>
  </data>
  <data name="WsdlTooltip" xml:space="preserve">
    <value>WSDL to create the soap message</value>
  </data>
  <data name="PublicKeyCaption" xml:space="preserve">
    <value>Public-Key input</value>
  </data>
  <data name="PublicKeyTooltip" xml:space="preserve">
    <value>Encryption Key</value>
  </data>
  <data name="OutputStringCaption" xml:space="preserve">
    <value>SOAP output</value>
  </data>
  <data name="OutputStringTooltip" xml:space="preserve">
    <value>Send a SOAP Message</value>
  </data>
  <data name="InputStringCaption" xml:space="preserve">
    <value>SOAP input</value>
  </data>
  <data name="InputStringTooltip" xml:space="preserve">
    <value>Input a SOAP message to be processed by the Web Service</value>
  </data>
    <data name="AnimationSpeedCaption" xml:space="preserve">
    <value>Animationspeed</value>
  </data>
  <data name="AnimationSpeedTooltip" xml:space="preserve">
    <value>Set the speed for animations</value>
  </data>
  <data name="EncContentRadioCaption" xml:space="preserve">
    <value>Encryption Mode</value>
  </data>
  <data name="EncContentRadioTooltip" xml:space="preserve">
    <value>Choose wether to encrypt the XML-Element or the content of the XML-Element</value>
  </data>
  <data name="EncShowStepsCaption" xml:space="preserve">
    <value>Show Encryption Steps</value>
  </data>
  <data name="EncShowStepsTooltip" xml:space="preserve">
    <value>Shows the single steps to encrypt this element</value>
  </data>
  <data name="SigShowStepsCaption" xml:space="preserve">
    <value>Show Signature Steps</value>
  </data>
  <data name="SigShowStepsTooltip" xml:space="preserve">
    <value>Shows the single steps to create the signature</value>
  </data>
  <data name="SigXPathRefCaption" xml:space="preserve">
    <value>Use a XPath-Reference</value>
  </data>
  <data name="SigXPathRefTooltip" xml:space="preserve">
    <value>Use XPath References to reference the signed elements</value>
  </data>
  <data name="SignatureAlgCaption" xml:space="preserve">
    <value>Signature Algorithm</value>
  </data>
  <data name="SignatureAlgTooltip" xml:space="preserve">
    <value>Select the Signature Algorithm</value>
  </data>
  <data name="endAnimationCaption" xml:space="preserve">
    <value>End Animation</value>
  </data>
  <data name="endAnimationTooltip" xml:space="preserve">
    <value>Stop the animation and shows the final result</value>
  </data>
  <data name="playPauseCaption" xml:space="preserve">
    <value>Pause Restart</value>
  </data>
  <data name="playPauseTooltip" xml:space="preserve">
    <value>Starts or stops the animation</value>
  </data>
  <data name="resetSoapCaption" xml:space="preserve">
    <value>Reset Soap</value>
  </data>
  <data name="resetSoapTooltip" xml:space="preserve">
    <value>Resets the Soap Message</value>
  </data>
  <data name="sendSoapCaption" xml:space="preserve">
    <value>Send Soap</value>
  </data>
  <data name="sendSoapTooltip" xml:space="preserve">
    <value>Sends the Soap Message</value>
  </data>
</root>
