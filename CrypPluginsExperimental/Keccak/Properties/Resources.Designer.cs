//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Keccak.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Keccak.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap blankPage {
            get {
                object obj = ResourceManager.GetObject("blankPage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capacity.
        /// </summary>
        internal static string CapacityCaption {
            get {
                return ResourceManager.GetString("CapacityCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of capacity in bit.
        /// </summary>
        internal static string CapacityTooltip {
            get {
                return ResourceManager.GetString("CapacityTooltip", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap chi_modified_row_front {
            get {
                object obj = ResourceManager.GetObject("chi_modified_row_front", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap chi_modified_row_side {
            get {
                object obj = ResourceManager.GetObject("chi_modified_row_side", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap chi_modified_row_top {
            get {
                object obj = ResourceManager.GetObject("chi_modified_row_top", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap chi_step_detail {
            get {
                object obj = ResourceManager.GetObject("chi_step_detail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cube_4z {
            get {
                object obj = ResourceManager.GetObject("cube_4z", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cube_default {
            get {
                object obj = ResourceManager.GetObject("cube_default", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cube_default_bottom {
            get {
                object obj = ResourceManager.GetObject("cube_default_bottom", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cube_default_inner {
            get {
                object obj = ResourceManager.GetObject("cube_default_inner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cube_default_inner2 {
            get {
                object obj = ResourceManager.GetObject("cube_default_inner2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output stream for debug information.
        /// </summary>
        internal static string DebugDataStreamTooltip {
            get {
                return ResourceManager.GetString("DebugDataStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug output data.
        /// </summary>
        internal static string DebugStreamCaption {
            get {
                return ResourceManager.GetString("DebugStreamCaption", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap execution {
            get {
                object obj = ResourceManager.GetObject("execution", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap firstPage {
            get {
                object obj = ResourceManager.GetObject("firstPage", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input data to be hashed.
        /// </summary>
        internal static string InputDataStreamTooltip {
            get {
                return ResourceManager.GetString("InputDataStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input stream.
        /// </summary>
        internal static string InputStreamCaption {
            get {
                return ResourceManager.GetString("InputStreamCaption", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap introduction {
            get {
                object obj = ResourceManager.GetObject("introduction", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap iota_step_detail_table {
            get {
                object obj = ResourceManager.GetObject("iota_step_detail_table", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap iota_step_detail_table1 {
            get {
                object obj = ResourceManager.GetObject("iota_step_detail_table1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap keccakf_detail_chi {
            get {
                object obj = ResourceManager.GetObject("keccakf_detail_chi", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap keccakf_detail_iota {
            get {
                object obj = ResourceManager.GetObject("keccakf_detail_iota", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap keccakf_detail_pi {
            get {
                object obj = ResourceManager.GetObject("keccakf_detail_pi", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap keccakf_detail_rho {
            get {
                object obj = ResourceManager.GetObject("keccakf_detail_rho", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap keccakf_detail_theta {
            get {
                object obj = ResourceManager.GetObject("keccakf_detail_theta", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak version.
        /// </summary>
        internal static string KECCAKFunctionCaption {
            get {
                return ResourceManager.GetString("KECCAKFunctionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak.
        /// </summary>
        internal static string KeccakFunctionList1 {
            get {
                return ResourceManager.GetString("KeccakFunctionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-224.
        /// </summary>
        internal static string KeccakFunctionList2 {
            get {
                return ResourceManager.GetString("KeccakFunctionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-256.
        /// </summary>
        internal static string KeccakFunctionList3 {
            get {
                return ResourceManager.GetString("KeccakFunctionList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-384.
        /// </summary>
        internal static string KeccakFunctionList4 {
            get {
                return ResourceManager.GetString("KeccakFunctionList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-512.
        /// </summary>
        internal static string KeccakFunctionList5 {
            get {
                return ResourceManager.GetString("KeccakFunctionList5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the version of Keccak.
        /// </summary>
        internal static string KECCAKFunctionTooltip {
            get {
                return ResourceManager.GetString("KECCAKFunctionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjust manually.
        /// </summary>
        internal static string ManualSettingsCaption {
            get {
                return ResourceManager.GetString("ManualSettingsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the Keccak parameters manually.
        /// </summary>
        internal static string ManualSettingsTooltip {
            get {
                return ResourceManager.GetString("ManualSettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output data of the hashed value.
        /// </summary>
        internal static string OutputDataStreamTooltip {
            get {
                return ResourceManager.GetString("OutputDataStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output length.
        /// </summary>
        internal static string OutputLengthCaption {
            get {
                return ResourceManager.GetString("OutputLengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of output length in bit (must be divisible by 8).
        /// </summary>
        internal static string OutputLengthTooltip {
            get {
                return ResourceManager.GetString("OutputLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output length must be divisible by 8..
        /// </summary>
        internal static string OutputMatchError {
            get {
                return ResourceManager.GetString("OutputMatchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashed value.
        /// </summary>
        internal static string OutputStreamCaption {
            get {
                return ResourceManager.GetString("OutputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output too long. It will be truncated to 174,760 bit..
        /// </summary>
        internal static string OutputTooLongWarning {
            get {
                return ResourceManager.GetString("OutputTooLongWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        internal static string ParametersCaption {
            get {
                return ResourceManager.GetString("ParametersCaption", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap pi_cube_1 {
            get {
                object obj = ResourceManager.GetObject("pi_cube_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_cube_2 {
            get {
                object obj = ResourceManager.GetObject("pi_cube_2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_cube_3 {
            get {
                object obj = ResourceManager.GetObject("pi_cube_3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_cube_4 {
            get {
                object obj = ResourceManager.GetObject("pi_cube_4", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_cube_5 {
            get {
                object obj = ResourceManager.GetObject("pi_cube_5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_cube_6 {
            get {
                object obj = ResourceManager.GetObject("pi_cube_6", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_detailed_1 {
            get {
                object obj = ResourceManager.GetObject("pi_detailed_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_detailed_2 {
            get {
                object obj = ResourceManager.GetObject("pi_detailed_2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_detailed_3 {
            get {
                object obj = ResourceManager.GetObject("pi_detailed_3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_detailed_4 {
            get {
                object obj = ResourceManager.GetObject("pi_detailed_4", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_detailed_5 {
            get {
                object obj = ResourceManager.GetObject("pi_detailed_5", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pi_detailed_6 {
            get {
                object obj = ResourceManager.GetObject("pi_detailed_6", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak hash function.
        /// </summary>
        internal static string PluginDescription {
            get {
                return ResourceManager.GetString("PluginDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Absorbing Phase.
        /// </summary>
        internal static string PresAbsorbingPhase {
            get {
                return ResourceManager.GetString("PresAbsorbingPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input block #{0} is exclusive-or&apos;ed on the state. When examining the state before and after the absorbtion it can be observed that the capacity part (the lower part of the state) is unmodified..
        /// </summary>
        internal static string PresAbsorbingPhaseExplanation {
            get {
                return ResourceManager.GetString("PresAbsorbingPhaseExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every block p of the padded input is absorbed by the sponge state with a XOR operation. The input blocks affect the {0} bits of the r-bit part. The c-bit part is not affected. After the absorbtion the Keccak-f permutation is executed to diffuse the state bits..
        /// </summary>
        internal static string PresAbsorbingPhaseText {
            get {
                return ResourceManager.GetString("PresAbsorbingPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chi iterates over each row of the state..
        /// </summary>
        internal static string PresChiPhaseText {
            get {
                return ResourceManager.GetString("PresChiPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each bit of a row is exclusive-or&apos;ed with the logical conjunction of the two bits to the right of the considered bit. The first bit of those two bits is inverted before the logical conjunction..
        /// </summary>
        internal static string PresChiStepText {
            get {
                return ResourceManager.GetString("PresChiStepText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable presentation.
        /// </summary>
        internal static string PresentationCaption {
            get {
                return ResourceManager.GetString("PresentationCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presentation.
        /// </summary>
        internal static string PresentationGroupCaption {
            get {
                return ResourceManager.GetString("PresentationGroupCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check if presentation should be shown.
        /// </summary>
        internal static string PresentationTooltip {
            get {
                return ResourceManager.GetString("PresentationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution.
        /// </summary>
        internal static string PresExecution {
            get {
                return ResourceManager.GetString("PresExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit rate size: {0} bits.
        /// </summary>
        internal static string PresExecutionInfoBitRateSize {
            get {
                return ResourceManager.GetString("PresExecutionInfoBitRateSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capacity size: {0} bits.
        /// </summary>
        internal static string PresExecutionInfoCapacitySize {
            get {
                return ResourceManager.GetString("PresExecutionInfoCapacitySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State size: {0} bits.
        /// </summary>
        internal static string PresExecutionInfoStateSize {
            get {
                return ResourceManager.GetString("PresExecutionInfoStateSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input length: {0} bits = {1} bytes.
        /// </summary>
        internal static string PresExecutionMessageLength {
            get {
                return ResourceManager.GetString("PresExecutionMessageLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of input blocks (padded input length / bit rate size): {0}.
        /// </summary>
        internal static string PresExecutionNumberOfBlocks {
            get {
                return ResourceManager.GetString("PresExecutionNumberOfBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Padded input length: {0} bits = {1} bytes.
        /// </summary>
        internal static string PresExecutionPaddedMessageLength {
            get {
                return ResourceManager.GetString("PresExecutionPaddedMessageLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initialization.
        /// </summary>
        internal static string PresInitialization {
            get {
                return ResourceManager.GetString("PresInitialization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The state of the sponge construction is initialized. Every b bits of the state are initialized to 0. The state is partitioned into two parts: Capacity -- c bits and Bit Rate -- r bits. With the current settings the values are: b = {0}, c = {1} and r = {2}..
        /// </summary>
        internal static string PresInitializationText {
            get {
                return ResourceManager.GetString("PresInitializationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Information.
        /// </summary>
        internal static string PresInputInformation {
            get {
                return ResourceManager.GetString("PresInputInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introduction.
        /// </summary>
        internal static string PresIntroduction {
            get {
                return ResourceManager.GetString("PresIntroduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iota exclusive-or&apos;s a round constant on the first lane (x,y) = (1,1)..
        /// </summary>
        internal static string PresIotaPhaseText {
            get {
                return ResourceManager.GetString("PresIotaPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value of the current round constant is presented in the red rectangle between the green blocks. The green blocks present the old and new value of the lane. The round constants differ in each round..
        /// </summary>
        internal static string PresIotaStepText {
            get {
                return ResourceManager.GetString("PresIotaStepText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Iterations.
        /// </summary>
        internal static string PresKeccakFIterations {
            get {
                return ResourceManager.GetString("PresKeccakFIterations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak-f Permutation.
        /// </summary>
        internal static string PresKeccakFPhase {
            get {
                return ResourceManager.GetString("PresKeccakFPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Keccak-f permutation performs 12 + 2 * l rounds. Each round consists of five step mappings which permute the state in different ways. For the selected state size l equals {0} which makes a total of {1} rounds.&quot;.
        /// </summary>
        internal static string PresKeccakFPhaseText {
            get {
                return ResourceManager.GetString("PresKeccakFPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To facilitate the presentation of the step mappings, the state is represented as a three-dimensional cube. The row and column size is fixed to 5 bits. The lane size depends on the state size ({1} bits for the selected state size)..
        /// </summary>
        internal static string PresKeccakFStateMapping {
            get {
                return ResourceManager.GetString("PresKeccakFStateMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overview.
        /// </summary>
        internal static string PresOverview {
            get {
                return ResourceManager.GetString("PresOverview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pi permutes the lane positions within the state. The lane coordinates are shifted for improved visualization..
        /// </summary>
        internal static string PresPiPhaseText {
            get {
                return ResourceManager.GetString("PresPiPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each lane except the lane at (x,y) = (1,1) is moved to a different position. The right cube presents the new lane positions of the lanes indexed in the left cube. Already moved lanes that are grayed out..
        /// </summary>
        internal static string PresPiStepText {
            get {
                return ResourceManager.GetString("PresPiStepText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rho iterates over each lane of the state..
        /// </summary>
        internal static string PresRhoPhaseText {
            get {
                return ResourceManager.GetString("PresRhoPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each lane is right-rotated by a certain value (depicted in the red rectangle). The upper green block represents the lane before rotation, the lower green block after rotation..
        /// </summary>
        internal static string PresRhoStepText {
            get {
                return ResourceManager.GetString("PresRhoStepText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Round {0}/{1}.
        /// </summary>
        internal static string PresRoundOfRounds {
            get {
                return ResourceManager.GetString("PresRoundOfRounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sponge Construction Parameter.
        /// </summary>
        internal static string PresSpongeConstructionParameter {
            get {
                return ResourceManager.GetString("PresSpongeConstructionParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Squeezing Phase.
        /// </summary>
        internal static string PresSqueezingPhase {
            get {
                return ResourceManager.GetString("PresSqueezingPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0}-bit hash value is extracted from the bit rate part (upper part of the state)..
        /// </summary>
        internal static string PresSqueezingPhaseExplanation {
            get {
                return ResourceManager.GetString("PresSqueezingPhaseExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hash value is extracted from the r-bit part of the state (z). If the size of the requested output is larger than r, the state is permuted by Keccak-f iteratively until enough output is extracted..
        /// </summary>
        internal static string PresSqueezingPhaseText {
            get {
                return ResourceManager.GetString("PresSqueezingPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theta iterates over each column of the state..
        /// </summary>
        internal static string PresThetaPhaseText {
            get {
                return ResourceManager.GetString("PresThetaPhaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The parities of two nearby columns (turquoise and light green) are exclusive-or&apos;ed. The result is exclusive-or&apos;ed with each bit of the considered column (green)..
        /// </summary>
        internal static string PresThetaStepText {
            get {
                return ResourceManager.GetString("PresThetaStepText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit rate.
        /// </summary>
        internal static string RateCaption {
            get {
                return ResourceManager.GetString("RateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of bit rate in bit (must be divisible by 8).
        /// </summary>
        internal static string RateTooltip {
            get {
                return ResourceManager.GetString("RateTooltip", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap rho_modified_lane {
            get {
                object obj = ResourceManager.GetObject("rho_modified_lane", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap rho_modified_side_lane {
            get {
                object obj = ResourceManager.GetObject("rho_modified_side_lane", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap rho_modified_top_lane {
            get {
                object obj = ResourceManager.GetObject("rho_modified_top_lane", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap rho_table_marker2 {
            get {
                object obj = ResourceManager.GetObject("rho_table_marker2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap selected_rc2 {
            get {
                object obj = ResourceManager.GetObject("selected_rc2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State size.
        /// </summary>
        internal static string SelectedStateSizeCaption {
            get {
                return ResourceManager.GetString("SelectedStateSizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the size of the state in bit (must match the sum of bit rate and capacity).
        /// </summary>
        internal static string SelectedStateSizeTooltip {
            get {
                return ResourceManager.GetString("SelectedStateSizeTooltip", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap sponge_1_init {
            get {
                object obj = ResourceManager.GetObject("sponge_1_init", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sponge_2_absorb {
            get {
                object obj = ResourceManager.GetObject("sponge_2_absorb", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sponge_3_squeeze {
            get {
                object obj = ResourceManager.GetObject("sponge_3_squeeze", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sponge_4_keccakf {
            get {
                object obj = ResourceManager.GetObject("sponge_4_keccakf", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap sponge_5_keccakf_detail {
            get {
                object obj = ResourceManager.GetObject("sponge_5_keccakf_detail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap stateNotation {
            get {
                object obj = ResourceManager.GetObject("stateNotation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 25 Bit.
        /// </summary>
        internal static string StateSize0 {
            get {
                return ResourceManager.GetString("StateSize0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 50 Bit.
        /// </summary>
        internal static string StateSize1 {
            get {
                return ResourceManager.GetString("StateSize1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100 Bit.
        /// </summary>
        internal static string StateSize2 {
            get {
                return ResourceManager.GetString("StateSize2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 200 Bit.
        /// </summary>
        internal static string StateSize3 {
            get {
                return ResourceManager.GetString("StateSize3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 400 Bit.
        /// </summary>
        internal static string StateSize4 {
            get {
                return ResourceManager.GetString("StateSize4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 800 Bit.
        /// </summary>
        internal static string StateSize5 {
            get {
                return ResourceManager.GetString("StateSize5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1600 Bit.
        /// </summary>
        internal static string StateSize6 {
            get {
                return ResourceManager.GetString("StateSize6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sum of bit rate and capacity must match the selected state size..
        /// </summary>
        internal static string StateSizeMatchError {
            get {
                return ResourceManager.GetString("StateSizeMatchError", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap step_detail_iota3 {
            get {
                object obj = ResourceManager.GetObject("step_detail_iota3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap step_detail_rho {
            get {
                object obj = ResourceManager.GetObject("step_detail_rho", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap step_detail_rho_table {
            get {
                object obj = ResourceManager.GetObject("step_detail_rho_table", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_left_row_front {
            get {
                object obj = ResourceManager.GetObject("theta_left_row_front", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_left_row_side {
            get {
                object obj = ResourceManager.GetObject("theta_left_row_side", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_left_row_top {
            get {
                object obj = ResourceManager.GetObject("theta_left_row_top", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_modified_row_front {
            get {
                object obj = ResourceManager.GetObject("theta_modified_row_front", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_modified_row_side {
            get {
                object obj = ResourceManager.GetObject("theta_modified_row_side", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_modified_row_top {
            get {
                object obj = ResourceManager.GetObject("theta_modified_row_top", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_right_row_front {
            get {
                object obj = ResourceManager.GetObject("theta_right_row_front", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_right_row_side {
            get {
                object obj = ResourceManager.GetObject("theta_right_row_side", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_right_row_side_fading {
            get {
                object obj = ResourceManager.GetObject("theta_right_row_side_fading", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_right_row_top {
            get {
                object obj = ResourceManager.GetObject("theta_right_row_top", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_right_row_top_fading {
            get {
                object obj = ResourceManager.GetObject("theta_right_row_top_fading", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap theta_step_detail {
            get {
                object obj = ResourceManager.GetObject("theta_step_detail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
