//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Keccak.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Keccak.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capacity.
        /// </summary>
        internal static string CapacityCaption {
            get {
                return ResourceManager.GetString("CapacityCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of capacity in bit.
        /// </summary>
        internal static string CapacityTooltip {
            get {
                return ResourceManager.GetString("CapacityTooltip", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap cube_4z {
            get {
                object obj = ResourceManager.GetObject("cube_4z", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cube_default {
            get {
                object obj = ResourceManager.GetObject("cube_default", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap cube_default_inner {
            get {
                object obj = ResourceManager.GetObject("cube_default_inner", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output stream for debug information.
        /// </summary>
        internal static string DebugDataStreamTooltip {
            get {
                return ResourceManager.GetString("DebugDataStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug output data.
        /// </summary>
        internal static string DebugStreamCaption {
            get {
                return ResourceManager.GetString("DebugStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input data to be hashed.
        /// </summary>
        internal static string InputDataStreamTooltip {
            get {
                return ResourceManager.GetString("InputDataStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input stream.
        /// </summary>
        internal static string InputStreamCaption {
            get {
                return ResourceManager.GetString("InputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak version.
        /// </summary>
        internal static string KECCAKFunctionCaption {
            get {
                return ResourceManager.GetString("KECCAKFunctionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak.
        /// </summary>
        internal static string KeccakFunctionList1 {
            get {
                return ResourceManager.GetString("KeccakFunctionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-224.
        /// </summary>
        internal static string KeccakFunctionList2 {
            get {
                return ResourceManager.GetString("KeccakFunctionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-256.
        /// </summary>
        internal static string KeccakFunctionList3 {
            get {
                return ResourceManager.GetString("KeccakFunctionList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-384.
        /// </summary>
        internal static string KeccakFunctionList4 {
            get {
                return ResourceManager.GetString("KeccakFunctionList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SHA3-512.
        /// </summary>
        internal static string KeccakFunctionList5 {
            get {
                return ResourceManager.GetString("KeccakFunctionList5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the version of Keccak.
        /// </summary>
        internal static string KECCAKFunctionTooltip {
            get {
                return ResourceManager.GetString("KECCAKFunctionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adjust manually.
        /// </summary>
        internal static string ManualSettingsCaption {
            get {
                return ResourceManager.GetString("ManualSettingsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify the Keccak parameters manually.
        /// </summary>
        internal static string ManualSettingsTooltip {
            get {
                return ResourceManager.GetString("ManualSettingsTooltip", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap modified_firstrow3 {
            get {
                object obj = ResourceManager.GetObject("modified_firstrow3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap modified_firstrow4 {
            get {
                object obj = ResourceManager.GetObject("modified_firstrow4", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap modified_row {
            get {
                object obj = ResourceManager.GetObject("modified_row", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap modified_toprow {
            get {
                object obj = ResourceManager.GetObject("modified_toprow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output data of the hashed value.
        /// </summary>
        internal static string OutputDataStreamTooltip {
            get {
                return ResourceManager.GetString("OutputDataStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output length.
        /// </summary>
        internal static string OutputLengthCaption {
            get {
                return ResourceManager.GetString("OutputLengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of output length in bit (must be divisible by 8).
        /// </summary>
        internal static string OutputLengthTooltip {
            get {
                return ResourceManager.GetString("OutputLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output length must be divisible by 8..
        /// </summary>
        internal static string OutputMatchError {
            get {
                return ResourceManager.GetString("OutputMatchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashed value.
        /// </summary>
        internal static string OutputStreamCaption {
            get {
                return ResourceManager.GetString("OutputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output too long. It will be truncated to 174,760 bit..
        /// </summary>
        internal static string OutputTooLongWarning {
            get {
                return ResourceManager.GetString("OutputTooLongWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters.
        /// </summary>
        internal static string ParametersCaption {
            get {
                return ResourceManager.GetString("ParametersCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keccak hash function.
        /// </summary>
        internal static string PluginDescription {
            get {
                return ResourceManager.GetString("PluginDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bit rate.
        /// </summary>
        internal static string RateCaption {
            get {
                return ResourceManager.GetString("RateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size of bit rate in bit (must be divisible by 8).
        /// </summary>
        internal static string RateTooltip {
            get {
                return ResourceManager.GetString("RateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State size.
        /// </summary>
        internal static string SelectedStateSizeCaption {
            get {
                return ResourceManager.GetString("SelectedStateSizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the size of the state in bit (must match the sum of bit rate and capacity).
        /// </summary>
        internal static string SelectedStateSizeTooltip {
            get {
                return ResourceManager.GetString("SelectedStateSizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 25 Bit.
        /// </summary>
        internal static string StateSize0 {
            get {
                return ResourceManager.GetString("StateSize0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 50 Bit.
        /// </summary>
        internal static string StateSize1 {
            get {
                return ResourceManager.GetString("StateSize1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 100 Bit.
        /// </summary>
        internal static string StateSize2 {
            get {
                return ResourceManager.GetString("StateSize2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 200 Bit.
        /// </summary>
        internal static string StateSize3 {
            get {
                return ResourceManager.GetString("StateSize3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 400 Bit.
        /// </summary>
        internal static string StateSize4 {
            get {
                return ResourceManager.GetString("StateSize4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 800 Bit.
        /// </summary>
        internal static string StateSize5 {
            get {
                return ResourceManager.GetString("StateSize5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1600 Bit.
        /// </summary>
        internal static string StateSize6 {
            get {
                return ResourceManager.GetString("StateSize6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sum of bit rate and capacity must match the selected state size..
        /// </summary>
        internal static string StateSizeMatchError {
            get {
                return ResourceManager.GetString("StateSizeMatchError", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap step_detail {
            get {
                object obj = ResourceManager.GetObject("step_detail", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
