<?xml version="1.0" encoding="utf-8" ?>


<documentation>
  <language culture="en"/>
  
  <language culture="de-DE"/>

  <introduction lang="en">    
  
    Grain v1 is a symmetric stream cipher which is based on two shift registers and a non-linear output function. 
    The key size is 80 bits and the size of the initialization vector is 64 bits.
    According to the attack, we need to set the internal state of the LFSR in the final clock to zero state and then select NFSR randomly.
    Then in reverse we compute the keystream, LFSR, NFSR.
    Attack terminates if the LFSR bits in positions 64 to 79 are 1.
  
  </introduction>

  <introduction lang="de-DE">    
  </introduction>

  <usage lang="en">
    After dragging the GrainV1Attack component onto your workspace, you will have to attach a text input connector to data sources, which corresponds to
    the NFSR in the final clocking. You can add the data of the non-linear register manually but this is not very recommended, since it
    would take a lot of time until you'll find the weak key-IV pair.
    Also, you can attach a random generator as data source, which will generate random values for the NFSR until the attack is successful.
    Then you have to connect three text output components to the 'Output' connectors, which correspond to the LFSR and NFSR at the initial state.
    NFSR bits in the output component indicate the secret key.
    LFSR bits from positions 0 to 63 in the output component indicate the IV.

    NFSR input length must be 10 bytes.
  </usage>

  <usage lang="de-DE">
  </usage>
  
  <presentation lang="en">
  </presentation>
  
  <presentation lang="de-DE">
  </presentation>
  
  <references>
  </references>
</documentation>