//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sigaba.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sigaba.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action ähnelt.
        /// </summary>
        public static string ActionCaption {
            get {
                return ResourceManager.GetString("ActionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt ähnelt.
        /// </summary>
        public static string ActionList1 {
            get {
                return ResourceManager.GetString("ActionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt ähnelt.
        /// </summary>
        public static string ActionList2 {
            get {
                return ResourceManager.GetString("ActionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the mode of operation ähnelt.
        /// </summary>
        public static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case handling ähnelt.
        /// </summary>
        public static string CaseHandlingCaption {
            get {
                return ResourceManager.GetString("CaseHandlingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preserve case ähnelt.
        /// </summary>
        public static string CaseHandlingList1 {
            get {
                return ResourceManager.GetString("CaseHandlingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert to upper ähnelt.
        /// </summary>
        public static string CaseHandlingList2 {
            get {
                return ResourceManager.GetString("CaseHandlingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert to lower ähnelt.
        /// </summary>
        public static string CaseHandlingList3 {
            get {
                return ResourceManager.GetString("CaseHandlingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What should be done with upper and lower case letters? ähnelt.
        /// </summary>
        public static string CaseHandlingTooltip {
            get {
                return ResourceManager.GetString("CaseHandlingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alphabet maze ähnelt.
        /// </summary>
        public static string CipherGroup {
            get {
                return ResourceManager.GetString("CipherGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher key ähnelt.
        /// </summary>
        public static string CipherKeyCaption {
            get {
                return ResourceManager.GetString("CipherKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the starting positions of the cipher rotors ähnelt.
        /// </summary>
        public static string CipherKeyTooltip {
            get {
                return ResourceManager.GetString("CipherKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher wheel 1 (most left) ähnelt.
        /// </summary>
        public static string CipherRotor1Caption {
            get {
                return ResourceManager.GetString("CipherRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the first cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor1Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher wheel 2 ähnelt.
        /// </summary>
        public static string CipherRotor2Caption {
            get {
                return ResourceManager.GetString("CipherRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the second cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor2Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher wheel 3 ähnelt.
        /// </summary>
        public static string CipherRotor3Caption {
            get {
                return ResourceManager.GetString("CipherRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the third cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor3Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor3Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher wheel 4 ähnelt.
        /// </summary>
        public static string CipherRotor4Caption {
            get {
                return ResourceManager.GetString("CipherRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fourth cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor4Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor4Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher wheel 5 (most right) ähnelt.
        /// </summary>
        public static string CipherRotor5Caption {
            get {
                return ResourceManager.GetString("CipherRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fifth cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor5Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor5Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stepping maze ähnelt.
        /// </summary>
        public static string ControlGroup {
            get {
                return ResourceManager.GetString("ControlGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control key ähnelt.
        /// </summary>
        public static string ControlKeyCaption {
            get {
                return ResourceManager.GetString("ControlKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the starting positions of the control rotors ähnelt.
        /// </summary>
        public static string ControlKeyTooltip {
            get {
                return ResourceManager.GetString("ControlKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control wheel 1 (most right) ähnelt.
        /// </summary>
        public static string ControlRotor1Caption {
            get {
                return ResourceManager.GetString("ControlRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the first control wheel ähnelt.
        /// </summary>
        public static string ControlRotor1Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control wheel 2 ähnelt.
        /// </summary>
        public static string ControlRotor2Caption {
            get {
                return ResourceManager.GetString("ControlRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the second control wheel ähnelt.
        /// </summary>
        public static string ControlRotor2Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control wheel 3 ähnelt.
        /// </summary>
        public static string ControlRotor3Caption {
            get {
                return ResourceManager.GetString("ControlRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the third control wheel ähnelt.
        /// </summary>
        public static string ControlRotor3Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor3Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control wheel 4 ähnelt.
        /// </summary>
        public static string ControlRotor4Caption {
            get {
                return ResourceManager.GetString("ControlRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fourth control wheel ähnelt.
        /// </summary>
        public static string ControlRotor4Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor4Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control wheel 5 (most left) ähnelt.
        /// </summary>
        public static string ControlRotor5Caption {
            get {
                return ResourceManager.GetString("ControlRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fifth control wheel ähnelt.
        /// </summary>
        public static string ControlRotor5Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor5Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index maze ähnelt.
        /// </summary>
        public static string IndexGroup {
            get {
                return ResourceManager.GetString("IndexGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index key ähnelt.
        /// </summary>
        public static string IndexKeyCaption {
            get {
                return ResourceManager.GetString("IndexKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the starting positions of the index wheels ähnelt.
        /// </summary>
        public static string IndexKeyTooltip {
            get {
                return ResourceManager.GetString("IndexKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 1 (most left) ähnelt.
        /// </summary>
        public static string IndexRotor1Caption {
            get {
                return ResourceManager.GetString("IndexRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the first index wheel ähnelt.
        /// </summary>
        public static string IndexRotor1Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 2 ähnelt.
        /// </summary>
        public static string IndexRotor2Caption {
            get {
                return ResourceManager.GetString("IndexRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the second index wheel ähnelt.
        /// </summary>
        public static string IndexRotor2Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 3 ähnelt.
        /// </summary>
        public static string IndexRotor3Caption {
            get {
                return ResourceManager.GetString("IndexRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the third index wheel ähnelt.
        /// </summary>
        public static string IndexRotor3Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor3Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 4 ähnelt.
        /// </summary>
        public static string IndexRotor4Caption {
            get {
                return ResourceManager.GetString("IndexRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fourth index wheel ähnelt.
        /// </summary>
        public static string IndexRotor4Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor4Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 5  (most right) ähnelt.
        /// </summary>
        public static string IndexRotor5Caption {
            get {
                return ResourceManager.GetString("IndexRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fifth index wheel ähnelt.
        /// </summary>
        public static string IndexRotor5Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor5Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sigaba ähnelt.
        /// </summary>
        public static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die American rotor cipher machine ähnelt.
        /// </summary>
        public static string PluginToolTip {
            get {
                return ResourceManager.GetString("PluginToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor start positions ähnelt.
        /// </summary>
        public static string PositionOptionsGroup {
            get {
                return ResourceManager.GetString("PositionOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Presentation ähnelt.
        /// </summary>
        public static string PresentationGroup {
            get {
                return ResourceManager.GetString("PresentationGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speed ähnelt.
        /// </summary>
        public static string PresentationSpeedCaption {
            get {
                return ResourceManager.GetString("PresentationSpeedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the speed of the presentation animations ähnelt.
        /// </summary>
        public static string PresentationSpeedTooltip {
            get {
                return ResourceManager.GetString("PresentationSpeedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 01 ähnelt.
        /// </summary>
        public static string RotorA1 {
            get {
                return ResourceManager.GetString("RotorA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 10 ähnelt.
        /// </summary>
        public static string RotorA10 {
            get {
                return ResourceManager.GetString("RotorA10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 02 ähnelt.
        /// </summary>
        public static string RotorA2 {
            get {
                return ResourceManager.GetString("RotorA2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 03 ähnelt.
        /// </summary>
        public static string RotorA3 {
            get {
                return ResourceManager.GetString("RotorA3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 04 ähnelt.
        /// </summary>
        public static string RotorA4 {
            get {
                return ResourceManager.GetString("RotorA4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 05 ähnelt.
        /// </summary>
        public static string RotorA5 {
            get {
                return ResourceManager.GetString("RotorA5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 06 ähnelt.
        /// </summary>
        public static string RotorA6 {
            get {
                return ResourceManager.GetString("RotorA6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 07 ähnelt.
        /// </summary>
        public static string RotorA7 {
            get {
                return ResourceManager.GetString("RotorA7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 08 ähnelt.
        /// </summary>
        public static string RotorA8 {
            get {
                return ResourceManager.GetString("RotorA8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code wheel 09 ähnelt.
        /// </summary>
        public static string RotorA9 {
            get {
                return ResourceManager.GetString("RotorA9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 10 ähnelt.
        /// </summary>
        public static string RotorB1 {
            get {
                return ResourceManager.GetString("RotorB1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 20 ähnelt.
        /// </summary>
        public static string RotorB2 {
            get {
                return ResourceManager.GetString("RotorB2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 30 ähnelt.
        /// </summary>
        public static string RotorB3 {
            get {
                return ResourceManager.GetString("RotorB3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 40 ähnelt.
        /// </summary>
        public static string RotorB4 {
            get {
                return ResourceManager.GetString("RotorB4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheel 50 ähnelt.
        /// </summary>
        public static string RotorB5 {
            get {
                return ResourceManager.GetString("RotorB5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverse ähnelt.
        /// </summary>
        public static string RotorReverseCaption {
            get {
                return ResourceManager.GetString("RotorReverseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate the checkbox to revert this rotor. ähnelt.
        /// </summary>
        public static string RotorReverseTooltip {
            get {
                return ResourceManager.GetString("RotorReverseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test wheel ähnelt.
        /// </summary>
        public static string TestRotor {
            get {
                return ResourceManager.GetString("TestRotor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text options ähnelt.
        /// </summary>
        public static string TextOptionsGroup {
            get {
                return ResourceManager.GetString("TextOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Machine type ähnelt.
        /// </summary>
        public static string TypeCaption {
            get {
                return ResourceManager.GetString("TypeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the type of the Sigaba ähnelt.
        /// </summary>
        public static string TypeTooltip {
            get {
                return ResourceManager.GetString("TypeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown symbol handling ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingCaption {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore (leave unmodified) ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList1 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList2 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace with &apos;X&apos; ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList3 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What should be done with input characters that are not in the alphabet? ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingTooltip {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingTooltip", resourceCulture);
            }
        }
    }
}
