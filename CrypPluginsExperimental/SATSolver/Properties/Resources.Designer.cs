//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.239
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SATSolver.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SATSolver.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Append ähnelt.
        /// </summary>
        internal static string AppendStr {
            get {
                return ResourceManager.GetString("AppendStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Basic ähnelt.
        /// </summary>
        internal static string BasicStr {
            get {
                return ResourceManager.GetString("BasicStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conflict clause minimization ähnelt.
        /// </summary>
        internal static string CCMinCaption {
            get {
                return ResourceManager.GetString("CCMinCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reduces the size of the learnt conflict clause ähnelt.
        /// </summary>
        internal static string CCMinTooltip {
            get {
                return ResourceManager.GetString("CCMinTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clause activity decay factor ähnelt.
        /// </summary>
        internal static string ClauseDecayCaption {
            get {
                return ResourceManager.GetString("ClauseDecayCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the decay factor for clause activity (must be between 0.0 and 1.0, default=0.999) ähnelt.
        /// </summary>
        internal static string ClauseDecayTooltip {
            get {
                return ResourceManager.GetString("ClauseDecayTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear output ähnelt.
        /// </summary>
        internal static string ClearOutputCaption {
            get {
                return ResourceManager.GetString("ClearOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set if console output should be cleared after every execution ähnelt.
        /// </summary>
        internal static string ClearOutputTooltip {
            get {
                return ResourceManager.GetString("ClearOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Solver options ähnelt.
        /// </summary>
        internal static string CoreOptionsGroup {
            get {
                return ResourceManager.GetString("CoreOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deep ähnelt.
        /// </summary>
        internal static string DeepStr {
            get {
                return ResourceManager.GetString("DeepStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dimacs ähnelt.
        /// </summary>
        internal static string DimacsCaption {
            get {
                return ResourceManager.GetString("DimacsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not solve, just simplify cnf ähnelt.
        /// </summary>
        internal static string DimacsTooltip {
            get {
                return ResourceManager.GetString("DimacsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eliminate variables ähnelt.
        /// </summary>
        internal static string ElimCaption {
            get {
                return ResourceManager.GetString("ElimCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Perform variable elimination ähnelt.
        /// </summary>
        internal static string ElimTooltip {
            get {
                return ResourceManager.GetString("ElimTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Full ähnelt.
        /// </summary>
        internal static string FullStr {
            get {
                return ResourceManager.GetString("FullStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        internal static string InputCaption {
            get {
                return ResourceManager.GetString("InputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CNF in text format or CNF file ähnelt.
        /// </summary>
        internal static string InputTooltip {
            get {
                return ResourceManager.GetString("InputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Limited ähnelt.
        /// </summary>
        internal static string LimitedStr {
            get {
                return ResourceManager.GetString("LimitedStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Luby sequence ähnelt.
        /// </summary>
        internal static string LubyCaption {
            get {
                return ResourceManager.GetString("LubyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use the luby restart sequence ähnelt.
        /// </summary>
        internal static string LubyTooltip {
            get {
                return ResourceManager.GetString("LubyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detailed ähnelt.
        /// </summary>
        internal static string MoreStr {
            get {
                return ResourceManager.GetString("MoreStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string NoneStr {
            get {
                return ResourceManager.GetString("NoneStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        internal static string NoStr {
            get {
                return ResourceManager.GetString("NoStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Off ähnelt.
        /// </summary>
        internal static string OffStr {
            get {
                return ResourceManager.GetString("OffStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die On ähnelt.
        /// </summary>
        internal static string OnStr {
            get {
                return ResourceManager.GetString("OnStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver&apos;s result output ähnelt.
        /// </summary>
        internal static string OutputatResultTooltip {
            get {
                return ResourceManager.GetString("OutputatResultTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output console stream ähnelt.
        /// </summary>
        internal static string OutputConsoleCaption {
            get {
                return ResourceManager.GetString("OutputConsoleCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The solver&apos;s console output ähnelt.
        /// </summary>
        internal static string OutputConsoleTooltip {
            get {
                return ResourceManager.GetString("OutputConsoleTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output options ähnelt.
        /// </summary>
        internal static string OutputOptionsGroup {
            get {
                return ResourceManager.GetString("OutputOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output result stream ähnelt.
        /// </summary>
        internal static string OutputResultCaption {
            get {
                return ResourceManager.GetString("OutputResultCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Level of phase saving ähnelt.
        /// </summary>
        internal static string PhaseSavingCaption {
            get {
                return ResourceManager.GetString("PhaseSavingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assigns each decision variable to the value last forced by boolean constraint propagation ähnelt.
        /// </summary>
        internal static string PhaseSavingTooltip {
            get {
                return ResourceManager.GetString("PhaseSavingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SAT Solver ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SAT Solver MiniSat ähnelt.
        /// </summary>
        internal static string PluginDescription {
            get {
                return ResourceManager.GetString("PluginDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preprocessor ähnelt.
        /// </summary>
        internal static string PreprocessCaption {
            get {
                return ResourceManager.GetString("PreprocessCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preprocessor Options ähnelt.
        /// </summary>
        internal static string PreprocessorOptionsGroup {
            get {
                return ResourceManager.GetString("PreprocessorOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Turn preprocessing (simplification of CNF) on / off ähnelt.
        /// </summary>
        internal static string PreprocessTooltip {
            get {
                return ResourceManager.GetString("PreprocessTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Random frequency ähnelt.
        /// </summary>
        internal static string RandomFreqCaption {
            get {
                return ResourceManager.GetString("RandomFreqCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The frequency with which the variable decision heuristic tries to choose a random variable (must be between 0.0 and 1.0, default=0) ähnelt.
        /// </summary>
        internal static string RandomFreqTooltip {
            get {
                return ResourceManager.GetString("RandomFreqTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Randomize initial activity ähnelt.
        /// </summary>
        internal static string RandomInitCaption {
            get {
                return ResourceManager.GetString("RandomInitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initialize all variables to random values ähnelt.
        /// </summary>
        internal static string RandomInitTooltip {
            get {
                return ResourceManager.GetString("RandomInitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clause checking ähnelt.
        /// </summary>
        internal static string RCheckCaption {
            get {
                return ResourceManager.GetString("RCheckCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check if a clause is already implied ähnelt.
        /// </summary>
        internal static string RCheckTooltip {
            get {
                return ResourceManager.GetString("RCheckTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Base restart interval ähnelt.
        /// </summary>
        internal static string RFirstCaption {
            get {
                return ResourceManager.GetString("RFirstCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Base interval after how many conflicts the solver performs its first restart (0 - maxint, default=100) ähnelt.
        /// </summary>
        internal static string RFirstTooltip {
            get {
                return ResourceManager.GetString("RFirstTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart interval increase factor ähnelt.
        /// </summary>
        internal static string RIncCaption {
            get {
                return ResourceManager.GetString("RIncCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factor by which the restart interval is multiplied after a restart (must be greater than 1.0, default=2) ähnelt.
        /// </summary>
        internal static string RIncTooltip {
            get {
                return ResourceManager.GetString("RIncTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Silent ähnelt.
        /// </summary>
        internal static string SilentStr {
            get {
                return ResourceManager.GetString("SilentStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Normal ähnelt.
        /// </summary>
        internal static string SomeStr {
            get {
                return ResourceManager.GetString("SomeStr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subsumption limit ähnelt.
        /// </summary>
        internal static string SubLimitCaption {
            get {
                return ResourceManager.GetString("SubLimitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not check if subsumption against a clause larger than this (-1 - maxint, default=1000, -1 means no limit) ähnelt.
        /// </summary>
        internal static string SubLimitTooltip {
            get {
                return ResourceManager.GetString("SubLimitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Variable activity decay factor ähnelt.
        /// </summary>
        internal static string VarDecayCaption {
            get {
                return ResourceManager.GetString("VarDecayCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the decay factor for variable activity (must be between 0.0 and 1.0, default=0.95) ähnelt.
        /// </summary>
        internal static string VarDecayTooltip {
            get {
                return ResourceManager.GetString("VarDecayTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verbosity ähnelt.
        /// </summary>
        internal static string VerbosityCaption {
            get {
                return ResourceManager.GetString("VerbosityCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the level of verbosity ähnelt.
        /// </summary>
        internal static string VerbosityTooltip {
            get {
                return ResourceManager.GetString("VerbosityTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes ähnelt.
        /// </summary>
        internal static string YesStr {
            get {
                return ResourceManager.GetString("YesStr", resourceCulture);
            }
        }
    }
}
