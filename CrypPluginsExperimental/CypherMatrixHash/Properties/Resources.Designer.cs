//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.239
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CypherMatrixHash.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CypherMatrixHash.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mode ähnelt.
        /// </summary>
        internal static string ActionCaption {
            get {
                return ResourceManager.GetString("ActionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the algorithm&apos;s mode ähnelt.
        /// </summary>
        internal static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug data output ähnelt.
        /// </summary>
        internal static string DebugDataCaption {
            get {
                return ResourceManager.GetString("DebugDataCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log of CypherMatrix&apos;s internal variables ähnelt.
        /// </summary>
        internal static string DebugDataTooltip {
            get {
                return ResourceManager.GetString("DebugDataTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expansion base ähnelt.
        /// </summary>
        internal static string ExpansionBaseCaption {
            get {
                return ResourceManager.GetString("ExpansionBaseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a number to customize the expansion function ähnelt.
        /// </summary>
        internal static string ExpansionBaseTooltip {
            get {
                return ResourceManager.GetString("ExpansionBaseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hash block size ähnelt.
        /// </summary>
        internal static string HashBlockSizeCaption {
            get {
                return ResourceManager.GetString("HashBlockSizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the block size of the hash value ähnelt.
        /// </summary>
        internal static string HashBlockSizeTooltip {
            get {
                return ResourceManager.GetString("HashBlockSizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hash mode ähnelt.
        /// </summary>
        internal static string HashModeCaption {
            get {
                return ResourceManager.GetString("HashModeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die final ähnelt.
        /// </summary>
        internal static string HashModeFMX {
            get {
                return ResourceManager.GetString("HashModeFMX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die mini ähnelt.
        /// </summary>
        internal static string HashModeMini {
            get {
                return ResourceManager.GetString("HashModeMini", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die serial ähnelt.
        /// </summary>
        internal static string HashModeSMX {
            get {
                return ResourceManager.GetString("HashModeSMX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the hash mode ähnelt.
        /// </summary>
        internal static string HashModeTooltip {
            get {
                return ResourceManager.GetString("HashModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hash Options ähnelt.
        /// </summary>
        internal static string HashOptionsGroup {
            get {
                return ResourceManager.GetString("HashOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input data ähnelt.
        /// </summary>
        internal static string InputDataCaption {
            get {
                return ResourceManager.GetString("InputDataCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data to be processed by CypherMatrix ähnelt.
        /// </summary>
        internal static string InputDataTooltip {
            get {
                return ResourceManager.GetString("InputDataTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output data ähnelt.
        /// </summary>
        internal static string OutputDataCaption {
            get {
                return ResourceManager.GetString("OutputDataCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resulting data after processing the inputs with CypherMatrix ähnelt.
        /// </summary>
        internal static string OutputDataTooltip {
            get {
                return ResourceManager.GetString("OutputDataTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Permutation ähnelt.
        /// </summary>
        internal static string PermCaption {
            get {
                return ResourceManager.GetString("PermCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die B ähnelt.
        /// </summary>
        internal static string PermOptionB {
            get {
                return ResourceManager.GetString("PermOptionB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die D ähnelt.
        /// </summary>
        internal static string PermOptionD {
            get {
                return ResourceManager.GetString("PermOptionD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string PermOptionNone {
            get {
                return ResourceManager.GetString("PermOptionNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the permutation function ähnelt.
        /// </summary>
        internal static string PermTooltip {
            get {
                return ResourceManager.GetString("PermTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die CypherMatrix Hash ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The CypherMatrix hash function ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User code ähnelt.
        /// </summary>
        internal static string UserCodeCaption {
            get {
                return ResourceManager.GetString("UserCodeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a number to customize the calculations ähnelt.
        /// </summary>
        internal static string UserCodeTooltip {
            get {
                return ResourceManager.GetString("UserCodeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug logging ähnelt.
        /// </summary>
        internal static string WriteDebugLogCaption {
            get {
                return ResourceManager.GetString("WriteDebugLogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose whether the internal parameters should be written to a logfile or not ähnelt.
        /// </summary>
        internal static string WriteDebugLogTooltip {
            get {
                return ResourceManager.GetString("WriteDebugLogTooltip", resourceCulture);
            }
        }
    }
}
