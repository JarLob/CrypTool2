<?xml version="1.0" encoding="utf-8" ?>

<!-- You can edit this file manually or with the Util/CrypDocumentationEditor -->
<documentation>
  <language culture="en"/>
  <language culture="de-DE"/>

  <introduction lang="en">   
		The function HKDF SHA-256 [1][2] is a key generation function (KDF). The method uses the keyed hash message authentication codes (HMAC) as a pseudorandom function (PRF). The key to be generated is generated in 2 steps. Step 1 generates a pseudorandom key (prk). Step 2 successively generates the key by repeating the HMAC. The hkdf method uses an 8-bit counter, which limits the key length to be generated (255 * hash length, the counter in step 2 starts at 1). In the configuration of the plug-in, you can choose between the standardized variant (with 8-bit counter) and a variant with 32-bit counter. The 32-bit variant can generate much longer outputs.  
  	  	<section headline="Inputs and outputs">
	  	<list>
			<item><b>Source Key Material:</b> Specifies the source key material. It is used for the calculation of the prk.</item>
			<item><b>Salt:</b> The salt is used for the calculation of the prk as key in the HMAC. It can be an empty string.</item>
			<item><b>Context Information:</b> It is a application specific constant (CTXInfo). It can be an empty string.</item>
			<item><b>Length of the key material (in Byte):</b> Specifies the length of the output key material.</item>
			<item><b>Key Material</b>: After the calculation, the generated key material is visible in this textfield.</item>
			<item><b>Calculationsteps:</b> The intermediate steps of the calculation are displayed in this textfield.</item>
		</list>	
	  </section>
	  <section headline="Pseudorandom functions and theoretical background">
	  The basics of pseudorandom functions can be found in this <internal ref="../Common/Pseudorandomfunctions_en.html">article</internal>.
	  </section>
  </introduction>

  <introduction lang="de-DE">
     Die Funktion HKDF SHA-256 [1][2] ist eine Schlüsselgenerierungs-Funktion (Key Derivation Function, KDF). Das Verfahren verwendet als Pseudozufallsfunktion (Pseudorandom Function, PRF) den Keyed-Hash Message Authentication Codes (HMAC). Der zu generierende Schlüssel wird in 2 Schritten generiert. Schritt 1 generiert einen Pseudozufallsschlüssel (PRK). Schritt 2 erzeugt sukzessive den Schlüssel durch wiederholte Ausführung des HMAC. Das HKDF-Verfahren verwendet einen 8 Bit Zähler, wodurch die zu generierende Schlüssellänge begrenzt ist (255 * Hashlänge, der Zähler in Schritt 2 beginnt bei 1 zu zählen). In der Konfiguration des Plugin kann zwischen der standardisierten Variante (mit 8-Bit Zähler) und einer Variante mit 32-Bit Zähler gewählt werden. Mit der 32-Bit-Variante lassen sich wesentlich längere Ausgaben erzeugen.
        <section headline="Eingaben und Ausgaben">
	<list>
		<item><b>Quellschlüssel-Material:</b> Spezifiziert das Quellschlüssel-Material (Source Key Material, SKM). Dieses wird zur Generierung des Pseudo-Zufallsschlüssel (Pseudorandom Key, PRK) verwendet.</item>
		<item><b>Salt:</b> Salt wird bei der generierung des PRK als Schlüssel verwendet. Kann leer sein.</item>
		<item><b>Kontext-Information:</b> Ist eine anwendungsspezifische Konstante CTXInfo (Context Information, CTXInfo). Kann leer sein.</item>
		<item><b>Länge des Schlüsselmaterials (in Byte):</b> Spezifiziert die Länge des zu generierenden Schlüsselmaterials.</item>
		<item><b>Schlüsselmaterial:</b> Nach der Berechnung ist das generierte Schlüsselmaterial (Key Material, KM) in diesem Textfeld zu sehen.</item>
		<item><b>Zwischenschritte der Berechnung:</b> Die Zwischenschritte der Berechnung werden in diesem Textfeld angezeigt.</item>
	</list>	
	</section>	
	<section headline="	Pseudozufallsfunktionen und theoretischer Hintergrund">
	  Die Grundlagen zu Pseudozufallsfunktionen können in diesem <internal ref="../Common/Pseudorandomfunctions_de.html">Artikel</internal> gefunden werden.
	</section>
  </introduction>
  
  <usage lang="en">
	The usable in- and outputs will be explained in the presentationview of the component.
r  </usage>

  <usage lang="de-DE">
	Die verwendeten Ein- und Ausgaben werden zu Beginn in der Präsentations-Ansicht der Komponente erklärt.
  </usage>
  
  <presentation lang="en">
	By double-clicking on the HKDF SHA-256 component in the workspace, you can activate the visualization of the calculation. The design and operation of the function will be explained step by step.
  </presentation>
  
  <presentation lang="de-DE">
	Durch Doppelklick auf die HKDF SHA-256 Komponente in der Arbeitsfläche können Sie die Visualisierung der Berechnung aktivieren. Dabei wird die ikonifizierte Komponente zu einem Fenster vergrößert, in dem die Konstruktion und die Arbeitsweise der Funktion Schritt für Schritt erklärt werden.
  </presentation>
  
<references>
    <linkReference>
      <link url="https://tools.ietf.org/html/rfc5869" lang="en" />
      <caption lang="en">RFC 5869: Extract-and-Expand HKDF. Accessed 01-04-2018</caption>
      <link url="https://tools.ietf.org/html/rfc5869" lang="de-DE" />
      <caption lang="de-DE">RFC 5869: Extract-and-Expand HKDF. Aufgerufen am 01-04-2018</caption>
    </linkReference>
    <linkReference>
      <link url="https://eprint.iacr.org/2010/264.pdf" lang="en" />
      <caption lang="en">Cryptographic Extraction and Key Derivation: The HKDF Scheme. Accessed 01-04-2018</caption>
      <link url="https://eprint.iacr.org/2010/264.pdf" lang="de-DE" />
      <caption lang="de-DE">Cryptographic Extraction and Key Derivation: The HKDF Scheme. Aufgerufen am 01-04-2018</caption>
    </linkReference>
  </references>
</documentation>