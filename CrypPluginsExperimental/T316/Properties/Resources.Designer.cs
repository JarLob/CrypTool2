//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.Plugins.T316.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.Plugins.T316.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After converting the message into CCITT-2 character encoding, no characters of the messages were left. (The message consists completely of invalid characters) ähnelt.
        /// </summary>
        internal static string ErrorEmptyConversion {
            get {
                return ResourceManager.GetString("ErrorEmptyConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not start decrypting; the ciphertext input ({0} bytes) is not a multiple of the LAMBDA1 block length {1}. Check if you copied all bytes from the encryption process. ähnelt.
        /// </summary>
        internal static string ErrorInputBlockLength {
            get {
                return ResourceManager.GetString("ErrorInputBlockLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No data provided. The length is {0}. ähnelt.
        /// </summary>
        internal static string ErrorInputDataEmpty {
            get {
                return ResourceManager.GetString("ErrorInputDataEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No input data connected. ähnelt.
        /// </summary>
        internal static string ErrorInputDataNull {
            get {
                return ResourceManager.GetString("ErrorInputDataNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given key is empty ({0} bytes). The required key length is {1} bytes. ähnelt.
        /// </summary>
        internal static string ErrorKeyLengthEmpty {
            get {
                return ResourceManager.GetString("ErrorKeyLengthEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given key is too short ({0} bytes). The required key length is {1} bytes. ähnelt.
        /// </summary>
        internal static string ErrorKeyLengthShort {
            get {
                return ResourceManager.GetString("ErrorKeyLengthShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No input key connected. A key with 32 bytes must be provided. ähnelt.
        /// </summary>
        internal static string ErrorKeyNull {
            get {
                return ResourceManager.GetString("ErrorKeyNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given key is too long ({0} bytes). The required key length is {1}. Exceeding bytes will be truncated. ähnelt.
        /// </summary>
        internal static string ErrorKeyOverlength {
            get {
                return ResourceManager.GetString("ErrorKeyOverlength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There were {0} unconvertable characters in the given message ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableBeginningPlural {
            get {
                return ResourceManager.GetString("ErrorUnconvertableBeginningPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was {0} unconvertable character in the given message ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableBeginningSingular {
            get {
                return ResourceManager.GetString("ErrorUnconvertableBeginningSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ; they were truncated before encrypting. ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableEndPlural {
            get {
                return ResourceManager.GetString("ErrorUnconvertableEndPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ; it was truncated before encrypting. ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableEndSingular {
            get {
                return ResourceManager.GetString("ErrorUnconvertableEndSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input data ähnelt.
        /// </summary>
        internal static string InputData {
            get {
                return ResourceManager.GetString("InputData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a plaintext ASCII text message (for encryption) or a ciphertext (for decryption) ähnelt.
        /// </summary>
        internal static string InputDataTooltip {
            get {
                return ResourceManager.GetString("InputDataTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string InputKey {
            get {
                return ResourceManager.GetString("InputKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provide a 32 byte key (256 bit) for the algorithm  ähnelt.
        /// </summary>
        internal static string InputKeyTooltip {
            get {
                return ResourceManager.GetString("InputKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output Data ähnelt.
        /// </summary>
        internal static string OutputData {
            get {
                return ResourceManager.GetString("OutputData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outputs a ciphertext in hexadecimal or a decrypted plaintext in ASCII  ähnelt.
        /// </summary>
        internal static string OutputDataTooltip {
            get {
                return ResourceManager.GetString("OutputDataTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die T-316 ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The T-316 is a historic cipher machine which uses the algorithm LAMBDA1 - a development based on DES. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The original machine could only encrypt messages with a maximum length of 1000 characters. This restriction is not enforced here, but it is not compatible with the original machine. ähnelt.
        /// </summary>
        internal static string WarningMaximumLength {
            get {
                return ResourceManager.GetString("WarningMaximumLength", resourceCulture);
            }
        }
    }
}
