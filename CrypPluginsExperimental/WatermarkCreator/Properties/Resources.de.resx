<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdvancedModeCap" xml:space="preserve">
    <value>Expertenmodus</value>
  </data>
  <data name="AdvancedModeDes" xml:space="preserve">
    <value>Nutze den Expertenmodus, um mehr Einstellungen vornehmen zu können.</value>
  </data>
  <data name="BotLoc" xml:space="preserve">
    <value>Platziere das Wasserzeichen am unteren Bildrand</value>
  </data>
  <data name="BoxSizeCap" xml:space="preserve">
    <value>Box-Größe</value>
  </data>
  <data name="BoxSizeDes" xml:space="preserve">
    <value>Je größer die Box, desto stärker ist das Wasserzeichen. Allerdings sinkt die Anzahl der Daten, die gespeichert werden können</value>
  </data>
  <data name="ErrorCorrectionCap" xml:space="preserve">
    <value>Fehler-Korrektur</value>
  </data>
  <data name="ErrorCorrectionDes" xml:space="preserve">
    <value>Anzahl der Bytes, die zur Korrektur von Fehlern verwendet werden.</value>
  </data>
  <data name="FontTypeCap" xml:space="preserve">
    <value>Schriftart</value>
  </data>
  <data name="FontTypeDes" xml:space="preserve">
    <value>Schriftart, die für das Wasserzeichen genutzt wird</value>
  </data>
  <data name="ImageCaption" xml:space="preserve">
    <value>Bild</value>
  </data>
  <data name="ImageTooltip" xml:space="preserve">
    <value>Das Bild, dem ein Wasserzeichen hinzugefügt werden soll oder aus dem ein Wasserzeichen extrahiert werden soll.</value>
  </data>
  <data name="LocationPercentageCap" xml:space="preserve">
    <value>Freie Platzierung des Wasserzeichens</value>
  </data>
  <data name="LocationPercentageDes" xml:space="preserve">
    <value>Erlaubt eine freie Platzierung des Wasserzeichens. Je weiter nach rechts der Schieber gezogen wird, desto weiter nach oben wird das Wasserzeichen gesetzt</value>
  </data>
  <data name="ModificationTypeCap" xml:space="preserve">
    <value>Art der Modifizierung</value>
  </data>
  <data name="ModificationTypeDes" xml:space="preserve">
    <value>Wähle aus, welche Modifizierung mit der Eingabe vorgenommen wird</value>
  </data>
  <data name="NoPictureError" xml:space="preserve">
    <value>Bitte nutzen Sie die Komponente "Dateieingabe", um ein Bild als Eingabe hinzuzufügen.</value>
  </data>
  <data name="NoTextError" xml:space="preserve">
    <value>Bitte nutzen Sie die Komponente "Texteingabe", um einen String, der als Wasserzeichen verwendet wird, als Eingabe hinzuzufügen.</value>
  </data>
  <data name="OpacityCap" xml:space="preserve">
    <value>Deckkraft des Wasserzeichens</value>
  </data>
  <data name="OpacityDes" xml:space="preserve">
    <value>Deckkraft des Wasserzeichens. Ein höherer Wert führt zu einer höheren Deckkraft, wodurch das Wasserzeichen stabiler wird. Allerdings wird es dadurch ebenfalls sichtbarer. Der maximale Wert ist 1000, fuer ein gutes Ergebnis wird ein Wert von ueber 500 empfohlen.</value>
  </data>
  <data name="OtherLoc" xml:space="preserve">
    <value>Wähle eine eigene Platzierung</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>Wasserzeichen-Generator</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>Komponente um ein digitales Wasserzeichnen zu schreiben oder extrahieren.</value>
  </data>
  <data name="Seed" xml:space="preserve">
    <value>Wähle eine Zufallszahl</value>
  </data>
  <data name="Seed1" xml:space="preserve">
    <value>Zufallszahl 1</value>
  </data>
  <data name="Seed2" xml:space="preserve">
    <value>Zufallszahl 2</value>
  </data>
  <data name="TextCaption" xml:space="preserve">
    <value>Eingebetteter Text</value>
  </data>
  <data name="TextSizeMaxCap" xml:space="preserve">
    <value>Maximale Schriftgröße</value>
  </data>
  <data name="TextSizeMaxDes" xml:space="preserve">
    <value>Maximale Größe des Textes. Sollte diese zu groß für das Bild sein, wird intern eine Größe berechnet, sodass der Text in einer Zeile auf das Bild passt.</value>
  </data>
  <data name="TextTooltip" xml:space="preserve">
    <value>Extrahiere das versteckte Wasserzeichen aus dem Bild</value>
  </data>
  <data name="TopLoc" xml:space="preserve">
    <value>Platziere das Wasserzeichen am oberen Bildrand</value>
  </data>
  <data name="WatermarkCaption" xml:space="preserve">
    <value>Wasserzeichen</value>
  </data>
  <data name="WatermarkCreatorSettings_ModificationType_EmbedInvisibleText" xml:space="preserve">
    <value>Embed invisible watermark into the image</value>
  </data>
  <data name="WatermarkCreatorSettings_ModificationType_EmbedText" xml:space="preserve">
    <value>Embed visible text into the image</value>
  </data>
  <data name="WatermarkCreatorSettings_ModificationType_ExtractText" xml:space="preserve">
    <value>Extract hidden Watermark from image</value>
  </data>
  <data name="WatermarkImageCaption" xml:space="preserve">
    <value>Bild mit Wasserzeichen</value>
  </data>
  <data name="WatermarkImageTooltip" xml:space="preserve">
    <value>Bild, in das ein Text als Wasserzeichen eingefügt wurde.</value>
  </data>
  <data name="WatermarkLocationCap" xml:space="preserve">
    <value>Platzierung des Wasserzeichens</value>
  </data>
  <data name="WatermarkLocationDes" xml:space="preserve">
    <value>Wähle den Ort, wo auf dem Bild das Wasserzeichen eingefügt wird.</value>
  </data>
  <data name="WatermarkTooltip" xml:space="preserve">
    <value>Text, der dem Bild als Wasserzeichen hinzugefügt wird.</value>
  </data>
</root>