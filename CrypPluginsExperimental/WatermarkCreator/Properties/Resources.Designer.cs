//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WatermarkCreator.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WatermarkCreator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate at bottom of the image ähnelt.
        /// </summary>
        internal static string BotLoc {
            get {
                return ResourceManager.GetString("BotLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Box size ähnelt.
        /// </summary>
        internal static string BoxSize {
            get {
                return ResourceManager.GetString("BoxSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Box Size ähnelt.
        /// </summary>
        internal static string BoxSizeCap {
            get {
                return ResourceManager.GetString("BoxSizeCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font to be used for Watermark ähnelt.
        /// </summary>
        internal static string ChoseFont {
            get {
                return ResourceManager.GetString("ChoseFont", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location where the Watermark should be placed ähnelt.
        /// </summary>
        internal static string ChoseLoc {
            get {
                return ResourceManager.GetString("ChoseLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set Opacity for the Watermark ähnelt.
        /// </summary>
        internal static string ChosOpac {
            get {
                return ResourceManager.GetString("ChosOpac", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sett error correction ähnelt.
        /// </summary>
        internal static string ErrCor {
            get {
                return ResourceManager.GetString("ErrCor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Correction ähnelt.
        /// </summary>
        internal static string ErrorCorrection {
            get {
                return ResourceManager.GetString("ErrorCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font Type ähnelt.
        /// </summary>
        internal static string FontType {
            get {
                return ResourceManager.GetString("FontType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image ähnelt.
        /// </summary>
        internal static string ImageCaption {
            get {
                return ResourceManager.GetString("ImageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The image which should be used to embed/extract a digital watermark. ähnelt.
        /// </summary>
        internal static string ImageTooltip {
            get {
                return ResourceManager.GetString("ImageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modification Type ähnelt.
        /// </summary>
        internal static string ModificationType {
            get {
                return ResourceManager.GetString("ModificationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What kind of Watermark should be added? ähnelt.
        /// </summary>
        internal static string ModTypeDis {
            get {
                return ResourceManager.GetString("ModTypeDis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity ähnelt.
        /// </summary>
        internal static string Opacity {
            get {
                return ResourceManager.GetString("Opacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a custom location ähnelt.
        /// </summary>
        internal static string OtherLoc {
            get {
                return ResourceManager.GetString("OtherLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watermark Creator ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component to write and extract a digital watermark to an image. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set seed ähnelt.
        /// </summary>
        internal static string Seed {
            get {
                return ResourceManager.GetString("Seed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seed 1 ähnelt.
        /// </summary>
        internal static string Seed1 {
            get {
                return ResourceManager.GetString("Seed1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seed 2 ähnelt.
        /// </summary>
        internal static string Seed2 {
            get {
                return ResourceManager.GetString("Seed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum Size of the text to be embedded ähnelt.
        /// </summary>
        internal static string TextSize {
            get {
                return ResourceManager.GetString("TextSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum Text Size ähnelt.
        /// </summary>
        internal static string TextSizeMax {
            get {
                return ResourceManager.GetString("TextSizeMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate at top of the image ähnelt.
        /// </summary>
        internal static string TopLoc {
            get {
                return ResourceManager.GetString("TopLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embed invisible watermark into the image ähnelt.
        /// </summary>
        internal static string WatermarkCreatorSettings_ModificationType_EmbedInvisibleText {
            get {
                return ResourceManager.GetString("WatermarkCreatorSettings_ModificationType_EmbedInvisibleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embed visible text into the image ähnelt.
        /// </summary>
        internal static string WatermarkCreatorSettings_ModificationType_EmbedText {
            get {
                return ResourceManager.GetString("WatermarkCreatorSettings_ModificationType_EmbedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract hidden Watermark from image ähnelt.
        /// </summary>
        internal static string WatermarkCreatorSettings_ModificationType_ExtractText {
            get {
                return ResourceManager.GetString("WatermarkCreatorSettings_ModificationType_ExtractText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watermark Location ähnelt.
        /// </summary>
        internal static string WatermarkLocation {
            get {
                return ResourceManager.GetString("WatermarkLocation", resourceCulture);
            }
        }
    }
}
