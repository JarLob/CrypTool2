//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WatermarkCreator.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WatermarkCreator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use advanced mode ähnelt.
        /// </summary>
        internal static string AdvancedModeCap {
            get {
                return ResourceManager.GetString("AdvancedModeCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to use advanced mode which offers more settings to be set by the user? ähnelt.
        /// </summary>
        internal static string AdvancedModeDes {
            get {
                return ResourceManager.GetString("AdvancedModeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate watermark at the bottom of the image ähnelt.
        /// </summary>
        internal static string BotLoc {
            get {
                return ResourceManager.GetString("BotLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Box size ähnelt.
        /// </summary>
        internal static string BoxSizeCap {
            get {
                return ResourceManager.GetString("BoxSizeCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The bigger the box, the higher the error correction, the more solid the watermark, but less data can be stored ähnelt.
        /// </summary>
        internal static string BoxSizeDes {
            get {
                return ResourceManager.GetString("BoxSizeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error correction ähnelt.
        /// </summary>
        internal static string ErrorCorrectionCap {
            get {
                return ResourceManager.GetString("ErrorCorrectionCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set number of bytes used for error correction ähnelt.
        /// </summary>
        internal static string ErrorCorrectionDes {
            get {
                return ResourceManager.GetString("ErrorCorrectionDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font type ähnelt.
        /// </summary>
        internal static string FontTypeCap {
            get {
                return ResourceManager.GetString("FontTypeCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font type that is used for the watermark ähnelt.
        /// </summary>
        internal static string FontTypeDes {
            get {
                return ResourceManager.GetString("FontTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image ähnelt.
        /// </summary>
        internal static string ImageCaption {
            get {
                return ResourceManager.GetString("ImageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The image which should be used to embed/extract a digital watermark. ähnelt.
        /// </summary>
        internal static string ImageTooltip {
            get {
                return ResourceManager.GetString("ImageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Custom location of the watermark ähnelt.
        /// </summary>
        internal static string LocationPercentageCap {
            get {
                return ResourceManager.GetString("LocationPercentageCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Lets you manually set the location of the watermark. The further to the right you put the slider, the further up to the top the watermark will move ähnelt.
        /// </summary>
        internal static string LocationPercentageDes {
            get {
                return ResourceManager.GetString("LocationPercentageDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modification type ähnelt.
        /// </summary>
        internal static string ModificationTypeCap {
            get {
                return ResourceManager.GetString("ModificationTypeCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose what kind of modification should be done to the input image ähnelt.
        /// </summary>
        internal static string ModificationTypeDes {
            get {
                return ResourceManager.GetString("ModificationTypeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please provide a valid image as a carrier for the watermark, using the file input component ähnelt.
        /// </summary>
        internal static string NoPictureError {
            get {
                return ResourceManager.GetString("NoPictureError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please provide a string to be added to the image as a watermark, using the text input component ähnelt.
        /// </summary>
        internal static string NoTextError {
            get {
                return ResourceManager.GetString("NoTextError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity of the watermark ähnelt.
        /// </summary>
        internal static string OpacityCap {
            get {
                return ResourceManager.GetString("OpacityCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity of the watermark. A higher value means more opacity ähnelt.
        /// </summary>
        internal static string OpacityDes {
            get {
                return ResourceManager.GetString("OpacityDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a custom location ähnelt.
        /// </summary>
        internal static string OtherLoc {
            get {
                return ResourceManager.GetString("OtherLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watermark Creator ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component to write and extract a digital watermark to an image. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set some random number that will be used as seed ähnelt.
        /// </summary>
        internal static string Seed {
            get {
                return ResourceManager.GetString("Seed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seed 1 ähnelt.
        /// </summary>
        internal static string Seed1 {
            get {
                return ResourceManager.GetString("Seed1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seed 2 ähnelt.
        /// </summary>
        internal static string Seed2 {
            get {
                return ResourceManager.GetString("Seed2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embedded Text ähnelt.
        /// </summary>
        internal static string TextCaption {
            get {
                return ResourceManager.GetString("TextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum text size ähnelt.
        /// </summary>
        internal static string TextSizeMaxCap {
            get {
                return ResourceManager.GetString("TextSizeMaxCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum size of the text to be used when embedding the watermark. Internally, the maximum possible size that fits the whole text onto the image in one line will be chosen ähnelt.
        /// </summary>
        internal static string TextSizeMaxDes {
            get {
                return ResourceManager.GetString("TextSizeMaxDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extracted text that was embedded in the image ähnelt.
        /// </summary>
        internal static string TextTooltip {
            get {
                return ResourceManager.GetString("TextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locate at top of the image ähnelt.
        /// </summary>
        internal static string TopLoc {
            get {
                return ResourceManager.GetString("TopLoc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Watermark ähnelt.
        /// </summary>
        internal static string WatermarkCaption {
            get {
                return ResourceManager.GetString("WatermarkCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embed invisible watermark into the image ähnelt.
        /// </summary>
        internal static string WatermarkCreatorSettings_ModificationType_EmbedInvisibleText {
            get {
                return ResourceManager.GetString("WatermarkCreatorSettings_ModificationType_EmbedInvisibleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Embed visible text into the image ähnelt.
        /// </summary>
        internal static string WatermarkCreatorSettings_ModificationType_EmbedText {
            get {
                return ResourceManager.GetString("WatermarkCreatorSettings_ModificationType_EmbedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract hidden Watermark from image ähnelt.
        /// </summary>
        internal static string WatermarkCreatorSettings_ModificationType_ExtractText {
            get {
                return ResourceManager.GetString("WatermarkCreatorSettings_ModificationType_ExtractText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image with Watermark ähnelt.
        /// </summary>
        internal static string WatermarkImageCaption {
            get {
                return ResourceManager.GetString("WatermarkImageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image with text added to it as a watermark ähnelt.
        /// </summary>
        internal static string WatermarkImageTooltip {
            get {
                return ResourceManager.GetString("WatermarkImageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location of the watermark ähnelt.
        /// </summary>
        internal static string WatermarkLocationCap {
            get {
                return ResourceManager.GetString("WatermarkLocationCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chose the location where the watermark will be placed on the image ähnelt.
        /// </summary>
        internal static string WatermarkLocationDes {
            get {
                return ResourceManager.GetString("WatermarkLocationDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text to be added to the image as a watermark ähnelt.
        /// </summary>
        internal static string WatermarkTooltip {
            get {
                return ResourceManager.GetString("WatermarkTooltip", resourceCulture);
            }
        }
    }
}
