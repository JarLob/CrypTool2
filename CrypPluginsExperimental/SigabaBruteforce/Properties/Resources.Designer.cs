//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SigabaBruteforce.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SigabaBruteforce.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the mode of operation ähnelt.
        /// </summary>
        public static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 10 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor10Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor10Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 1 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor1Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 2 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor2Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 3 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor3Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 4 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor4Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 5 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor5Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 6 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor6Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor6Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 7 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor7Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor7Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 8 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor8Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor8Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code rotor 9 ähnelt.
        /// </summary>
        public static string AnalysisUseRotor9Caption {
            get {
                return ResourceManager.GetString("AnalysisUseRotor9Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 1 ähnelt.
        /// </summary>
        public static string AnalyzeCipherRotors1Caption {
            get {
                return ResourceManager.GetString("AnalyzeCipherRotors1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 2 ähnelt.
        /// </summary>
        public static string AnalyzeCipherRotors2Caption {
            get {
                return ResourceManager.GetString("AnalyzeCipherRotors2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 3 ähnelt.
        /// </summary>
        public static string AnalyzeCipherRotors3Caption {
            get {
                return ResourceManager.GetString("AnalyzeCipherRotors3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 4 ähnelt.
        /// </summary>
        public static string AnalyzeCipherRotors4Caption {
            get {
                return ResourceManager.GetString("AnalyzeCipherRotors4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 5 ähnelt.
        /// </summary>
        public static string AnalyzeCipherRotors5Caption {
            get {
                return ResourceManager.GetString("AnalyzeCipherRotors5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conrol rotor 1 ähnelt.
        /// </summary>
        public static string AnalyzeControlRotors1Caption {
            get {
                return ResourceManager.GetString("AnalyzeControlRotors1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conrol rotor 2 ähnelt.
        /// </summary>
        public static string AnalyzeControlRotors2Caption {
            get {
                return ResourceManager.GetString("AnalyzeControlRotors2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conrol rotor 3 ähnelt.
        /// </summary>
        public static string AnalyzeControlRotors3Caption {
            get {
                return ResourceManager.GetString("AnalyzeControlRotors3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conrol rotor 4 ähnelt.
        /// </summary>
        public static string AnalyzeControlRotors4Caption {
            get {
                return ResourceManager.GetString("AnalyzeControlRotors4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Conrol rotor 5 ähnelt.
        /// </summary>
        public static string AnalyzeControlRotors5Caption {
            get {
                return ResourceManager.GetString("AnalyzeControlRotors5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 1 ähnelt.
        /// </summary>
        public static string AnalyzeIndexRotors1Caption {
            get {
                return ResourceManager.GetString("AnalyzeIndexRotors1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 2 ähnelt.
        /// </summary>
        public static string AnalyzeIndexRotors2Caption {
            get {
                return ResourceManager.GetString("AnalyzeIndexRotors2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 3 ähnelt.
        /// </summary>
        public static string AnalyzeIndexRotors3Caption {
            get {
                return ResourceManager.GetString("AnalyzeIndexRotors3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 4 ähnelt.
        /// </summary>
        public static string AnalyzeIndexRotors4Caption {
            get {
                return ResourceManager.GetString("AnalyzeIndexRotors4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 5 ähnelt.
        /// </summary>
        public static string AnalyzeIndexRotors5Caption {
            get {
                return ResourceManager.GetString("AnalyzeIndexRotors5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show/hide options for this rotor. ähnelt.
        /// </summary>
        public static string AnalyzeRotorsTooltip {
            get {
                return ResourceManager.GetString("AnalyzeRotorsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculate ähnelt.
        /// </summary>
        public static string CalculateKeypaceCaption {
            get {
                return ResourceManager.GetString("CalculateKeypaceCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculates the keyspace of the current settings ähnelt.
        /// </summary>
        public static string CalculateKeypaceTooltip {
            get {
                return ResourceManager.GetString("CalculateKeypaceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case handling ähnelt.
        /// </summary>
        public static string CaseHandlingCaption {
            get {
                return ResourceManager.GetString("CaseHandlingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preserve case ähnelt.
        /// </summary>
        public static string CaseHandlingList1 {
            get {
                return ResourceManager.GetString("CaseHandlingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert to upper ähnelt.
        /// </summary>
        public static string CaseHandlingList2 {
            get {
                return ResourceManager.GetString("CaseHandlingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert to lower ähnelt.
        /// </summary>
        public static string CaseHandlingList3 {
            get {
                return ResourceManager.GetString("CaseHandlingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What should be done with upper and lower case letters? ähnelt.
        /// </summary>
        public static string CaseHandlingTooltip {
            get {
                return ResourceManager.GetString("CaseHandlingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 10. ähnelt.
        /// </summary>
        public static string Cipher10AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher10AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose cipher rotor 1 from ähnelt.
        /// </summary>
        public static string Cipher1AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Cipher1AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 1. ähnelt.
        /// </summary>
        public static string Cipher1AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher1AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose cipher rotor 2 from ähnelt.
        /// </summary>
        public static string Cipher2AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Cipher2AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 2. ähnelt.
        /// </summary>
        public static string Cipher2AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher2AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose cipher rotor 3 from ähnelt.
        /// </summary>
        public static string Cipher3AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Cipher3AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 3. ähnelt.
        /// </summary>
        public static string Cipher3AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher3AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose cipher rotor 4 from ähnelt.
        /// </summary>
        public static string Cipher4AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Cipher4AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 4. ähnelt.
        /// </summary>
        public static string Cipher4AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher4AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose cipher rotor 5 from ähnelt.
        /// </summary>
        public static string Cipher5AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Cipher5AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 5. ähnelt.
        /// </summary>
        public static string Cipher5AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher5AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 6. ähnelt.
        /// </summary>
        public static string Cipher6AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher6AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 7. ähnelt.
        /// </summary>
        public static string Cipher7AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher7AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 8. ähnelt.
        /// </summary>
        public static string Cipher8AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher8AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as cipher rotor 9. ähnelt.
        /// </summary>
        public static string Cipher9AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Cipher9AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alphabet maze ähnelt.
        /// </summary>
        public static string CipherGroup {
            get {
                return ResourceManager.GetString("CipherGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher key ähnelt.
        /// </summary>
        public static string CipherKeyCaption {
            get {
                return ResourceManager.GetString("CipherKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher key ähnelt.
        /// </summary>
        public static string CipherKeyHeader {
            get {
                return ResourceManager.GetString("CipherKeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the positions of the cipher rotors ähnelt.
        /// </summary>
        public static string CipherKeyTooltip {
            get {
                return ResourceManager.GetString("CipherKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 1 (most left) ähnelt.
        /// </summary>
        public static string CipherRotor1Caption {
            get {
                return ResourceManager.GetString("CipherRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 1: From ähnelt.
        /// </summary>
        public static string CipherRotor1FromCaption {
            get {
                return ResourceManager.GetString("CipherRotor1FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverse ähnelt.
        /// </summary>
        public static string CipherRotor1ReverseCaption {
            get {
                return ResourceManager.GetString("CipherRotor1ReverseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the typ of the first cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor1Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 2 ähnelt.
        /// </summary>
        public static string CipherRotor2Caption {
            get {
                return ResourceManager.GetString("CipherRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 2: From ähnelt.
        /// </summary>
        public static string CipherRotor2FromCaption {
            get {
                return ResourceManager.GetString("CipherRotor2FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for plug the rotor heads up ähnelt.
        /// </summary>
        public static string CipherRotor2ReverseTooltip {
            get {
                return ResourceManager.GetString("CipherRotor2ReverseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the typ of the second cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor2Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Rotor 3 ähnelt.
        /// </summary>
        public static string CipherRotor3Caption {
            get {
                return ResourceManager.GetString("CipherRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 3: From ähnelt.
        /// </summary>
        public static string CipherRotor3FromCaption {
            get {
                return ResourceManager.GetString("CipherRotor3FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the third cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor3ToolTip {
            get {
                return ResourceManager.GetString("CipherRotor3ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Rotor 4 ähnelt.
        /// </summary>
        public static string CipherRotor4Caption {
            get {
                return ResourceManager.GetString("CipherRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 4: From ähnelt.
        /// </summary>
        public static string CipherRotor4FromCaption {
            get {
                return ResourceManager.GetString("CipherRotor4FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fourth cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor4Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor4Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Rotor 5 (most right) ähnelt.
        /// </summary>
        public static string CipherRotor5Caption {
            get {
                return ResourceManager.GetString("CipherRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher rotor 5: From ähnelt.
        /// </summary>
        public static string CipherRotor5FromCaption {
            get {
                return ResourceManager.GetString("CipherRotor5FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fith cipher rotor ähnelt.
        /// </summary>
        public static string CipherRotor5Tooltip {
            get {
                return ResourceManager.GetString("CipherRotor5Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher wheels ähnelt.
        /// </summary>
        public static string CipherRotorsHeader {
            get {
                return ResourceManager.GetString("CipherRotorsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 10. ähnelt.
        /// </summary>
        public static string Control10AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control10AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose control rotor 1 from ähnelt.
        /// </summary>
        public static string Control1AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Control1AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 1. ähnelt.
        /// </summary>
        public static string Control1AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control1AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose control rotor 2 from ähnelt.
        /// </summary>
        public static string Control2AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Control2AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 2. ähnelt.
        /// </summary>
        public static string Control2AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control2AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose control rotor 3 from ähnelt.
        /// </summary>
        public static string Control3AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Control3AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 3. ähnelt.
        /// </summary>
        public static string Control3AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control3AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose control rotor 4 from ähnelt.
        /// </summary>
        public static string Control4AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Control4AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 4. ähnelt.
        /// </summary>
        public static string Control4AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control4AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose control rotor 5 from ähnelt.
        /// </summary>
        public static string Control5AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Control5AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 5. ähnelt.
        /// </summary>
        public static string Control5AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control5AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 6. ähnelt.
        /// </summary>
        public static string Control6AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control6AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 7. ähnelt.
        /// </summary>
        public static string Control7AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control7AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 8. ähnelt.
        /// </summary>
        public static string Control8AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control8AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as control rotor 9. ähnelt.
        /// </summary>
        public static string Control9AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Control9AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stepping maze ähnelt.
        /// </summary>
        public static string ControlGroup {
            get {
                return ResourceManager.GetString("ControlGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control key ähnelt.
        /// </summary>
        public static string ControlKeyCaption {
            get {
                return ResourceManager.GetString("ControlKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control key ähnelt.
        /// </summary>
        public static string ControlKeyHeader {
            get {
                return ResourceManager.GetString("ControlKeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the positions of the control rotors ähnelt.
        /// </summary>
        public static string ControlKeyTooltip {
            get {
                return ResourceManager.GetString("ControlKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 1 (most right) ähnelt.
        /// </summary>
        public static string ControlRotor1Caption {
            get {
                return ResourceManager.GetString("ControlRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 1: From ähnelt.
        /// </summary>
        public static string ControlRotor1FromCaption {
            get {
                return ResourceManager.GetString("ControlRotor1FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reverse ähnelt.
        /// </summary>
        public static string ControlRotor1ReverseCaption {
            get {
                return ResourceManager.GetString("ControlRotor1ReverseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the typ of the first control rotor ähnelt.
        /// </summary>
        public static string ControlRotor1Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 2 ähnelt.
        /// </summary>
        public static string ControlRotor2Caption {
            get {
                return ResourceManager.GetString("ControlRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 2: From ähnelt.
        /// </summary>
        public static string ControlRotor2FromCaption {
            get {
                return ResourceManager.GetString("ControlRotor2FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click for plug in the rotor heads up ähnelt.
        /// </summary>
        public static string ControlRotor2ReverseTooltip {
            get {
                return ResourceManager.GetString("ControlRotor2ReverseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the typ of the second control rotor ähnelt.
        /// </summary>
        public static string ControlRotor2Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 3 ähnelt.
        /// </summary>
        public static string ControlRotor3Caption {
            get {
                return ResourceManager.GetString("ControlRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 3: From ähnelt.
        /// </summary>
        public static string ControlRotor3FromCaption {
            get {
                return ResourceManager.GetString("ControlRotor3FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the third control rotor ähnelt.
        /// </summary>
        public static string ControlRotor3Tooltip {
            get {
                return ResourceManager.GetString("ControlRotor3Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 4 ähnelt.
        /// </summary>
        public static string ControlRotor4Caption {
            get {
                return ResourceManager.GetString("ControlRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 4: From ähnelt.
        /// </summary>
        public static string ControlRotor4FromCaption {
            get {
                return ResourceManager.GetString("ControlRotor4FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fourth control rotor ähnelt.
        /// </summary>
        public static string ControlRotor4ToolTip {
            get {
                return ResourceManager.GetString("ControlRotor4ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 5 (most left) ähnelt.
        /// </summary>
        public static string ControlRotor5Caption {
            get {
                return ResourceManager.GetString("ControlRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control rotor 5: From ähnelt.
        /// </summary>
        public static string ControlRotor5FromCaption {
            get {
                return ResourceManager.GetString("ControlRotor5FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fith control rotor ähnelt.
        /// </summary>
        public static string ControlRotor5ToolTip {
            get {
                return ResourceManager.GetString("ControlRotor5ToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Control wheels ähnelt.
        /// </summary>
        public static string ControlRotorsHeader {
            get {
                return ResourceManager.GetString("ControlRotorsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elapsed: ähnelt.
        /// </summary>
        public static string ElapsedLabel {
            get {
                return ResourceManager.GetString("ElapsedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End: ähnelt.
        /// </summary>
        public static string EndLabel {
            get {
                return ResourceManager.GetString("EndLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the first letter of the search interval ähnelt.
        /// </summary>
        public static string FromTooltip {
            get {
                return ResourceManager.GetString("FromTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose index rotor 1 from ähnelt.
        /// </summary>
        public static string Index1AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Index1AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as index rotor 1. ähnelt.
        /// </summary>
        public static string Index1AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Index1AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose index rotor 2 from ähnelt.
        /// </summary>
        public static string Index2AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Index2AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as index rotor 2. ähnelt.
        /// </summary>
        public static string Index2AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Index2AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose index rotor 3 from ähnelt.
        /// </summary>
        public static string Index3AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Index3AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as index rotor 3. ähnelt.
        /// </summary>
        public static string Index3AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Index3AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose index rotor 4 from ähnelt.
        /// </summary>
        public static string Index4AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Index4AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as index rotor 4. ähnelt.
        /// </summary>
        public static string Index4AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Index4AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose index rotor 5 from ähnelt.
        /// </summary>
        public static string Index5AnalysisOptionsGroup {
            get {
                return ResourceManager.GetString("Index5AnalysisOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Try this rotor as index rotor 5. ähnelt.
        /// </summary>
        public static string Index5AnalysisUseRotorTooltip {
            get {
                return ResourceManager.GetString("Index5AnalysisUseRotorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 1 ähnelt.
        /// </summary>
        public static string IndexAnalysisUseRotor1Caption {
            get {
                return ResourceManager.GetString("IndexAnalysisUseRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 2 ähnelt.
        /// </summary>
        public static string IndexAnalysisUseRotor2Caption {
            get {
                return ResourceManager.GetString("IndexAnalysisUseRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 3 ähnelt.
        /// </summary>
        public static string IndexAnalysisUseRotor3Caption {
            get {
                return ResourceManager.GetString("IndexAnalysisUseRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 4 ähnelt.
        /// </summary>
        public static string IndexAnalysisUseRotor4Caption {
            get {
                return ResourceManager.GetString("IndexAnalysisUseRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 5 ähnelt.
        /// </summary>
        public static string IndexAnalysisUseRotor5Caption {
            get {
                return ResourceManager.GetString("IndexAnalysisUseRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index maze ähnelt.
        /// </summary>
        public static string IndexGroup {
            get {
                return ResourceManager.GetString("IndexGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index key ähnelt.
        /// </summary>
        public static string IndexKeyCaption {
            get {
                return ResourceManager.GetString("IndexKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index key ähnelt.
        /// </summary>
        public static string IndexKeyHeader {
            get {
                return ResourceManager.GetString("IndexKeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the positions of the index rotors ähnelt.
        /// </summary>
        public static string IndexKeyTooltip {
            get {
                return ResourceManager.GetString("IndexKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index Rotor 1 (most left) ähnelt.
        /// </summary>
        public static string IndexRotor1Caption {
            get {
                return ResourceManager.GetString("IndexRotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 1: From ähnelt.
        /// </summary>
        public static string IndexRotor1FromCaption {
            get {
                return ResourceManager.GetString("IndexRotor1FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the first index rotor ähnelt.
        /// </summary>
        public static string IndexRotor1Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index Rotor 2 ähnelt.
        /// </summary>
        public static string IndexRotor2Caption {
            get {
                return ResourceManager.GetString("IndexRotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 2: From ähnelt.
        /// </summary>
        public static string IndexRotor2FromCaption {
            get {
                return ResourceManager.GetString("IndexRotor2FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the second index rotor ähnelt.
        /// </summary>
        public static string IndexRotor2Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index Rotor 3 ähnelt.
        /// </summary>
        public static string IndexRotor3Caption {
            get {
                return ResourceManager.GetString("IndexRotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 3: From ähnelt.
        /// </summary>
        public static string IndexRotor3FromCaption {
            get {
                return ResourceManager.GetString("IndexRotor3FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the third index rotor ähnelt.
        /// </summary>
        public static string IndexRotor3Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor3Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index Rotor 4 ähnelt.
        /// </summary>
        public static string IndexRotor4Caption {
            get {
                return ResourceManager.GetString("IndexRotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 4: From ähnelt.
        /// </summary>
        public static string IndexRotor4FromCaption {
            get {
                return ResourceManager.GetString("IndexRotor4FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fourth index rotor ähnelt.
        /// </summary>
        public static string IndexRotor4Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor4Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index Rotor 5  (most right) ähnelt.
        /// </summary>
        public static string IndexRotor5Caption {
            get {
                return ResourceManager.GetString("IndexRotor5Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index rotor 5: From ähnelt.
        /// </summary>
        public static string IndexRotor5FromCaption {
            get {
                return ResourceManager.GetString("IndexRotor5FromCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the type of the fith index rotor ähnelt.
        /// </summary>
        public static string IndexRotor5Tooltip {
            get {
                return ResourceManager.GetString("IndexRotor5Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Index wheels ähnelt.
        /// </summary>
        public static string IndexRotorHeader {
            get {
                return ResourceManager.GetString("IndexRotorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        public static string InputCaption {
            get {
                return ResourceManager.GetString("InputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        public static string InputTooltip {
            get {
                return ResourceManager.GetString("InputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keys/Second: ähnelt.
        /// </summary>
        public static string Keys_secLabel {
            get {
                return ResourceManager.GetString("Keys_secLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keyspace:  ähnelt.
        /// </summary>
        public static string KeyspaceCaption {
            get {
                return ResourceManager.GetString("KeyspaceCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculate the size of the key space (in bits) resulting from the given settings. ähnelt.
        /// </summary>
        public static string KeyspaceTooltip {
            get {
                return ResourceManager.GetString("KeyspaceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Main ähnelt.
        /// </summary>
        public static string LocalLabel {
            get {
                return ResourceManager.GetString("LocalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die both ähnelt.
        /// </summary>
        public static string OriBothCaption {
            get {
                return ResourceManager.GetString("OriBothCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die normal ähnelt.
        /// </summary>
        public static string OriNormalCaption {
            get {
                return ResourceManager.GetString("OriNormalCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die reverse ähnelt.
        /// </summary>
        public static string OriReverseCaption {
            get {
                return ResourceManager.GetString("OriReverseCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output ähnelt.
        /// </summary>
        public static string OutputCaption {
            get {
                return ResourceManager.GetString("OutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output ähnelt.
        /// </summary>
        public static string OutputTooltip {
            get {
                return ResourceManager.GetString("OutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die SigabaBruteforce ähnelt.
        /// </summary>
        public static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyzing tool for the American rotor cipher machine SIGABA ähnelt.
        /// </summary>
        public static string PluginToolTip {
            get {
                return ResourceManager.GetString("PluginToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor start positions ähnelt.
        /// </summary>
        public static string PositionOptionsGroup {
            get {
                return ResourceManager.GetString("PositionOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remaining: ähnelt.
        /// </summary>
        public static string RemainingLabel {
            get {
                return ResourceManager.GetString("RemainingLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor orientation ähnelt.
        /// </summary>
        public static string RevCaption {
            get {
                return ResourceManager.GetString("RevCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the orientation(s) in which to use this rotor. ähnelt.
        /// </summary>
        public static string RevTooltip {
            get {
                return ResourceManager.GetString("RevTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show analysis options for ähnelt.
        /// </summary>
        public static string RotorAnalysisGroup {
            get {
                return ResourceManager.GetString("RotorAnalysisGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt ähnelt.
        /// </summary>
        public static string SigabaSettings_SigabaSettings_Cipher {
            get {
                return ResourceManager.GetString("SigabaSettings_SigabaSettings_Cipher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt ähnelt.
        /// </summary>
        public static string SigabaSettings_SigabaSettings_Decipher {
            get {
                return ResourceManager.GetString("SigabaSettings_SigabaSettings_Decipher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start: ähnelt.
        /// </summary>
        public static string StartLabel {
            get {
                return ResourceManager.GetString("StartLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        public static string TextHeader {
            get {
                return ResourceManager.GetString("TextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text options ähnelt.
        /// </summary>
        public static string TextOptionsGroup {
            get {
                return ResourceManager.GetString("TextOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To ähnelt.
        /// </summary>
        public static string ToCaption {
            get {
                return ResourceManager.GetString("ToCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Top Ten ähnelt.
        /// </summary>
        public static string TopTenLabel {
            get {
                return ResourceManager.GetString("TopTenLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the last letter of the search interval ähnelt.
        /// </summary>
        public static string ToTooltip {
            get {
                return ResourceManager.GetString("ToTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown symbol handling ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingCaption {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore (leave unmodified) ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList1 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList2 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace with &apos;X&apos; ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList3 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What should be done with input characters that are not in the alphabet? ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingTooltip {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value ähnelt.
        /// </summary>
        public static string ValueHeader {
            get {
                return ResourceManager.GetString("ValueHeader", resourceCulture);
            }
        }
    }
}
