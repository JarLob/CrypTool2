<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionCaption" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="ActionTooltip" xml:space="preserve">
    <value>Choose the mode of opertation</value>
  </data>
  <data name="CaseHandlingCaption" xml:space="preserve">
    <value>Case handling</value>
  </data>
  <data name="CaseHandlingList1" xml:space="preserve">
    <value>Preserve case</value>
  </data>
  <data name="CaseHandlingList2" xml:space="preserve">
    <value>Convert to upper</value>
  </data>
  <data name="CaseHandlingList3" xml:space="preserve">
    <value>Convert to lower</value>
  </data>
  <data name="CaseHandlingTooltip" xml:space="preserve">
    <value>What should be done with upper and lower case letters?</value>
  </data>
  <data name="CipherGroup" xml:space="preserve">
    <value>Alphabet maze</value>
  </data>
  <data name="CipherKeyCaption" xml:space="preserve">
    <value>Cipher key</value>
  </data>
  <data name="CipherKeyTooltip" xml:space="preserve">
    <value>Defines the positions of the cipher rotors</value>
  </data>
  <data name="CipherRotor1Caption" xml:space="preserve">
    <value>Cipher rotor 1 (most left)</value>
  </data>
  <data name="CipherRotor1ReverseCaption" xml:space="preserve">
    <value>Reverse</value>
  </data>
  <data name="CipherRotor1Tooltip" xml:space="preserve">
    <value>Defines the typ of the first cipher rotor</value>
  </data>
  <data name="CipherRotor2Caption" xml:space="preserve">
    <value>Cipher rotor 2</value>
  </data>
  <data name="CipherRotor2ReverseTooltip" xml:space="preserve">
    <value>Check for plug the rotor heads up</value>
  </data>
  <data name="CipherRotor2Tooltip" xml:space="preserve">
    <value>Defines the typ of the second cipher rotor</value>
  </data>
  <data name="CipherRotor3Caption" xml:space="preserve">
    <value>Cipher Rotor 3</value>
  </data>
  <data name="CipherRotor3ToolTip" xml:space="preserve">
    <value>Defines the type of the third cipher rotor</value>
  </data>
  <data name="CipherRotor4Caption" xml:space="preserve">
    <value>Cipher Rotor 4</value>
  </data>
  <data name="CipherRotor4Tooltip" xml:space="preserve">
    <value>Defines the type of the fourth cipher rotor</value>
  </data>
  <data name="CipherRotor5Caption" xml:space="preserve">
    <value>Cipher Rotor 5 (most right)</value>
  </data>
  <data name="CipherRotor5Tooltip" xml:space="preserve">
    <value>Defines the type of the fith cipher rotor</value>
  </data>
  <data name="ControlGroup" xml:space="preserve">
    <value>Stepping maze</value>
  </data>
  <data name="ControlKeyCaption" xml:space="preserve">
    <value>Control key</value>
  </data>
  <data name="ControlKeyTooltip" xml:space="preserve">
    <value>Defines the positions of the control rotors</value>
  </data>
  <data name="ControlRotor1Caption" xml:space="preserve">
    <value>Control rotor 1 (most right)</value>
  </data>
  <data name="ControlRotor1ReverseCaption" xml:space="preserve">
    <value>Reverse</value>
  </data>
  <data name="ControlRotor1Tooltip" xml:space="preserve">
    <value>Defines the typ of the first control rotor</value>
  </data>
  <data name="ControlRotor2Caption" xml:space="preserve">
    <value>Control rotor 2</value>
  </data>
  <data name="ControlRotor2ReverseTooltip" xml:space="preserve">
    <value>Click for plug in the rotor heads up</value>
  </data>
  <data name="ControlRotor2Tooltip" xml:space="preserve">
    <value>Defines the typ of the second control rotor</value>
  </data>
  <data name="ControlRotor3Caption" xml:space="preserve">
    <value>Control rotor 3</value>
  </data>
  <data name="ControlRotor3Tooltip" xml:space="preserve">
    <value>Defines the type of the third control rotor</value>
  </data>
  <data name="ControlRotor4Caption" xml:space="preserve">
    <value>Control rotor 4</value>
  </data>
  <data name="ControlRotor4ToolTip" xml:space="preserve">
    <value>Defines the type of the fourth control rotor</value>
  </data>
  <data name="ControlRotor5Caption" xml:space="preserve">
    <value>Control rotor 5 (most left)</value>
  </data>
  <data name="ControlRotor5ToolTip" xml:space="preserve">
    <value>Defines the type of the fith control rotor</value>
  </data>
  <data name="IndexGroup" xml:space="preserve">
    <value>Index maze</value>
  </data>
  <data name="IndexKeyCaption" xml:space="preserve">
    <value>Index key</value>
  </data>
  <data name="IndexKeyTooltip" xml:space="preserve">
    <value>Defines the positions of the index rotors</value>
  </data>
  <data name="IndexRotor1Caption" xml:space="preserve">
    <value>Index Rotor 1 (most left)</value>
  </data>
  <data name="IndexRotor1Tooltip" xml:space="preserve">
    <value>Defines the type of the first index rotor</value>
  </data>
  <data name="IndexRotor2Caption" xml:space="preserve">
    <value>Index Rotor 2</value>
  </data>
  <data name="IndexRotor2Tooltip" xml:space="preserve">
    <value>Defines the type of the second index rotor</value>
  </data>
  <data name="IndexRotor3Caption" xml:space="preserve">
    <value>Index Rotor 3</value>
  </data>
  <data name="IndexRotor3Tooltip" xml:space="preserve">
    <value>Defines the type of the third index rotor</value>
  </data>
  <data name="IndexRotor4Caption" xml:space="preserve">
    <value>Index Rotor 4</value>
  </data>
  <data name="IndexRotor4Tooltip" xml:space="preserve">
    <value>Defines the type of the fourth index rotor</value>
  </data>
  <data name="IndexRotor5Caption" xml:space="preserve">
    <value>Index Rotor 5  (most right)</value>
  </data>
  <data name="IndexRotor5Tooltip" xml:space="preserve">
    <value>Defines the type of the fith index rotor</value>
  </data>
  <data name="LetterH" xml:space="preserve">
    <value>H</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>Sigaba</value>
  </data>
  <data name="PluginToolTip" xml:space="preserve">
    <value>American rotor cipher machine</value>
  </data>
  <data name="SigabaSettings_SigabaSettings_Cipher" xml:space="preserve">
    <value>Encrypt</value>
  </data>
  <data name="SigabaSettings_SigabaSettings_Decipher" xml:space="preserve">
    <value>Decrypt</value>
  </data>
  <data name="TextOptionsGroup" xml:space="preserve">
    <value>Text options</value>
  </data>
  <data name="UnknownSymbolHandlingCaption" xml:space="preserve">
    <value>Unknown symbol handling</value>
  </data>
  <data name="UnknownSymbolHandlingList1" xml:space="preserve">
    <value>Ignore (leave unmodified)</value>
  </data>
  <data name="UnknownSymbolHandlingList2" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="UnknownSymbolHandlingList3" xml:space="preserve">
    <value>Replace with 'X'</value>
  </data>
  <data name="UnknownSymbolHandlingTooltip" xml:space="preserve">
    <value>What should be done with encountered characters at the input which are not in the alphabet?</value>
  </data>
</root>