<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">SHA-1 Collision</title>
  <summary lang="en">Shows a collision of the <i>SHA-1</i> hash function</summary>
  <description lang="en">This template shows a collision of the <i>SHA-1</i> hash function.</description>
  <keywords>message, digest, Hash, Rivest</keywords>

  <title lang="de">SHA-1 Kollision</title>
  <summary lang="de">Zeigt eine Kollision der <i>SHA-1</i>-Hash-Funktion</summary>
  <description lang="de">Diese Vorlage zeigt eine Kollision der <i>SHA-1</i>-Hash-Funktion.</description>
  <keywords lang="de">hash</keywords>
  <keywords lang="de">collision</keywords>
  <keywords lang="de">pdf</keywords>

  <icon file="SHA1.png" />
  <relevantPlugins>
    <plugin name="SHA" />
  </relevantPlugins>

  <replacements lang="en">
    <replacement key="$good$" value="good.pdf (hex-encoded data)"/>
    <replacement key="$bad$" value="bad.pdf (hex-encoded data)"/>
    <replacement key="$decoder$" value="String Decoder"/>
    <replacement key="$comparator$" value="StreamCompare"/>
    <replacement key="$sha1good$" value="SHA-1(good.pdf)"/>
    <replacement key="$sha1bad$" value="SHA-1(bad.pdf)"/>
    <replacement key="$dataequal$" value="Data equal?"/>
    <replacement key="$hashequal$" value="Hashes equal?"/>
    <replacement key="$infotext$" value="On February, 23rd 2017 a collision attack on SHA-1 was presented by researchers from the national research institute for mathematics and computer science in the Netherlands (CWI) and the Google Research Security, Privacy and Anti-abuse Group.\line
\line
The researchers succeeded in creating a practical attack on the SHA-1 hash algorithm (collision attack) as well as creating an actual SHA-1 hash collision. They published two pdf files (good.pdf and bad.pdf) with different contents but same SHA-1 hash value.\line
\line
Our template shows this collision. The pdf files are shown hex-encoded (good.pdf and bad.pdf) in the input components. First, we decode the files from hex-strings to binary using String Decoders. Then, we compare the binary values with a stream comparator. In parallel, we compute the two SHA-1 hash values of both files and compare the hash values, again using a Stream Comparator. One can see that the contents of the files are different ('Data equal?' is red) and that the hash values are equal ('Hashes equal?' is green).\line
\line
Once a hash collision is found, cryptologists consider the hash function as broken/dead. Thus, SHA-1 can be considered as dead and should not be used for security measures any more.\line
\line
Website of the researchers of the attack: https://shattered.io/\line
Research paper on the attack: https://shattered.io/static/shattered.pdf\line
"/>
  </replacements>
  <replacements lang="de">
    <replacement key="$good$" value="good.pdf (Hex-codierte Daten)"/>
    <replacement key="$bad$" value="bad.pdf (Hex-codierte Daten)"/>
    <replacement key="$decoder$" value="String-Dekodierer"/>
    <replacement key="$comparator$" value="Stromvergleich"/>
    <replacement key="$sha1good$" value="SHA-1(good.pdf)"/>
    <replacement key="$sha1bad$" value="SHA-1(bad.pdf)"/>
    <replacement key="$dataequal$" value="Daten gleich?"/>
    <replacement key="$hashequal$" value="Hash gleich?"/>
    <replacement key="$infotext$" value="Am 23. Februar 2017 präsentierten Forscher des nationalen Forschungsinstituts für Mathematik und Informatik in den Niederlanden (CWI) sowie der Google Research Security, Privacy and Anti-abuse-Gruppe einen Kollisionsangriff auf SHA-1. Den Forschern gelang es, einen praktischen Angriff auf den SHA-1-Hash-Algorithmus (Kollisionsangriff) zu erstellen und eine SHA-1-Hash-Kollision zu erzeugen. Sie veröffentlichten zwei pdf-Dateien (good.pdf und bad.pdf) mit verschiedenen Inhalten, aber den gleichen SHA-1 Hash-Werten.\line
\line
Unsere Vorlage zeigt diese Kollision. Die pdf-Dateien sind hex-codiert (good.pdf und bad.pdf). Zuerst dekodieren wir die Dateien mit String-Dekodierern. Dann vergleichen wir die binäre Repräsentation der Inhalte. Parallel dazu berechnen wir die beiden SHA-1-Hash-Werte beider Dateien und vergleichen diese Hash-Werte. Man kann sehen, dass der Inhalt der Dateien unterschiedlich ist ('Daten gleich?' ist rot) und dass die Hash-Werte gleich sind ('Hash gleich?' ist grün).\line
\line
Kryptologen betrachten eine Hash-Funktion als gebrochen/tot, wenn nur eine einzige Hash-Kollision gefunden wurde. Somit sollte SHA-1 nicht mehr für Sicherheitsmaßnahmen verwendet werden.\line
\line
Webseite der Forscher des Angriffs: https://shattered.io/\line
Forschungsarbeit zum Angriff: https://shattered.io/static/shattered.pdf\line
"/>
  </replacements>

</sample>