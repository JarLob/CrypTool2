<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">ImageHash -- smooth comparison</title>
  <summary lang="en">Compares an image with a smoothed version of the same image, including their hamming distance and equality percentage</summary>
  <description lang="en">This template generates a blockhash of an image. Then, the same image is smoothed and also hashed. These hashed images and their differences are shown. This template also calculates the hamming distance between the two calculated hashes and the equality of the two images in percent.</description>
  <keywords>hash, blockhash, image, hamming, equality, comparison, smooth</keywords>

  <title lang="de">BildHash -- Weichzeichnungs-Vergleich</title>
  <summary lang="de">Vergleich eines Bildes mit einer weichgezeichneten Version des gleichen Bildes, ihre Hamming-Distanz und prozentuale Gleichheit</summary>
  <description lang="de">Diese Vorlage erzeugt einen Blockhash zu einem gewählten Bild. Das gleiche Bild wird dann weich gezeichnet und wiederum dessen Hash berechnet. Diese beiden Hashes und ihre Unterschiede werden dargestellt. Außerdem berechnet diese Vorlage auch die Hamming-Distanz zwischen den beiden Hashes und gibt die prozentuale Gleichheit der beiden Bilder an.</description>
  <keywords lang="de">hash, blockhash, image, hamming, gleichheit, vergleich, weich</keywords>

  <icon file="ImageHash.png" />
  <relevantPlugins>
    <plugin name="ImageHash" />
    <plugin name="HammingDistance" />
  </relevantPlugins>

  <replacements lang="de">
    <replacement key="$File Input$" value="Dateieingabe"/>
    <replacement key="$Image Equality$" value="Übereinstimmung der Bilder"/>
    <replacement key="$Original Image$" value="Originales Bild"/>
    <replacement key="$Original Hash Value$" value="Originaler Hashwert"/>
    <replacement key="$Original Hash Image$" value="Originales Hashbild"/>
    <replacement key="$Processed Image$" value="Bearbeitetes Bild"/>
    <replacement key="$Processed Hash Value$" value="Bearbeiteter Hashwert"/>
    <replacement key="$Processed Hash Image$" value="Bearbeitetes Hashbild"/>
    <replacement key="$Hamming Distance$" value="Hamming-Abstand"/>
    <replacement key="$ImageProcessor$" value="Bildbearbeitung"/>
    <replacement key="$ImageHash$" value="Bildhash"/>
    <replacement key="$Differences of Hashed Images$" value="Unterschiede in den Hashbildern"/>
    <replacement key="$value$" value="Wert"/>
	 <replacement key="$memo$" value="{\b Was zeigt diese Vorlage?}\line\line Diese Vorlage lädt ein Bild und zeigt es an. Das Bild wird geglättet und das Resultat wird ebenfalls angezeigt. Dann wird von beiden Bildern der Hashwert berechnet. Der Hashwert wird sowohl als Bild als auch als hexadezimaler Wert angezeigt. Im nächsten Schritt wird der Unterschied zwischen den beiden Hashbildern berechnet und dargestellt. Auf der rechten Seite wird die Hamming-Distanz zwischen den beiden Hashwerten berechnet. Dieser gibt an, an wievielen Pixeln sich die Hashbilder unterscheiden. Ausserdem wird die Übereinstimmung der Bilder in Prozent berechnet.\line\line {\b Wie arbeitet diese Vorlage?}\line\line Vom ausgewählten Bild wird mit der Bildhash-Komponente der Hashwert bestimmt. Das Eingabebild wird mit der Bildbearbeitungs-Komponente geglättet und anschliessend davon der Hashwert berechent. Die beiden Hashbilder werden dann mit der Bildbearbeitungs-Komponente XOR-verknüpft. Die Hamming-Distanz-Komponente ermittelt die Anzahl der verschiedenen Pixel. Diese Anzahl wird von 1024 abgezogen und das Ergebnis als Eingabe für eine Fortschritts-Komponente verwendet, die dann die Gleichheit der Bilder in Prozent angibt."/>
  </replacements>
  <replacements lang="en">
    <replacement key="$File Input$" value="File Input"/>
    <replacement key="$Image Equality$" value="Image Equality"/>
    <replacement key="$Original Image$" value="Original Image"/>
    <replacement key="$Original Hash Value$" value="Original Hash Value"/>
    <replacement key="$Original Hash Image$" value="Original Hash Image"/>
    <replacement key="$Processed Image$" value="Processed Image"/>
    <replacement key="$Processed Hash Value$" value="Processed Hash Value"/>
    <replacement key="$Processed Hash Image$" value="Processed Hash Image"/>
    <replacement key="$Hamming Distance$" value="Hamming Distance"/>
    <replacement key="$ImageProcessor$" value="Image Processor"/>
    <replacement key="$ImageHash$" value="Image Hash"/>
    <replacement key="$Differences of Hashed Images$" value="Differences of Hashed Images"/>
    <replacement key="$value$" value="value"/>
	 <replacement key="$memo$" value="{\b What does this template do?}\line\line This template loads one picture and displays it. This picture is smoothed and this new picture also displayed. Then the hash of both is calculated. Both this hash as text and the hashed pictures are displayed. In the next step the difference of the hashed images is shown. On the right side the hamming distance between the two hashes is calculated. It tells how meny pixels differ. Moreover the Image Equality is calculated in percent.\line\line {\b How does this template work?}\line\line The chosen input image is hashed via the ImageHash component. The same image is smoothed via the ImageProcessor component and hashed afterwards. These to images are Xor-connected via the ImageProcessor. The hamming distance component calculates the differing pixel amount. This amount is subtracted from 1024 and put into a progress component, together with 1024. This shows the Image Equality in percent."/>
  </replacements>

</sample>
