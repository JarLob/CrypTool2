<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">DES Cipher</title>
  <summary lang="en">Usage of the <i>DES</i> cipher</summary>
  <description lang="en">The Data Encryption Standard (DES) is a 64-bit block cipher that uses shared secret encryption. It was selected by the National Bureau of Standards as an official Federal Information Processing Standard (FIPS) for the United States in 1976 and which has subsequently enjoyed widespread use internationally. It is based on a symmetric-key algorithm that uses a 56-bit key. The algorithm was initially controversial because of classified design elements, a relatively short key length, and suspicions about a National Security Agency (NSA) backdoor. DES consequently came under intense academic scrutiny which motivated the modern understanding of block ciphers and their cryptanalysis.<newline /><newline />
DES is now considered to be insecure for many applications. This is chiefly due to the 56-bit key size being too small; in January, 1999, distributed.net and the Electronic Frontier Foundation collaborated to publicly break a DES key in 22 hours and 15 minutes (see chronology). There are also some analytical results which demonstrate theoretical weaknesses in the cipher, although they are infeasible to mount in practice. The algorithm is believed to be practically secure in the form of Triple DES, although there are theoretical attacks. In recent years, the cipher has been superseded by the Advanced Encryption Standard (AES). Furthermore, DES has been withdrawn as a standard by the National Institute of Standards and Technology (formerly the National Bureau of Standards).<newline /><newline />
In some documentation, a distinction is made between DES as a standard and DES the algorithm which is referred to as the DEA (the Data Encryption Algorithm). When spoken, "DES" is either spelled out as an abbreviation (/ˌdiːˌiːˈɛs/), or pronounced as a one-syllable acronym (/ˈdɛz/).<newline /><newline />
Source: <external ref="http://en.wikipedia.org/wiki/Data_Encryption_Standard" /></description>
  <keywords>symmetric, standard, 56, NSA</keywords>

  <title lang="de">DES-Chiffre</title>
  <summary lang="de">Benutzung der <i>DES</i>-Chiffre</summary>
  <description lang="de">Der Data Encryption Standard (DES) ist ein weit verbreiteter symmetrischer Verschlüsselungsalgorithmus (64-Bit-Blockchiffre).<newline /><newline />
Der DES-Algorithmus wurde als offizieller Standard für die US-Regierung (FIPS 46) im Jahr 1976 bestätigt und wird seither international vielfach eingesetzt. Seine Entstehungsgeschichte hat wegen der Beteiligung der NSA am Design des Algorithmus immer wieder Anlass zu Spekulationen über seine Sicherheit gegeben. Heute wird DES aufgrund der verwendeten Schlüssellänge von nur 56 Bits für viele Anwendungen als nicht ausreichend sicher erachtet.<newline /><newline />
Die Schlüssellänge kann durch Mehrfachanwendung des DES jedoch auf einfache Weise vergrößert werden. Als Triple-DES, auch als TDES, 3DES oder DESede bezeichnet, wird der DES weiterhin, zum Beispiel von Banken in Chipkartenanwendungen, eingesetzt, obwohl der TDES als offizieller Standard für die USA durch den Advanced Encryption Standard (AES) abgelöst wurde.<newline /><newline />
Quelle: <external ref="http://de.wikipedia.org/wiki/Data_Encryption_Standard" /></description>
  <keywords lang="de">symmetrisch</keywords>

  <icon file="DES.png" />
  <relevantPlugins>
    <plugin name="DES" />
  </relevantPlugins>

  <replacements lang="de">
    <replacement key="$Plaintext$" value="Klartext"/>
    <replacement key="$Ciphertext$" value="Geheimtext"/>
    <replacement key="$Key$" value="Schlüssel (hex) (DES-Blockgröße ist 8 Bytes; von jedem werden nur 7 Bits verwendet)"/>
    <replacement key="$Message Encoder$" value="Nachrichten-Codierer"/>
    <replacement key="$Message Decoder$" value="Nachrichten-Decodierer"/>
    <replacement key="$Key Decoder$" value="Schlüssel-Decodierer"/>
    <replacement key="$Decrypted Ciphertext$" value="Entschlüsselter Geheimtext"/>
    <replacement key="$text$" value="Franz jagt im komplett verwahrlosten Taxi quer durch Bayern."/>
	 <replacement key="$memo$" value="Mit dieser Komponente können Sie einen beliebigen Text, der in die Komponente {\b Klartext} auf der linken Seite eingegeben werden muss, mit der {\b DES}-Komponente verschlüsseln. Der resultierende verschlüsselte Text wird in der Komponente {\b Geheimtext} auf der rechten Seite angezeigt, nachdem die Vorlage durch Klicken der &quot;Starten&quot;-Schaltfläche ausgeführt wurde. Die {\b DES}-Komponente arbeitet mit binären Werten, d.h. Bytes. Daher wird der eingegebene Text zuerst mit der Komponente {\b Nachrichten-Decodierer} in Bytes konvertiert. Mit den gegebenen Einstellungen wird der Text im ASCII-Format interpretiert. Die so erhaltenen Bytes werden mit {\b DES} verschlüsselt und man erhält eine weitere Bytefolge. Diese wird dann mit Hilfe der {\b Nachrichten-Codierer}-Komponente ins hexadezimale Format konvertiert und ausgegeben.\line\line Diese Vorlage kann auch zur Entschlüsselung von Nachrichten verwendet werden. Dazu müssen zuerst die verschlüsselten hexadezimalen Werte in die Komponente {\b Klartext} kopiert werden. Dann müssen folgende Anpassungen vorgenommen werden: (1) Das Eingabeformat in der Komponente {\b Nachrichten-Decodierer} muss auf &quot;Hexadezimal&quot; gesetzt werden; (2) In der {\b DES}-Komponente muss die Aktion auf &quot;Entschlüsselung&quot; gesetzt werden; (3) Das Format in der Komponente {\b Nachrichten-Codierer} muss auf Text und die Kodierung auf &quot;ASCII&quot; gesetzt werden.\line\line Wenn die TripleDES-Variante von {\b DES} ausgewählt ist, muss der Schlüssel auch angepasst werden. Während {\b DES} einen Schlüssel bestehend aus 8 Bytes verlangt, braucht TripleDES einen Schlüssel von entweder 16 oder 24 Bytes."/>
 </replacements>
 <replacements lang="en">
    <replacement key="$Plaintext$" value="Plaintext"/>
    <replacement key="$Ciphertext$" value="Ciphertext"/>
    <replacement key="$Key$" value="Key (hex) (DES blocksize is 8 byte; from each byte only 7 bits are used as key)"/>
    <replacement key="$Message Encoder$" value="Message Encoder"/>
    <replacement key="$Message Decoder$" value="Message Decoder"/>
    <replacement key="$Key Decoder$" value="Key Decoder"/>
    <replacement key="$Decrypted_Ciphertext$" value="Decrypted Ciphertext"/>
    <replacement key="$text$" value="The quick brown fox jumps over the lazy dog."/>
	 <replacement key="$memo$" value="With this template you can use the {\b DES} component to encrypt an arbitrary text entered in the component {\b Plaintext} on the left side. The resulting encrypted text is displayed in the component {\b Ciphertext} on the right side after pressing the Play button. The {\b DES} component works on binary values, i.e. bytes. Thus, the input text is first converted to bytes with the component {\b Message decoder}. With the current settings, it is interpreted as ASCII. The resulting bytes are then encrypted with {\b DES}, yielding another sequence of bytes. These bytes are then simply printed as hexadecimal values with the help of the component {\b Message encoder}.\line\line Note that you can also decrypt messages with this template. To do so, first copy the encrypted hexadecimal values to the {\b Plaintext}. Then change the following: (1) Set Input format of the {\b Message decoder} to Hexadecimal; (2) Set Action of {\b DES} to Decrypt; (3) Set Format of the {\b Message encoder} to Text and the Encoding to ASCII.\line\line Also note that checking the TripleDES variant in the {\b DES} component will require you to adjust the key as well. While the {\b DES} algorithm needs a key of 8 bytes size, the TripleDES algorithm needs a key of either 16 or 24 bytes."/>
 </replacements>

</sample>
