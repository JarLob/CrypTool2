<?xml version="1.0" encoding="utf-8"?>
<sample>
  <title lang="en">Speck Cipher</title>
  <summary lang="en">Usage of the <i>Speck</i> cipher</summary>
  <description lang="en">This template shows the usage of the <i>Speck</i> cipher.</description>
  <keywords>block cipher, symmetric, speck</keywords>
  
  <title lang="de">Speck-Chiffre</title>
  <summary lang="de">Benutzung der <i>Speck</i>-Chiffre</summary>
  <description lang="de">Diese Vorlage zeigt die Benutzung der <i>Speck</i>-Chiffre.</description>
  <keywords lang="de">blockchiffre, symmetrisch, speck</keywords>
  
  <icon file="Speck.png" />
  <relevantPlugins>
    <plugin name="Speck" />
  </relevantPlugins>
  
    <replacements lang="en">
    <replacement key="$Plaintext$" value="Plaintext" />
    <replacement key="$Ciphertext$" value="Ciphertext" />
    <replacement key="$IV$" value="Initialization vector" />
    <replacement key="$Key$" value="Key" />
    <replacement key="$StringDecoder$" value="Text to hex" />
	<replacement key="$Stringcoder$" value="Hex to text" />
	<replacement key="$memo$" value="In this template, any input (in the text input component with the subtitle {\b plaintext / ciphertext} in the upper left corner) is encrypted using the Speck component. For this purpose, a key (in the text input component with the subtitle {\b Key}) and (depending on the selected block concatenation mode) an initialization vector (in the text input component with the subtitle {\b Initialization vector}) must be specified. The key text is displayed in the text output component with the subtitle {\b plaintext / ciphertext} in the upper right corner. Speck works on blocks of bytes. Input and output are in hexadecimal form. To convert the textual representation, the input and output of the Speck component uses appropriate decoders and encoders.\line\line The template is preconfigured to encode inputs in ECB mode. By adjusting the settings, the template can also be used for decoding inputs." />
  </replacements>
  
  <replacements lang="de">
    <replacement key="$Plaintext$" value="Klartext" />
    <replacement key="$Ciphertext$" value="Geheimtext" />
    <replacement key="$IV$" value="Initialisierungsvektor" />
    <replacement key="$Key$" value="Schlüssel" />
    <replacement key="$StringDecoder$" value="Text zu Hex" />
    <replacement key="$Stringcoder$" value="Hex zu Text" />
    <replacement key="$memo$" value="In dieser Vorlage wird eine beliebige Eingabe (in der Texteingabe-Komponente mit dem Untertitel {\b Klartext / Geheimtext} links oben) mittels der Speck-Komponente verschlüsselt. Dazu muss ein Schlüssel (in der Texteingabe-Komponente mit dem Untertitel {\b Schlüssel}) und (je nach gewähltem Blockverkettungs-Modus) ein Initialisierungsvektor (in der Texteingabe-Komponente mit dem Untertitel {\b Initialisierungsvektor}) spezifiziert werden. Der Schlüsseltext wird in der Textausgabe-Komponente mit dem Untertitel {\b Klartext / Geheimtext} rechts oben angezeigt. Speck arbeitet auf Blöcken von Bytes. Die Ein- und Ausgabe erfolgt in hexadezimaler Form. Die Ein- und Ausgaben der Speck-Komponente werden in eine textuelle Repräsentation durch entsprechende Decodierer und Codierer konvertiert.\line\line Das Template ist zur Verschlüsselung von Eingaben im ECB-Mode vorkonfiguriert. Durch Anpassung der Einstellungen kann das Template auch zur Entschlüsselung von Eingaben verwendet werden." />
  </replacements>

</sample>