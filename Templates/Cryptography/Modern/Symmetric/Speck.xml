<?xml version="1.0" encoding="utf-8"?>
<sample>
  <title lang="en">Speck Cipher</title>
  <summary lang="en">Usage of the <i>Speck</i> cipher</summary>
  <description lang="en">This template shows how to encrypt and decrypt with 10 variants of the modern block cipher family <i>Speck</i>.</description>
  <keywords>block cipher, symmetric, speck</keywords>
  
  <title lang="de">Speck-Chiffre</title>
  <summary lang="de">Benutzung der <i>Speck</i>-Chiffre</summary>
  <description lang="de">Diese Vorlage zeigt, wie man mit den 10 Varianten der modernen Blockchiffrierfamilie <i>Speck</i> ver- und entschlüsseln kann.</description>
  <keywords lang="de">blockchiffre, symmetrisch, speck</keywords>
  
  <icon file="Speck.png" />
  <relevantPlugins>
    <plugin name="Speck" />
  </relevantPlugins>
  
    <replacements lang="en">
    <replacement key="$Plaintext$" value="Plaintext" />
    <replacement key="$Ciphertext$" value="Ciphertext" />
    <replacement key="$IV$" value="Initialization vector" />
    <replacement key="$Key$" value="Key" />
    <replacement key="$StringDecoder$" value="Text to hex" />
	<replacement key="$Stringcoder$" value="Hex to text" />
	<replacement key="$memo$" value="{\b Encryption and Decryption with Speck Cipher} \line\line In this template, any input in the text input component with the subtitle {\b Plaintext / Ciphertext} (in the upper left corner) is encrypted using the Speck cipher. For the encryption, Speck needs a key (in the component with the subtitle {\b Key}) and – depending on the selected chaining mode – an initialization vector (in the component with the subtitle {\b Initialization vector}). \line\line The output (encrypted or decrypted text) is displayed in the component with the subtitle {\b Ciphertext / Plaintext} (in the upper right corner). \line\line Speck works on blocks of bytes. All inputs and outputs are in hexadecimal form. To convert the textual representation, the input and output of the Speck component are converted with appropriate decoders and encoders. The block length for plaintext and ciphertext varies from 32 bit (8 hex characters) to 128 bit (32 hex characters). The key is at least as long as a data block and varies between 64 and 256 bits. \line\line The template is preconfigured to encode inputs in CBC mode with Speck32/64. By adjusting the settings of the Speck component, the template can also be used for other block concatenation or padding modes. Overall 10 variants of Speck are offered. \line\line See: https://en.wikipedia.org/wiki/Speck_(cipher) \line\line {\b Example inputs and expected results}: \line\line Speck32/64: Blockmode=CBC-Mode, Action=Encrypt, Padding=Zeros \line Plaintext=4C6974, IV=80AF127A , Key=0001080910111819 \line expected Ciphertext=EC0D3CEF \line\line Speck48/72: Blockmode=CFB-Mode, Action=Encrypt, Padding=Zeros \line Plaintext=72616C6C7920, IV=80AF127A6C79, Key=00010208090A101112 \line expected Ciphertext=CBD1B27EF141 \line\line (For testing please adjust mode and plaintext or mode, plaintext, IV and key)" />
  </replacements>
  
  <replacements lang="de">
    <replacement key="$Plaintext$" value="Klartext" />
    <replacement key="$Ciphertext$" value="Geheimtext" />
    <replacement key="$IV$" value="Initialisierungsvektor" />
    <replacement key="$Key$" value="Schlüssel" />
    <replacement key="$StringDecoder$" value="Text zu Hex" />
    <replacement key="$Stringcoder$" value="Hex zu Text" />
    <replacement key="$memo$" value="{\b Verschlüsselung und Entschlüsselung mit der Speck-Chiffre} \line\line In dieser Vorlage wird jede Eingabe in der Texteingabekomponente mit der Unterschrift {\b Klartext / Geheimtext} (in der oberen linken Ecke) mit der Speck-Chiffre verschlüsselt. Für die Verschlüsselung benötigt Speck einen Schlüssel (in der Komponente mit der Unterschrift {\b Schlüssel}) und – je nach gewähltem Verkettungsmodus – einen Initialisierungsvektor (in der Komponente mit der Unterschrift {\b Initialisierungsvektor}). \line\line Die Ausgabe (Geheimtext oder Klartext) wird in der Komponente mit der Unterschrift {\b Geheimtext / Klartext} (in der oberen rechten Ecke) angezeigt. \line\line Alle Ein- und Ausgaben erfolgen in hexadezimaler Form. Um die textuelle Darstellung zu konvertieren, werden die Ein- und Ausgabe der Speck-Komponente mit entsprechenden Decodern und Encodern umgewandelt. Die Blocklänge für Klartext und Geheimtext variiert von 32 bit (8 Hexzeichen) bis 128 bit (32 Hexzeichen). Der Schlüssel ist mindestens so lang wie ein Datenblock und variiert zwischen 64 und 256 bit. \line\line Die Vorlage ist vorkonfiguriert, um Eingaben im CBC-Modus mit Speck32/64 zu kodieren. Durch Anpassung der Einstellungen der Speck-Komponente kann die Vorlage auch für andere Blockverkettungs- und Padding-modi verwendet werden. Insgesamt werden 10 Varianten von Speck angeboten. \line\line Siehe: https://en.wikipedia.org/wiki/Speck_(cipher) \line\line {\b Beispielhafte Eingaben und erwartete Ergebnisse}: \line\line Speck32/64: Betriebsmodus=CBC-Mode, Aktion=Verschlüsseln, Padding=Nullen \line Klartext=4C6974, IV=80AF127A, Schlüssel=0001080910111819 \line erwarteter Geheimtext=EC0D3CEF \line\line Speck48/72: Betriebsmodus=CFB-Mode, Aktion=Verschlüsseln, Padding=Nullen \line Klartext=72616C6C7920, IV=80AF127A6C79, Schlüssel=00010208090A101112 \line erwarteter Geheimtext=CBD1B27EF141 \line\line (Zum Testen bitte Modus und Klartext bzw. Modus, Klartext, IV und Schlüssel anpassen)" />
  </replacements>

</sample>