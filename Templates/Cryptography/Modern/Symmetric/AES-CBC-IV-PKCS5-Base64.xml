<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">AES(CBC) with PKCS#5 and IV</title>
  <summary lang="en">Usage of the <i>AES</i> cipher in CBC mode with an initialization vector, where the session key is generated from a password using PKCS#5 and the ciphertext is encoded in base64</summary>
  <description lang="en">In this template we provide a quick way to encrypt plaintext with AES [1] by using a simple password (which is converted to an AES-key by using PKCS#5 [2]). The result is base64-encoded for easy copy and paste e.g. to an email. Decryption is also possible with this template: The encrypted base64-encoded text needs to be copied to the <b>Input</b>-component. Then the AES-<b>component</b> needs to be switched to "Decrypt" and the <b>Switch</b>-component must be set to <i>True</i>. With the help of the <b>Switch</b>-component, the data takes a different path, i.e. for decryption we first need to base64-decode it, while when encrypting we encode it in base64 after encryption.<newline />
In this template additionally a random initialization vector (IV) is used to strengthen the security of the message. The IV is also encoded in base64 and prepended to the encrypted message. On the receiving side, the received IV is decoded and used to decrypt the message. Using a random IV for every message yields always different ciphertexts even when sending the same plaintext.
  <newline /><newline />
Sources:<newline />
[1] <external ref="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard" /><newline />
[2] <external ref="http://tools.ietf.org/html/rfc2898" />
  </description>
  <keywords>advanced, Daemen, Rijmen, Rijndael, symmetric, nist, pkcs, password, base64</keywords>

  <title lang="de">AES(CBC) mit PKCS#5 und IV</title>
  <summary lang="de">Benutzung der <i>AES</i>-Chiffre im CBC-Modus mit einem Initialisierungsvektor, wobei der Sitzungsschlüssel per PKCS#5 aus einem Passwort erzeugt wird und der Geheimtext in Base64 ausgegeben wird</summary>

  <description lang="de">Mit dieser Vorlage ist es möglich einen Eingabetext mit Hilfe eines Passwortes zu verschlüsseln. Für die Verschlüsselung wird dabei AES [1] verwendet und um aus dem Passwort einen geeigneten AES-Schlüssel zu generieren wird PKCS#5 [2] verwendet. Das verschlüsselte Ergebnis wird in textueller Form als Base-64-Kodierung ausgegeben - dadurch kann die Ausgabe sehr einfach z.B. in eine E-Mail kopiert werden. Auch das Entschlüsseln einer solchen Nachricht ist mit dieser Vorlage möglich: Der Base-64-kodierte Text muss dafür in die <b>Input</b>-Komponente kopiert werden. Danach muss die AES-<b>Komponente</b> auf "Entschlüsseln" und die <b>Switch</b>-Komponente auf <i>Wahr</i> geschaltet werden. Mit Hilfe der <b>Switch</b>-Komponente wird der Datenpfad für das Ver- bzw. Entschlüsseln jeweils entsprechend angepasst, d.h. bei der Entschlüsselung muss die Eingabe zunächst Base64-dekodiert und bei der Verschlüsselung muss die Ausgabe Base64-kodiert werden.
  <newline /> In dieser Vorlage wird zur Steigerung der Sicherheit zusätzlich ein zufälliger Initialisierungsvektor (IV) für jede Nachricht verwendet. Der IV wird dabei auch Base64-kodiert und der eigentlichen (verschlüsselten) Nachricht vorangestellt. Beim Empfänger wird der IV dekodiert und zum Entschlüsseln der Nachricht verwendet. Durch die Verwendung eines zufälligen IVs für jede neue Nachricht erhält man immer unterschiedliche verschlüsselte Texte, selbst wenn die Klartextnachricht gleich sein sollte.
  <newline /><newline />
Quellen:<newline />
[1] <external ref="http://de.wikipedia.org/wiki/Advanced_Encryption_Standard" /><newline />
[2] <external ref="http://tools.ietf.org/html/rfc2898" />
  </description>
  <keywords lang="de">Daemen, Rijmen, Rijndael, symmetrisch, nist, pkcs, password, base64</keywords>

  <icon file="AES.png" />
  <relevantPlugins>
    <plugin name="AES" />
  </relevantPlugins>

</sample>