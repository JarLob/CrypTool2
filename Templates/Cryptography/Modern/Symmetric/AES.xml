<?xml version="1.0" encoding="utf-8"?>
<sample>
  <title lang="en">AES Cipher (Text Input)</title>
  <title lang="zh">AES密码（文本输入）</title>
  <title lang="ru">AES Cipher (текстовый ввод)</title>
  <summary lang="en">Usage of the <i>AES</i> cipher with text input</summary>
  <summary lang="zh">带有文本输入的AES密码的使用</summary>
  <summary lang="ru">Использование шифрования AES с текстовым вводом</summary>
  <description lang="en">In cryptography, the Advanced Encryption Standard (AES) is a symmetric-key encryption standard adopted by the U.S. government. The standard comprises three block ciphers, AES-128, AES-192 and AES-256, adopted from a larger collection originally published as Rijndael. Each of these ciphers has a 128-bit block size, with key sizes of 128, 192 and 256 bits, respectively. The AES ciphers have been analyzed extensively and are now used worldwide, as was the case with its predecessor, the Data Encryption Standard (DES).<newline /><newline />
AES was announced by National Institute of Standards and Technology (NIST) as U.S. FIPS PUB 197 (FIPS 197) on November 26, 2001 after a 5-year standardization process in which fifteen competing designs were presented and evaluated before Rijndael was selected as the most suitable (see Advanced Encryption Standard process for more details). It became effective as a Federal government standard on May 26, 2002 after approval by the Secretary of Commerce. It is available in many different encryption packages. AES is the first publicly accessible and open cipher approved by the NSA for top secret information (see Security of AES, below).<newline /><newline />
The Rijndael cipher was developed by two Belgian cryptographers, Joan Daemen and Vincent Rijmen, and submitted by them to the AES selection process. Rijndael (Dutch pronunciation: [ˈrɛindaːl]) is a wordplay based upon the names of the two inventors.<newline /><newline />
Source: <external ref="http://en.wikipedia.org/wiki/Advanced_Encryption_Standard" /></description>
  <description lang="zh">在加密技术中，高级加密标准（AES）是美国政府采用的对称密钥加密标准。该标准包括三个分组密码，即AES-128，AES-192和AES-256，从最初发行为Rijndael的较大集合中采用。这些密码中的每个密码都有128位的块大小，密钥大小分别为128、192和256位。 AES密码已进行了广泛的分析，并且像其前身数据加密标准（DES）一样，现已在全球范围内使用。 AES由美国国家标准技术研究院（NIST）在2001年11月26日宣布为US FIPS PUB 197（FIPS 197），历经5年的标准化过程，其中提出并评估了15个竞争设计，然后才被选为Rijndael最适合（有关更多详细信息，请参阅“高级加密标准”过程）。经商务部长批准后，它于2002年5月26日作为联邦政府标准生效。它有许多不同的加密软件包可用。 AES是美国国家安全局（NSA）批准的第一个可公开访问的开放密码，用于获取最高机密信息（请参阅下面的AES安全性）。 Rijndael密码是由两名比利时密码学家Joan Daemen和Vincent Rijmen开发的，并由他们提交给AES选择过程。 Rijndael（荷兰语发音：[rɛindaːl]）是基于两位发明者姓名的文字游戏。资源：</description>
  <description lang="ru">В криптографии стандарт расширенного шифрования (AES) является стандартом шифрования с симметричным ключом, принятым правительством США. Стандарт состоит из трех блочных шифров, AES-128, AES-192 и AES-256, принятых из более крупной коллекции, первоначально опубликованной как Rijndael. Каждый из этих шифров имеет 128-битный размер блока, с размерами клавиш 128, 192 и 256 бит, соответственно. Шифры AES были подробно проанализированы и теперь используются во всем мире, как это было в случае с его предшественником, стандартом шифрования данных (DES). AES был анонсирован Национальным институтом стандартов и технологий (NIST) в качестве US FIPS PUB 197 (FIPS 197) 26 ноября 2001 года после пятилетнего процесса стандартизации, в котором 15 конкурирующих проектов были представлены и оценены до того, как Rijndael был выбран как наиболее (см. расширенный процесс шифрования для более подробной информации). Он вступил в силу как стандарт федерального правительства 26 мая 2002 года после одобрения министра торговли. Он доступен во многих различных пакетах шифрования. AES является первым общедоступным и открытым шифром, одобренным NSA для получения полной секретной информации (см. Безопасность AES ниже). Шифр Rijndael был разработан двумя бельгийскими криптографами Джоан Даемен и Винсент Риджмен и представлен ими в процессе отбора AES. Rijndael (голландское произношение: [rɛindaːl]) - это игровой процесс, основанный на именах двух изобретателей. Источник:</description>
  <keywords>advanced, Daemen, Rijmen, Rijndael, symmetric, nist</keywords>
  <keywords lang="zh">高级，Daemen，Rijmen，Rijndael，对称，nist</keywords>
  <keywords lang="ru">продвинутый, Daemen, Rijmen, Rijndael, симметричный, nist</keywords>
  <title lang="de">AES-Chiffre (Texteingabe)</title>
  <summary lang="de">Benutzung der <i>AES</i>-Chiffre mit Texteingabe</summary>
  <description lang="de">Der Advanced Encryption Standard (AES) ist ein symmetrisches Kryptosystem, das als Nachfolger für DES und 3DES im Oktober 2000 vom National Institute of Standards and Technology (NIST) als Standard bekanntgegeben wurde. Nach seinen Entwicklern Joan Daemen und Vincent Rijmen wird er auch Rijndael-Algorithmus genannt (gesprochen wie dt. räindahl). Der Rijndael-Algorithmus besitzt eine variable Blockgröße von 128, 192 oder 256 Bits und eine variable Schlüssellänge von 128, 192 oder 256 Bits. Rijndael bietet ein sehr hohes Maß an Sicherheit. Das Verfahren wurde eingehenden kryptoanalytischen Prüfungen unterzogen. AES schränkt die Blocklänge auf 128 Bit ein, während die Wahl der Schlüssellänge von 128, 192 oder 256 Bits unverändert übernommen worden ist. Die Bezeichnungen der drei AES-Varianten AES-128, AES-192 und AES-256 beziehen sich jeweils auf die gewählte Schlüssellänge.<newline /><newline />
Der Algorithmus ist frei verfügbar und darf ohne Lizenzgebühren eingesetzt sowie in Soft- und Hardware implementiert werden. AES ist in den USA für staatliche Dokumente mit höchster Geheimhaltungsstufe zugelassen.<newline /><newline />
Quelle: <external ref="http://de.wikipedia.org/wiki/Advanced_Encryption_Standard" /></description>
  <keywords lang="de">symmetrisch</keywords>
  <icon file="AES.png" />
  <relevantPlugins>
    <plugin name="AES" />
  </relevantPlugins>
  <replacements lang="de">
    <replacement key="$Plaintext$" value="Klartext" />
    <replacement key="$Ciphertext$" value="Geheimtext" />
    <replacement key="$Key$" value="Schlüssel (Hex)" />
    <replacement key="$Message Encoder$" value="Nachrichten-Codierer" />
    <replacement key="$Message Decoder$" value="Nachrichten-Decodierer" />
    <replacement key="$Key Decoder$" value="Schlüssel-Decodierer" />
    <replacement key="$StringEncoder$" value="String-Codierer" />
    <replacement key="$StringDecoder$" value="String-Decodierer" />
    <replacement key="$Decrypted Ciphertext$" value="Entschlüsselter Geheimtext" />
    <replacement key="$text$" value="Franz jagt im komplett verwahrlosten Taxi quer durch Bayern." />
    <replacement key="$memo$" value="In dieser Vorlage wird ein beliebiger Text (der in die Komponente {\b Klartext} auf der linken Seite eingegeben ist) mit der AES-Komponente verschlüsselt. Der resultierende verschlüsselte Text wird in der Komponente {\b Geheimtext} auf der rechten Seite angezeigt, nachdem die Vorlage durch Klicken der &quot;Starten&quot;-Schaltfläche ausgeführt wurde. Die {\b AES}-Komponente arbeitet mit binären Werten, d.h. Bytes. Daher wird der eingegebene Text zuerst mit der Komponente {\b Nachrichten-Decodierer} in Bytes konvertiert. Mit den gegebenen Einstellungen wird der Text im ASCII-Format interpretiert. Die so erhaltenen Bytes werden mit {\b AES} verschlüsselt und man erhält eine weitere Bytefolge. Diese wird dann mit Hilfe der {\b Nachrichten-Codierer}-Komponente ins hexadezimale Format konvertiert und ausgegeben. Diese Vorlage kann auch zur Entschlüsselung von Nachrichten verwendet werden. Dazu müssen zuerst die verschlüsselten hexadezimalen Werte in die Komponente {\b Klartext} kopiert werden. Dann müssen folgende Anpassungen vorgenommen werden: (1) Das Eingabeformat in der Komponente {\b Nachrichten-Decodierer} muss auf &quot;Hexadezimal&quot; gesetzt werden; (2) In der {\b AES}-Komponente muss die Aktion auf &quot;Entschlüsselung&quot; gesetzt werden; (3) Das Format in der Komponente {\b Nachrichten-Codierer} muss auf Text und die Kodierung auf &quot;ASCII&quot; gesetzt werden." />
  </replacements>
  <replacements lang="zh">
    <replacement key="$Plaintext$" value="纯文本" />
    <replacement key="$Ciphertext$" value="密文" />
    <replacement key="$Key$" value="密钥（十六进制）" />
    <replacement key="$Message Encoder$" value="讯息编码器" />
    <replacement key="$Message Decoder$" value="讯息解码器" />
    <replacement key="$Key Decoder$" value="密钥解码器" />
    <replacement key="$StringEncoder$" value="字符串编码器" />
    <replacement key="$StringDecoder$" value="字符串解码器" />
    <replacement key="$Decrypted Ciphertext$" value="解密密文" />
    <replacement key="$text$" value="弗朗兹（Franz）乘坐一辆完全残破的出租车在巴伐利亚州内搜寻。" />
    <replacement key="$memo$" value="在此模板中，任何文本（输入到左侧的{\b Klartext}组件中）均使用AES组件加密。在通过单击“开始”按钮执行模板之后，生成的加密文本将显示在右侧的{\b密文}组件中。 {\b AES}组件使用二进制值，即字节。因此，首先使用组件{\b Message Decoder}将输入的文本转换为字节。使用给定的设置，文本将以ASCII格式解释。用{\b AES}加密以此方式获得的字节，您将获得另一个字节序列。然后将其转换为十六进制格式，并在{\b消息编码器}组件的帮助下输出。该模板也可以用于解密消息。为此，必须首先将加密的十六进制值复制到{\b Klartext}组件中。然后必须进行以下调整：（1）组件{\b消息解码器}中的输入格式必须设置为“十六进制”； （2）在{\b AES}组件中，必须将操作设置为“解密”； （3）必须将组件{\b Message Encoder}中的格式设置为文本，并将编码设置为“ ASCII”。" />
  </replacements>
  <replacements lang="ru">
    <replacement key="$Plaintext$" value="обычный текст" />
    <replacement key="$Ciphertext$" value="шифротекста" />
    <replacement key="$Key$" value="Ключ (hex)" />
    <replacement key="$Message Encoder$" value="Новости кодировщик" />
    <replacement key="$Message Decoder$" value="декодер сообщений" />
    <replacement key="$Key Decoder$" value="Ключ-декодер" />
    <replacement key="$StringEncoder$" value="Строка кодировщик" />
    <replacement key="$StringDecoder$" value="Строка декодера" />
    <replacement key="$Decrypted Ciphertext$" value="Расшифрованный зашифрованный текст" />
    <replacement key="$text$" value="Франц охотится на полностью забытое такси через Баварию." />
    <replacement key="$memo$" value="Этот компонент позволяет зашифровать любой текст, который необходимо ввести в компоненте {\b plain text} слева, с помощью компонента {\b AES}. Полученный зашифрованный текст отображается в компоненте {\b Ciphertext} справа после запуска шаблона, нажав кнопку «Пуск». Компонент {\b AES} работает с двоичными значениями, то есть байтами. Поэтому исходный текст сначала преобразуется в байты с помощью компонента {\b Message Decoder}. С заданными настройками текст интерпретируется в формате ASCII. Результирующие байты зашифровываются с помощью {\b AES}, и вы получаете еще одну последовательность байтов. Затем он преобразуется в шестнадцатеричный формат с использованием компонента {\b message encoder} и вывода. Этот шаблон также можно использовать для дешифрования сообщений. Для этого зашифрованные шестнадцатеричные значения сначала должны быть скопированы в компонент {\b plaintext}. Затем необходимо выполнить следующие настройки: (1) Формат ввода в компоненте {\b декодер сообщений} должен быть установлен в &amp;quot;шестнадцатеричный&amp;quot;; (2) В компоненте {\b AES} действие должно быть установлено на «Расшифровка»; (3) Формат в компоненте {\b Message Encoder} должен быть установлен в текст, а кодировка - в «ASCII»." />
  </replacements>
  <replacements lang="en">
    <replacement key="$Plaintext$" value="Plaintext" />
    <replacement key="$Ciphertext$" value="Ciphertext" />
    <replacement key="$Key$" value="Key (Hex values)" />
    <replacement key="$Message Encoder$" value="Message Encoder" />
    <replacement key="$Message Decoder$" value="Message Decoder" />
    <replacement key="$Key Decoder$" value="Key Decoder" />
    <replacement key="$Decrypted_Ciphertext$" value="Decrypted Ciphertext" />
    <replacement key="$text$" value="The quick brown fox jumps over the lazy dog." />
    <replacement key="$memo$" value="With this template you can use the {\b AES} component to encrypt an arbitrary text entered in the {\b Plaintext} component on the left side. The resulting encrypted text is displayed in the {\b Ciphertext} component on the right side after hitting the Play button. The {\b AES} component works on binary values, i.e. bytes. Thus, the inputted text is first converted to bytes with the {\b Message Decoder} component. With the current settings, it is interpreted as ASCII. The resulting bytes are then encrypted with {\b AES}, yielding another sequence of bytes. These bytes are then simply printed as hexadecimal values with the help of the {\b Message Encoder} component. Note that you can also decrypt messages with this template. To do so, you first copy the encrypted hexadecimal values to the {\b Plaintext} component. Then you have to change the following: (1) Set Input format of the {\b Message Decoder} to Hexadecimal; (2) Set Action of {\b AES} to Decrypt; (3) Set Format of the {\b Message Encoder} to Text and the encoding to ASCII." />
  </replacements>
</sample>