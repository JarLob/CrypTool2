<?xml version="1.0" encoding="utf-8"?>
<sample>
  <title lang="en">Homophone Substitution Cipher and Nomenclature -- Decryption</title>
  <summary lang="en">Decrypt texts using the <i>substiution</i> component for homophone Decryption and nomenclatures</summary>
  <description lang="en">This template shows the usage of the <i>subsitution</i> component for homophone decryption and the usage of a nomenclature.</description>
  <keywords>substitution, monoalphabetic, homophone, nomenclature</keywords>

  <title lang="de">Homophone Substitutions-Chiffre und Nomenklatur -- Entschlüsselung</title>
  <summary lang="de">Benutzung des <i>Substitutionsplugins</i> für homophone Entschlüsselungen und Nomenklaturen</summary>
  <description lang="de">Diese Vorlage zeigt die Benutzung der <i>Substitutions-Komponente</i> um homophone Verschlüsselungen zu entschlüsseln und Nomenklaturen zu nutzen.</description>
  <keywords lang="de">Substitution, monoalphabetisch, homophon, Nomenklatur</keywords>

  <icon file="substitution.png" />
  <relevantPlugins>
    <plugin name="Substitution" />
  </relevantPlugins>

<replacements lang="de">
    <replacement key="$PLAINTEXT$" value="Klartext"/>	
	<replacement key="$CIPHERTEXT$" value="Geheimtext"/>	
	<replacement key="$NOMENCLATURE$" value="Nomenklatur"/>	
	<replacement key="$PLAIN_COLUMN$" value="Klartextspalte"/>	
	<replacement key="$CIPHER_COLUMN$" value="Geheimtextspalte"/>	
	<replacement key="$MEMO$" value="{\fs25 Diese Vorlage zeigt, wie man die Schlüssel von homophonen Chiffren oder sogar von Nomenklaturen erstellen kann, und wie man mit diesem Schlüssel und der Substitutions-Komponente einen Text entschlüsseln kann.\line\line
In der Texteingabe-Komponente {\b Nomenklatur} können die Homophone bzw. die Nomenklatur definiert werden.\line\line
{\b [A];[01|02]} definiert, dass der Buchstabe {\b A} durch eines der Homophone {\b 01} oder {\b 02} substituiert wird.\line
{\b [BISHOP];[85]} definiert, dass das Wort {\b BISHOP} mit dem Homophon {\b 85} substituiert wird.\line\line
Mit Hilfe der beiden CSV-Leser-Komponenten werden die Elemente des Klartextalphabets (A...Z sowie Wörter) und die Elemente des Geheimtextalphabets (01 bis zu einer beliebigen ganzen Zahl) extrahiert und an die Substitutions-Komponente weitergegeben. Die Substitutions-Komponente nutzt diese als Input dann zusammen mit dem Klartext, um die eigentliche Verschlüsselung durchzuführen.\line\line
In der Nomenklatur steht jede Abbildung eines Elements des Klartextalphabets in einer neuen Zeile; die Elemente vom Klartext- und vom Geheimtextalphabet innerhalb einer Zeile sind jeweils durch ein Semikolon getrennt.\line
Ganze zu substituierende Wörter des Klartext-Alphabets werden genauso wie die Einzelzeichen mit Hilfe von eckigen Klammern {\b []} definiert. Um ein Zeichen oder Wort auf mehrere unterschiedliche Homophone abzubilden, werden die Homophone durch {\b |} voneinander getrennt.\line
Um eigene Abbildungen zu definieren, kann eine bestehende Zeile einfach kopiert und unten angefügt werden. Die geänderte Abbildung wird im Play-Modus sofort wirksam.\line\line
Quelle des Klartexts: https://en.wikipedia.org/wiki/Pope
}"/>	
 </replacements>
 
<replacements lang="en">
    <replacement key="$PLAINTEXT$" value="Plaintext"/>	
	<replacement key="$CIPHERTEXT$" value="Ciphertext"/>	
	<replacement key="$NOMENCLATURE$" value="Nomenclature"/>	
	<replacement key="$PLAIN_COLUMN$" value="Plaintext column"/>	
	<replacement key="$CIPHER_COLUMN$" value="Ciphertext column"/>	
	<replacement key="$MEMO$" value="{\fs25 This template shows how to create a homophonic cipher or even a nomenclature using the substitution component and then decrypt a text using the created cipher.\line\line
In the TextInput component {\b Nomenclature} the homophones or the nomenclature can be defined.\line\line
{\b [A];[01|02]} defines that the letter {\b A} is substituted by one of the homophones {\b 01} or {\b 02}.\line
{\b [BISHOP];[85]} defines that the word {\b BISHOP} is substituted with the homophone {\b 85}.\line\line
With the help of the two CSV-Reader components, the elements of the plaintext alphabet (A ... Z and words) and the elements of the ciphertext alphabet (01 up to any integer number) are extracted and forwarded to the Substitution component. The Substitution component then uses these as inputs together with the plaintext to perform the actual encryption.\line\line
In the nomenclature, each mapping of an element of the plaintext alphabet is placed in a separate line; the elements of plaintext and ciphertext alphabet within one line are separated by a semicolon.\line
Whole words of the plaintext alphabet are -- like the single characters -- defined by square brackets {\b[]}. To map a character or a word to several different homophones, the homophones are separated by {\b |}.\line
To define your own mappings, an existing line in the nomenclature can simply be copied and added at the bottom. The changed mapping is effective in the Play mode at once.\line\line
Source of the plaintext: https://en.wikipedia.org/wiki/Pope
}"/>	
 </replacements>
</sample>