<?xml version="1.0" encoding="utf-8"?>
<sample>
  <title lang="en">RSA with big Numbers</title>
  <title lang="ru">RSA с большими номерами</title>
  <summary lang="en">Implementation of <i>RSA</i> using mathematical components</summary>
  <summary lang="ru">Реализация RSA с использованием математических компонентов</summary>
  <description lang="en">This template shows the implementation of <i>RSA</i> using mathematical components.</description>
  <description lang="ru">Этот шаблон показывает реализацию RSA с использованием математических компонентов.</description>
  <keywords>precision, arbitrary, bignumber</keywords>
  <keywords lang="ru">точность, произвольный, bignumber</keywords>
  <title lang="de">RSA mit großen Zahlen</title>
  <summary lang="de">Implementierung von <i>RSA</i> mit mathematischen Komponenten</summary>
  <description lang="de">Diese Vorlage zeigt die Implementierung von <i>RSA</i> mit mathematischen Komponenten.</description>
  <keywords lang="de">beliebige, Präzision, Stellen</keywords>
  <icon file="RSA.png" />
  <replacements lang="de">
    <replacement key="$Message$" value="Nachricht" />
    <replacement key="$Public exponent$" value="Öffentlicher Exponent" />
    <replacement key="$Prime number$" value="Primzahl" />
    <replacement key="$Private key$" value="Privater Schlüssel" />
    <replacement key="$Ciphertext$" value="Geheimtext" />
    <replacement key="$Decrypted ciphertext$" value="Entschlüsselter Geheimtext" />
    <replacement key="$memo$" value="Diese Vorlage demonstriert den RSA-Algorithmus -- aufgebaut mit einfachen mathematischen Komponenten.\line\line RSA verwendet einen öffentlichen Exponenten {\b e} und einen privaten Exponenten {\b d}. Der Exponent {\b e} ist Teil des öffentlichen Schlüssels {\b (e, N)}, den jeder wissen darf. Nachrichten, die mit dem öffentlichen Schlüssel {\b e} verschlüsselt wurden, können nur mit dem privaten Schlüssel {\b d} wieder entschlüsselt werden.\line\line Um eine Nachricht {\b m} zu verschlüsseln, wird die Zahl {\b c} berechnet durch {\b c = m^e mod N}, wobei {\b N} das Produkt zweier zufällig gewählten Primzahlen ist: {\b N = p * q}.\line\line Um einen Geheimtext {\b c} zu entschlüsseln, wird die Nachricht {\b m} berechnet durch {\b m = c^d mod N}.\line\line {\b d} ist dann die multiplikative Inverse von {\b e mod \u966?(N)}, wobei {\b \u966?(N) = (p-1)(q-1)}.\line\line Um einen abgehörten Geheimtext zu entschlüsseln, muss ein Angreifer {\b d} berechnen. Da er aber nur {\b N} und {\b e} kennt, nicht aber {\b p}, {\b q} oder {\b \u966?(N)}, muss er {\b N} faktorisieren, um den Schlüssel berechnen zu können. Dies würde für große {\b N} (mit mehr als 1024 Bits) jedoch Jahrhunderte dauern." />
  </replacements>
  <replacements lang="ru">
    <replacement key="$Message$" value="сообщение" />
    <replacement key="$Public exponent$" value="Общественный представитель" />
    <replacement key="$Prime number$" value="простое число" />
    <replacement key="$Private key$" value="Частный ключ" />
    <replacement key="$Ciphertext$" value="шифротекста" />
    <replacement key="$Decrypted ciphertext$" value="Расшифрованный зашифрованный текст" />
    <replacement key="$memo$" value="Этот шаблон демонстрирует алгоритм RSA, построенный с использованием простых математических компонентов. \Line \line RSA использует открытый экспонент {\be} и частный экспонент {\bd}. Показатель {\be} является частью открытого ключа {\b (e, N)}, который всем разрешено знать. Сообщения, зашифрованные открытым ключом {\be}, могут быть дешифрованы только с помощью закрытого ключа {\bd}. \Line \line Для шифрования сообщения {\bm} вычисляется номер {\bc} {\bc = m ^ e mod N}, где {\b N} - произведение двух случайных простых чисел: {\b N = p * q}. \line \line Чтобы расшифровать зашифрованный текст {\bc} сообщение {\bm} вычисляется по {\bm = c ^ d mod N}. \line {\bd} является мультипликативным обратным к {\mod \u966? (N)}, где {\b \u966? (N) = (p-1) (q-1)}. \line \line Чтобы расшифровать прослушанный зашифрованный текст, злоумышленник должен вычислить {\bd}. Но так как он знает только {\b N} и {\be}, но не {\bp}, {\bq} или {\b \u966? (N)}, ему приходится учитывать {\b N} Ключ для вычисления. Однако для больших {\b N} (с более чем 1024 бит) это потребует столетий." />
  </replacements>
  <replacements lang="en">
    <replacement key="$Message$" value="Message" />
    <replacement key="$Public exponent$" value="Public exponent" />
    <replacement key="$Prime number$" value="Prime number" />
    <replacement key="$Private key$" value="Private key" />
    <replacement key="$Ciphertext$" value="Ciphertext" />
    <replacement key="$Decrypted ciphertext$" value="Decrypted ciphertext" />
    <replacement key="$memo$" value="This sample demonstrates the RSA algorithm -- built up with simple mathematical components.\line\line RSA uses a public exponent {\b e} and a private exponent {\b d}. The exponent {\b e} is part of the public key {\b (e, N)} which can be known to everyone. Messages encrypted with the public key {\b e} can only be decrypted using the private key {\b d}.\line\line To encrypt a message {\b m}, the ciphertext {\b c} is calculated by {\b c = m^e mod N} where {\b N} is the product of two randomly chosen prime numbers: {\b N = p * q}.\line\line To decrypt a ciphertext {\b c}, the message {\b m} is calculated by {\b m = c^d mod N}.\line\line {\b d} is the multiplicative inverse of {\b e mod \u966?(N)} where {\b \u966?(N) = (p-1)(q-1)}.\line\line To decrypt a stolen ciphertext, an attacker has to calculate {\b d}. As he only knows {\b N} and {\b e}, but not {\b p}, {\b q} or {\b \u966?(N)}, he has to factorize {\b N} and do the key generation again. However, with big {\b N} (size = more than 1024 bits) this takes centuries." />
  </replacements>
</sample>