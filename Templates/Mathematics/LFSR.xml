<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">Linear Feedback Shift Register (LFSR)</title>
  <summary lang="en">Usage of the <i>Linear Feedback Shift Register</i></summary>
  <description lang="en">This template shows the usage of the <i>Linear Feedback Shift Register</i>.</description>
  <keywords>shift, register, feedback</keywords>

  <title lang="de">Linear rückgekoppeltes Schieberegister (LFSR)</title>
  <summary lang="de">Benutzung des <i>Linear rückgekoppelten Schieberegisters</i></summary>
  <description lang="de">Diese Vorlage zeigt die Benutzung des <i>Linear rückgekoppelten Schieberegisters</i>.</description>
  <keywords lang="de">rückkopplung</keywords>

  <icon file="LFSR.png" />

  <relevantPlugins>
    <plugin name="LFSR" />
  </relevantPlugins>

  <replacements lang="de">
    <replacement key="$Tap Sequence$" value="Tap-Sequenz"/>
    <replacement key="$Linear Feedback Shift Register$" value="Linear rückgekoppeltes Schieberegister"/>
    <replacement key="$Output Stream$" value="Ausgabe-Datenstrom"/>
	 <replacement key="$memo$" value="A linear feedback shift register (LFSR) is a shift register whose input bit is a linear function of its previous state.\line\line The most commonly used linear function of single bits is XOR. Thus, an LFSR is most often a shift register whose input bit is driven by the exclusive-or (XOR) of some bits of the overall shift register value. The generator polynom is defined via the {\b tap sequence}.\line\line The initial value of the LFSR is called the {\b seed}, and because the operation of the register is deterministic, the stream of values produced by the register is completely determined by its current (or previous) state. Likewise, because the register has a finite number of possible states, it must eventually enter a repeating cycle. However, an LFSR with a well-chosen feedback function can produce a sequence of bits which appears random and which has a very long cycle.\line\line http://en.wikipedia.org/wiki/Linear_feedback_shift_register\line http://de.wikipedia.org/wiki/Linear_r%C3%BCckgekoppeltes_Schieberegister\line\line You may also want to take a look at the NLFSR template included in CrypTool 2."/>
  </replacements>
  <replacements lang="en">
    <replacement key="$Tap Sequence$" value="Tap Sequence"/>
    <replacement key="$Linear Feedback Shift Register$" value="Linear Feedback Shift Register"/>
    <replacement key="$Output Stream$" value="Output Stream"/>
	 <replacement key="$memo$" value="A linear feedback shift register (LFSR) is a shift register whose input bit is a linear function of its previous state.\line\line The most commonly used linear function of single bits is XOR. Thus, an LFSR is most often a shift register whose input bit is driven by the exclusive-or (XOR) of some bits of the overall shift register value. The generator polynom is defined via the {\b tap sequence}.\line\line The initial value of the LFSR is called the {\b seed}, and because the operation of the register is deterministic, the stream of values produced by the register is completely determined by its current (or previous) state. Likewise, because the register has a finite number of possible states, it must eventually enter a repeating cycle. However, an LFSR with a well-chosen feedback function can produce a sequence of bits which appears random and which has a very long cycle.\line\line http://en.wikipedia.org/wiki/Linear_feedback_shift_register\line http://de.wikipedia.org/wiki/Linear_r%C3%BCckgekoppeltes_Schieberegister\line\line You may also want to take a look at the NLFSR template included in CrypTool 2."/>
  </replacements>

</sample>
