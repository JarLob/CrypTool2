<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">Scytale Brute-force Analysis</title>
  <summary lang="en">Cryptanalysis of the <i>Scytale</i> using brute-force</summary>
  <description lang="en">This template shows the cryptanalysis of the <i>Scytale</i> using brute-force.</description>
  <keywords>Sparta, Greek, Wood, Transposition, diameter, rod, Skytale, Attack, Analysis</keywords>

  <title lang="de">Skytale Brute-Force-Analyse</title>
  <summary lang="de">Kryptoanalyse der <i>Skytale</i> mit Brute-Force</summary>
  <description lang="de">Diese Vorlage zeigt die Kryptoanalyse der <i>Skytale</i> mit Brute-Force.</description>
  <keywords lang="de">Griechenland, Holz, Stab, Durchmesser, Skytale, Angriff</keywords>

  <icon file="Scytale_ExhaustiveKeySearch.png" />
  <relevantPlugins>
    <plugin name="Comparators" />
    <plugin name="Contains" />
    <plugin name="CryptoolDictionary" />
    <plugin name="Gate" />
    <plugin name="IncDec" />
    <plugin name="Scytale" />
  </relevantPlugins>

  <replacements lang="de">
    <replacement key="$Plaintext$" value="Klartext"/>
    <replacement key="$Ciphertext$" value="Geheimtext"/>
    <replacement key="$All possible plaintexts$" value="Alle möglichen Klartexte"/>
    <replacement key="$Decrypted Ciphertext$" value="Entschlüsselter Geheimtext"/>
    <replacement key="$Scytale$" value="Skytale"/>
    <replacement key="$Dictionary$" value="Wörterbuch"/>
    <replacement key="$Converter$" value="Konvertierer"/>
    <replacement key="$Contains$" value="Enthält"/>
    <replacement key="$Gate$" value="Gatter"/>
    <replacement key="$KeyGate$" value="Schlüssel-Gatter"/>
    <replacement key="$PlaintextGate$" value="Klartext-Gatter"/>
    <replacement key="$Max sticksize$" value=" Max. Stabgröße"/>
    <replacement key="$Found sticksize$" value="gefundene Stabgröße"/>
	 <replacement key="$memo$" value="\fs18{\fs21\b &quot;Skytale Ciphertext-Only-Angriff&quot;}\line Diese Vorlage führt einen Brute-Force Ciphertext-Only-Angriff auf die Skytale-Chiffre durch. Das Grundprinzip hierbei ist, dass für alle Stabgrößen von 1 bis zu einem vorgegebenen Wert (Max. Stabgröße) eine Entschlüsselung durchgeführt wird und die entschlüsselten Texte in der Komponente &quot;Alle möglichen Klartexte&quot; gesammelt werden. Ausserdem wird getestet, ob eine Mindestanzahl von Wörtern des entschlüsselten Textes in einem Wörterbuch vorkommen (mit der &quot;Enthält&quot;-Komponente). Werden Wörter gefunden, so kann man mit hoher Wahrscheinlichkeit davon ausgehen, dass der korrekte Klartext gefunden wurde, und der Text wird zusätzlich an die Komponente &quot;Entschlüsselter Geheimtext&quot; geschickt.\line {\fs20\b\ul Funktionsweise:}\line Der verschlüsselte Text wird an die Skytale-Komponente geschickt. Die Stabgröße für die Skytale wird von 1 bis zum Wert, der in der Komponente &quot;Max. Stabgröße&quot; angegeben ist, in einer Schleife inkrementiert. Die Schleife wird mit einer Inkrementier-Komponente (i++) und einem Gatter realisiert. Solange das Gatter den Wert WAHR vom Vergleicher (i &lt; Max. Stabgröße) erhält, wird die Schleife durchlaufen. Für jede Stabgröße der Skytale wird damit eine Entschlüsselung durchgeführt und die Klartexte in der Komponente &quot;Alle möglichen Klartexte&quot; gesammelt. Die &quot;Enthält&quot;-Komponente testet für jeden Klartext, ob eine gewisse Anzahl seiner Worte in einem Wörterbuch stehen. Ist dies der Fall, so schickt die &quot;Enthält&quot;-Komponente den Wert WAHR an das Klartext-Gatter und damit wird der aktuell entschlüsselte Klartext an die Komponente &quot;Entschlüsselter Geheimtext&quot; durchgelassen."/>
  </replacements>
  <replacements lang="en">
    <replacement key="$Plaintext$" value="Plaintext"/>
    <replacement key="$Ciphertext$" value="Ciphertext"/>
    <replacement key="$All possible plaintexts$" value="All possible plaintexts"/>
    <replacement key="$Decrypted Ciphertext$" value="Decrypted Ciphertext"/>
    <replacement key="$Scytale$" value="Scytale"/>
    <replacement key="$Dictionary$" value="Dictionary"/>
    <replacement key="$Converter$" value="Converter"/>
    <replacement key="$Contains$" value="Contains"/>
    <replacement key="$Gate$" value="Gate"/>
    <replacement key="$KeyGate$" value="KeyGate"/>
    <replacement key="$PlaintextGate$" value="PlaintextGate"/>
    <replacement key="$Max sticksize$" value=" Max sticksize"/>
    <replacement key="$Found sticksize$" value="found sticksize"/>
	 <replacement key="$memo$" value="\fs18{\fs21\b &quot;Scytale ciphertext-only attack&quot;}\line This sample performs a brute-force ciphertext-only attack on the Scytale cipher. The basic principle is that for each sticksize from one to a predefined value (max sticksize) a trial decryption is done, and all the decryptions are collected in the &quot;All possible plaintexts&quot; textoutput component. Additionally, it checks if a certain amount of words (see &quot;Contains&quot;) from the decrypted text are found in a dictionary. If the words are found it can be assumed with a high probability, that this is the correct decryption and the decrypted text is additionally forwarded to the &quot;Decrypted Ciphertext&quot; component.\line {\fs20\b\ul How it works:}\line The encrypted text is forwarded to the Scytale component. The sticksize for the Scytale is incremented from 1 to the value given in &quot;Max sticksize&quot; in a loop. The loop is realized with the incrementer (i++) and the Gate. As long as the Gate is provided with a TRUE-value from the comparator (i &lt; Max sticksize) component, the loop is running. For each sitcksize the Scytale is therefore performing a trial decryption which in turn are collected in the textoutput &quot;All possible plaintexts&quot;. Additionally, the &quot;Contains&quot; component checks for each trial decryption if there are a number of words from the trial decryption found in a dictionary. If this is the case, the Contains component assigns TRUE to the PlaintextGate and therefore the current decryption is assigned to the &quot;Decrypted Ciphertext&quot; component."/>
  </replacements>

</sample>
