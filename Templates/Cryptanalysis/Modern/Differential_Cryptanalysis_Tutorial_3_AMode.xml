<?xml version="1.0" encoding="utf-8"?>
<sample>
  <title lang="en">Differential Cryptanalysis Tutorial 3 (Automatic Mode)</title>
  <title lang="zh">差分密码分析教程3（自动模式）</title>
  <title lang="de">Differenzielle Kryptoanalyse Tutorial 3 (automatischer Modus)</title>
  <summary lang="en">Differential cryptanalysis (dca) tutorial for different ciphers (automatic mode activated)</summary>
  <summary lang="zh">适用于不同密码的差分密码分析（dca）教程（已激活自动模式）</summary>
  <summary lang="de">Tutorial zur differenziellen Kryptoanalyse (DKA) für verschiedene Chiffren (automatischer Modus aktiviert)</summary>
  <description lang="en">In this template, differential cryptanalysis is demonstrated as a tutorial. Different ciphers are available. The tutorial starts with a small toy cipher and presents the core idea of the method. Building on this, the attack is further refined and expanded so that larger and larger ciphers can be analyzed as the process progresses. In this template the automatic mode is activated.</description>
  <description lang="zh">在此模板中，差分密码分析作为教程进行了演示。可以使用不同的密码。本教程从一个小的玩具密码开始，介绍了该方法的核心思想。在此基础上，进一步完善和扩展了攻击，以便可以随着过程的进行来分析越来越大的密码。在此模板中，将激活自动模式。</description>
  <description lang="de">In diesem Template wird die differenzielle Kryptoanalyse als Tutorial erläutert. Es sind verschiedene Chiffren verfügbar. Das Tutorial beginnt bei einer kleinen Toy-Chiffre und präsentiert dabei die Kernidee des Verfahrens. Darauf aufbauend wird der Angriff weiter verfeinert und ausgebaut, sodass im weiteren Verlauf immer größere Chiffren analysiert werden können. In diesem Template ist der automatische Modus aktiviert.</description>
  <keywords lang="en">differential cryptanalysis, differential cryptanalysis tutorial 3, cryptanalysis, symmetric blockciphers, symmetric algorithms, differential, DCA, DCA tutorial 3</keywords>
  <keywords lang="zh">差分密码分析，差分密码分析教程3，密码分析，对称分组密码，对称算法，差分，DCA，DCA教程3</keywords>
  <keywords lang="de">Differenzielle Kryptoanalyse, Differenzielle Kryptoanalyse Tutorial 3, Kryptoanalyse, symmetrische Blockchiffren, symmetrische Algorithmen, DKA, DCA, Differenzielle, DKA Tutorial 3</keywords>
  <icon file="Differential_Cryptanalysis.png" />
  <relevantPlugins>
    <plugin name="DCAKeyRecovery" />
    <plugin name="DCAOracle" />
    <plugin name="DCAPathFinder" />
    <plugin name="DCAPathVisualiser" />
    <plugin name="DCAToyCiphers" />
  </relevantPlugins>
  <replacements lang="de">
    <replacement key="$UserMessageInput$" value="Eingabe des Klartextes" />
    <replacement key="$UserKeyInput$" value="Eingabe des Schlüssels" />
    <replacement key="$ToyCipherComponent$" value="DKA-ToyCipher" />
    <replacement key="$ToyCipherComponentPlaintextOutput$" value="Ausgabe des Klartextes" />
    <replacement key="$DCAKeyRecoveryComponentKeyOutput$" value="Ausgabe des Schlüssels" />
    <replacement key="$Decoder$" value="Zu Binär" />
    <replacement key="$Encoder$" value="Zu Text (1 0)" />
    <replacement key="$DCAOracleDesc$" value="DKA-Orakel und DKA-ToyCipher bilden zusammen eine Einheit zur Generierung der Nachrichten-Paare." />
    <replacement key="$DCADesc$" value="Diese Vorlage ist Teil eines Tutorials zur differenziellen Kryptoanalyse (DKA).\line\line DKA ist ein probabilistisches Verfahren zur Analyse von symmetrischen Blockchiffren. Mit diesem Angriff versucht man iterativ, die Rundenschlüssel wiederherzustellen. Hauptelement der DKA sind Paare von Geheimtext-Blöcken, deren Klartexte sich in einer bestimmten Differenz unterscheiden. Es wird versucht, auf Basis von Wahrscheinlichkeiten, den Fluss der Blöcke durch die Chiffre zu bestimmen und dadurch die Rundenschlüssel zu bestimmen.\line\line Das Tutorial zur differenziellen Kryptoanalyse gliedert sich in 3 Teile, die in ansteigendem Schwierigkeitsgrad jeweils eine andere Chiffre analysieren. In jedem Tutorial wird ein bestimmter Teil des Verfahrens kleinschrittig präsentiert, sodass am Ende von Tutorial 3 eine gute Vorstellung des Angriffs vermittelt wurde. Zu jedem Tutorial gibt es eine Vorlage.  \line\line Näheres zu den Tutorials steht zu Beginn in der Präsentation der Komponente DKA-PfadFinder, die Chiffren der Tutorials sind in der Online-Hilfe der DKA-ToyCipher-Komponente spezifiziert.  \line\line {\b Hinweise zur Funktion der Komponenten} \line\line {\b DKA-PfadFinder:} Diese Komponente analysiert die Chiffren und gibt Ergebnisse an die verbundenen Komponenten weiter.\line {\b DKA-PfadVisualisierer:} Diese Komponente visualisiert die Ergebnisse der Analyse (Differenzial und Charakteristiken) \line {\b DKA-Orakel:} Diese Komponente generiert Paare von Klartext-Blöcken, die sich in einer Differenz unterscheiden \line {\b DKA-ToyCipher:} Diese Komponente verschlüsselt die Klartext-Blöcke zu Geheimtext-Blöcken \line {\b DKA-KeyRecovery:} Diese Komponente versucht, Bits der Rundenschlüssel auf Basis der Analyseergebnisse wiederherzustellen  \line\line {\b Hinweise zur Bedienung der Vorlage} \line\line Der Angriff wird rundenweise durchgeführt, wobei bei der letzten Verschlüsselungsrunde begonnen wird. In der DKA-PfadFinder-Komponente müssen zur Durchführung der Analyse S-Boxen ausgewählt werden, die in einem entsprechenden Angriff analysiert werden. Die Analyseergebnisse können in der DKA-PfadVisualisierer-Komponente visuell und interaktiv betrachtet werden. Der Angriff auf die Schlüsselbits wird in der DKA-KeyRecovery-Komponente durchgeführt.  \line\line Notwendige Eingaben des Benutzers (beispielsweise Starten einer Aktion durch Drücken eines Buttons) werden durch grünes Blinken (des Buttons) in den entsprechenden Komponenten angezeigt." />
    <replacement key="$ToyCipherComponentOutput$" value="Ausgabe des Geheimtextes" />
    <replacement key="$DCAPathFinderComponent$" value="DKA-PfadFinder" />
    <replacement key="$DCAOracleComponent$" value="DKA-Orakel" />
    <replacement key="$DCAKeyRecoveryComponent$" value="DKA-KeyRecovery" />
    <replacement key="$DCAPathVisualiserComponent$" value="DKA-PfadVisualisierer" />
    <replacement key="$InitialBoolForPathFinder$" value="Trigger" />
  </replacements>
  <replacements lang="zh">
    <replacement key="$UserMessageInput$" value="输入纯文字" />
    <replacement key="$UserKeyInput$" value="输入密钥" />
    <replacement key="$ToyCipherComponent$" value="DKA-玩具密码" />
    <replacement key="$ToyCipherComponentPlaintextOutput$" value="纯文本输出" />
    <replacement key="$DCAKeyRecoveryComponentKeyOutput$" value="密钥发行" />
    <replacement key="$Decoder$" value="二进制太" />
    <replacement key="$Encoder$" value="发送短信（1 0）" />
    <replacement key="$DCAOracleDesc$" value="DKA-Oracle和DKA-ToyCipher共同组成一个单元，用于生成消息对。" />
    <replacement key="$DCADesc$" value="该模板是差分密码分析（DKA）教程的一部分\Line \line DKA是用于分析对称分组密码的一种概率方法。通过这种攻击，人们会反复尝试恢复单圈键。 DKA的主要元素是成对的密文块，其明文有所不同。试图根据概率确定通过密码的块的流量，从而确定回合密钥\Line \line差分密码分析教程分为3部分，每个部分以不同的难度分析不同的密码。在每个教程中，该过程的特定部分均以小步呈现，因此在教程3的末尾给出了关于攻击的一个好主意。每个教程都有一个模板。 \line \line有关教程的更多信息，可以在DKA PathFinder组件的演示文稿的开头找到，该教程的密码在DKA ToyCipher组件的联机帮助中指定。 \line \line {\b关于组件功能的注意事项} \line \line {\b DKA路径查找器：}该组件分析密码并将结果转发到连接的组件。\line {\b DKA路径可视化器：}组件可视化分析结果（差异和特征）\行{\b DKA-Oracle：}该组件生成成对的纯文本块，它们之间存在一个差异\line {\b DKA-ToyCipher：}该组件对纯文本块到密文块\行{\b DKA-KeyRecovery：}该组件尝试根据分析结果\line \line {\b恢复回合密钥的位\b使用模板的说明} \line \line攻击是逐回进行的从上一轮加密开始执行。要进行分析，必须在DKA PathFinder组件中选择S盒，然后在相应的攻击中对其进行分析。可以在DKA路径可视化器组件中以可视方式和交互方式查看分析结果。对密钥位的攻击在DKA KeyRecovery组件中进行。 \line \line用户相应的组件中（按钮的绿色闪烁）指示用户必要的输入（例如，通过按按钮开始操作）。" />
    <replacement key="$ToyCipherComponentOutput$" value="密文输出" />
    <replacement key="$DCAPathFinderComponent$" value="DKA路径查找器" />
    <replacement key="$DCAOracleComponent$" value="甲骨文" />
    <replacement key="$DCAKeyRecoveryComponent$" value="DKA密钥恢复" />
    <replacement key="$DCAPathVisualiserComponent$" value="DKA-PfadVisualisierer" />
    <replacement key="$InitialBoolForPathFinder$" value="触发" />
  </replacements>
  <replacements lang="en">
    <replacement key="$UserMessageInput$" value="Input of the plaintext" />
    <replacement key="$UserKeyInput$" value="Input of the key" />
    <replacement key="$ToyCipherComponent$" value="DCA ToyCipher" />
    <replacement key="$ToyCipherComponentPlaintextOutput$" value="Output of the plaintext" />
    <replacement key="$DCAKeyRecoveryComponentKeyOutput$" value="Output of the key" />
    <replacement key="$Decoder$" value="To binary" />
    <replacement key="$Encoder$" value="To text (1 0)" />
    <replacement key="$DCAOracleDesc$" value="DCA Oracle and DCA ToyCipher together form a unit for generating the block pairs." />
    <replacement key="$DCADesc$" value="This template is part of a tutorial on differential cryptanalysis (DCA).\line\line DCA is a probabilistic method for the analysis of symmetric block ciphers. With this attack one tries to iteratively restore the subkeys. Main element of the DCA are pairs of ciphertext blocks, whose plaintexts differ in a certain difference. It is attempted to determine the flow of blocks through the cipher on the basis of probabilities and thus to determine the subbkeys.\line\line The tutorial on differential cryptanalysis is divided into 3 parts, each of which analyzes a different cipher with increasing difficulty. In each tutorial a certain part of the procedure is presented in small steps, so that at the end of tutorial 3 a good idea of the attack was given. There is a template for each tutorial.  \line\line More information about the tutorials can be found in the presentation of the DCA PathFinder component, the tutorial ciphers are specified in the online help of the DCA ToyCipher component.  \line\line {\b Information about the function of the components} \line\line {\b DCA PathFinder:} This component analyzes the ciphers and passes results to the connected components.\line {\b DCA PathVisualizer:} This component visualizes the results of the analysis (differential and characteristics) \line {\b DCA Oracle:} This component generates pairs of plain text blocks that differ in a difference \line {\b DCA ToyCipher:} This component encodes the plaintext blocks into ciphertext blocks \line {\b DCA KeyRecovery:} This component attempts to recover bits of the subkeys based on the analysis results  \line\line {\b Instructions for using the template} \line\line The attack is carried out round by round, starting with the last encryption round. In the DCA PathFinder component, S-boxes must be selected to be analyzed in a corresponding attack. The analysis results can be viewed visually and interactively in the DCA PathVisualizer component. The attack on the key bits is performed in the DCA KeyRecovery component.  \line\line Necessary user inputs (e.g. starting an action by clicking on a button) are indicated by green flashing (of the button) in the corresponding components." />
    <replacement key="$ToyCipherComponentOutput$" value="Output of the ciphertext" />
    <replacement key="$DCAPathFinderComponent$" value="DCA PathFinder" />
    <replacement key="$DCAOracleComponent$" value="DCA Oracle" />
    <replacement key="$DCAKeyRecoveryComponent$" value="DCA KeyRecovery" />
    <replacement key="$DCAPathVisualiserComponent$" value="DCA PathVisualizer" />
    <replacement key="$InitialBoolForPathFinder$" value="Trigger" />
  </replacements>
</sample>