<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">Coin Flipping Protocol</title>
  <summary lang="en">Usage of the <i>Coin flipping protocol</i></summary>
  <description lang="en">This template shows the usage of the <i>Coin flipping protocol</i>.</description>
  <keywords>coin flipping</keywords>

  <title lang="de">Coin-Flipping-Protokoll</title>
  <summary lang="de">Benutzung des <i>Coin-Flipping-Protokolls</i></summary>
  <description lang="de">Diese Vorlage zeigt die Benutzung des <i>Coin-Flipping-Protokolls</i>.</description>
  <keywords lang="de">coin flipping</keywords>

  <icon file="CoinFlip.png" />

  <relevantPlugins>
    <plugin name="BooleanOutput" />
    <plugin name="CoinFlipping" />
    <plugin name="SHA" />
    <plugin name="StreamComparator" />
  </relevantPlugins>

  <replacements lang="de">
    <replacement key="$Flip Coin$" value="Werfe Münze"/>
    <replacement key="$Alice's Coin$" value="Alices Münze"/>
    <replacement key="$Secret Key$" value="Geheimer Schlüssel"/>
    <replacement key="$Concat$" value="Konkateniere"/>
    <replacement key="$Coin Flipping$" value="Münzwurf"/>
    <replacement key="$Bob wins?$" value="Bob gewinnt?"/>
    <replacement key="$Bob's Guess$" value="Bobs Vermutung"/>
    <replacement key="$Comparator$" value="Vergleich"/>
    <replacement key="$Alice honest?$" value="Alice ehrlich?"/>
	 <replacement key="$step1$" value="{\b Step 1}\line Alic wirft eine Münze."/>
	 <replacement key="$step2$" value="{\b Step 2}\line Alice wählt einen geheimen Schlüssel und sendet das verschlüsselte Resultat ihres Münzwurfes an Bob."/>
	 <replacement key="$step3$" value="{\b Step 3}\line Bob rät das Ergebnis von Alices Münzwurf und schickt seine Vermutung an Alice."/>
	 <replacement key="$step4$" value="{\b Step 4}\line Abhängig von ihrer Ehrlichkeit verrät Alice Bob ihre geworfene Münze oder sie lügt. Dann bestimmt sie den Gewinner und teilt Bob ihren geheimen Schlüssel mit."/>
	 <replacement key="$step5$" value="{\b Step 5}\line Bob empfängt den geheimen Schlüssel und verschlüsselt damit den Münzwert, den Alice ihm mitgeteilt hat. Er vergleicht den Wert mit dem von Alice verschlüsselten Wert. Sind sie unterschiedlich, so weiss Bob, dass Alice gelogen hat."/>
	 <replacement key="$memo$" value="{\b Coin Flipping Protocol}\line\line Alice and Bob want to settle an argument by flipping a coin. Alice flips a coin, and if Bob can correctly guess the outcome, he wins. Otherwise, Alice wins. Unfortunately, they are not in the same room and can only communicate over the telephone. When Bob tells Alice his guess, she could simply lie and say that her coin showed the other side, making her the winner. How can a fair protocol be implemented, that prevents Alice from cheating?\line\line The {\b Coin Flipping Protocol} commits Alice to her coin flip and allows Bob to detect, whether Alice was honest:\line\line {\b Step 1:} Alice flips a coin.\line\line {\b Step 2:} Alice chooses a secret key and appends the result of her coin flip to it. She then applies a cryptographic one-way function (SHA) to the concatenated string and sends the resulting hash code to Bob. She has now {\b commited} to her coin flip result.\line\line {\b Step 3:} Bob sends his guess to Alice.\line\line {\b Step 4:} Alice receives Bob guess and tells him her secret key. If Bob's guess is wrong, Alice declares herself the winner. If Bob's guess is correct, Alice can either be honest and declare Bob the winner, or she can cheat and again declare herself the winner.\line\line {\b Step 5:} Bob learns Alice's (alleged) coin flip result and her secret key. He applies the same one-way function to Alice's announced coin flip result and compares it to the hash code Alice sent him in step 2. If they are equal, Bob knows that Alice was honest. If they differ, he knows that Alice has cheated by altering the coin flip result to which she has commited herself."/>
  </replacements>
  <replacements lang="en">
    <replacement key="$Flip Coin$" value="Flip Coin"/>
    <replacement key="$Alice's Coin$" value="Alice's Coin"/>
    <replacement key="$Secret Key$" value="Secret Key"/>
    <replacement key="$Concat$" value="Concat"/>
    <replacement key="$Coin Flipping$" value="Coin Flipping"/>
    <replacement key="$Bob wins?$" value="Bob wins?"/>
    <replacement key="$Bob's Guess$" value="Bob's Guess"/>
    <replacement key="$Comparator$" value="Comparator"/>
    <replacement key="$Alice honest?$" value="Alice honest?"/>
	 <replacement key="$step1$" value="{\b Step 1}\line Alice flips a coin."/>
	 <replacement key="$step2$" value="{\b Step 2}\line Alice chooses a secret key and sends the encrypted result of the coin flip to Bob."/>
	 <replacement key="$step3$" value="{\b Step 3}\line Bob guesses the result of Alice's coin flip and sends his guess to Alice."/>
	 <replacement key="$step4$" value="{\b Step 4}\line Depending on her honesty, Alice tells Bob her real coin value or she lies. She declares the winner. She also tells Bob her secret key."/>
	 <replacement key="$step5$" value="{\b Step 5}\line Bob receives the secret key and encrypts Alice's coin value. He compares the result with Alice's encrypted value. If they differ, Bob knows that Alice has cheated."/>
	 <replacement key="$memo$" value="{\b Coin Flipping Protocol}\line\line Alice and Bob want to settle an argument by flipping a coin. Alice flips a coin, and if Bob can correctly guess the outcome, he wins. Otherwise, Alice wins. Unfortunately, they are not in the same room and can only communicate over the telephone. When Bob tells Alice his guess, she could simply lie and say that her coin showed the other side, making her the winner. How can a fair protocol be implemented, that prevents Alice from cheating?\line\line The {\b Coin Flipping Protocol} commits Alice to her coin flip and allows Bob to detect, whether Alice was honest:\line\line {\b Step 1:} Alice flips a coin.\line\line {\b Step 2:} Alice chooses a secret key and appends the result of her coin flip to it. She then applies a cryptographic one-way function (SHA) to the concatenated string and sends the resulting hash code to Bob. She has now {\b commited} to her coin flip result.\line\line {\b Step 3:} Bob sends his guess to Alice.\line\line {\b Step 4:} Alice receives Bob guess and tells him her secret key. If Bob's guess is wrong, Alice declares herself the winner. If Bob's guess is correct, Alice can either be honest and declare Bob the winner, or she can cheat and again declare herself the winner.\line\line {\b Step 5:} Bob learns Alice's (alleged) coin flip result and her secret key. He applies the same one-way function to Alice's announced coin flip result and compares it to the hash code Alice sent him in step 2. If they are equal, Bob knows that Alice was honest. If they differ, he knows that Alice has cheated by altering the coin flip result to which she has commited herself."/>
  </replacements>

</sample>
