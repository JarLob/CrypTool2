<?xml version="1.0" encoding="utf-8"?>
<sample>

  <title lang="en">Oblivious Transfer Protocol (1 out of n)</title>
  <summary lang="en">Usage of the <i>Oblivious transfer protocol (1 out of n)</i></summary>
  <description lang="en">This template shows the <i>Oblivious transfer protocol (1 out of n)</i>.</description>
  <keywords>oblivious transfer</keywords>

  <title lang="de">Oblivious Transfer-Protokoll (1 aus n)</title>
  <summary lang="de">Benutzung des <i>Oblivious Transfer-Protokoll (1 aus n)</i></summary>
  <description lang="de">Diese Vorlage zeigt das <i>Oblivious Transfer-Protokoll (1 aus n)</i>.</description>
  <keywords lang="de">oblivious transfer</keywords>

  <icon file="ObliviousTransfer.png" />

  <relevantPlugins>
    <plugin name="ObliviousTransfer1" />
    <plugin name="ObliviousTransfer2" />
    <plugin name="RSAKeyGenerator" />
    <plugin name="RandomMessageGenerator" />
  </relevantPlugins>

  <replacements lang="de">
    <replacement key="$RSA Key$" value="RSA-Schlüssel"/>
    <replacement key="$Newline$" value="Zeilenumbruch"/>
    <replacement key="$Split$" value="Trenne"/>
    <replacement key="$Database$" value="Datenbank"/>
    <replacement key="$Requested entry$" value="Angefragter Eintrag"/>
	 <replacement key="$step1$" value="{\b Schritt 1}\line Alice erzeugt eine Liste von Zufallszahlen (eine Zufallszahl pro Datenbankeintrag)."/>
    <replacement key="$step2$" value="{\b Schritt 2}\line Bob generiert zufälliges k und v=x[i]+enc(k)."/>
    <replacement key="$step3$" value="{\b Schritt 3}\line Alice sendet verschlüsselte Datenbank-Einträge m[j]+dec(v-x[j])."/>
    <replacement key="$step4$" value="{\b Schritt 4}\line Bob entschlüsselt den angefragten Datenbank-Eintrag."/>
	 <replacement key="$memo1$" value="Alices geheimer und privater Schlüssel"/>
	 <replacement key="$memo2$" value="Alices Datenbank (eine Zahl pro Zeile)"/>
	 <replacement key="$memo3$" value="Index der angefragten Nachricht"/>
	 <replacement key="$desc$" value="{\b Oblivious Transfer-Protokoll}\line\line Alice hat eine Datenbank mit mehreren Einträgen. Bob will einen dieser Einträge abfragen, aber er will nicht, dass Alice weiss, welchen Eintrag er abgefragt hat. Alice ist bereit, Bob den angefragten Eintrag zu schicken, aber sie will nicht, dass Bob mehr als einen Eintrag pro Abfrage erhält.\line\line Das {\b Oblivious Transfer-Protokoll} erfüllt diese Bedingungen. Dazu muss Alice die Schlüssel für eine RSA-Verschlüsselung zur Verfügung stellen. Alice und Bob folgen diesen Schritten:\line\line {\b Schritt 1:} Alice erzeugt eine Liste x von Zufallszahlen. Die Liste muss dieselbe Anzahl von Zahlen enthalten wie es Einträge in der Datenbank gibt, und die Zahlen müssen kleiner als der Modulus N des RSA-Schlüssels sein. Alice sendet x an Bob.\line\line {\b Schritt 2:} Bob wählt den Index i, der die Nummer des Eintrages in Alices Datenbank ist, den Bob abfragen will. Er erzeugt eine Zufallszahl k, die zur Verschleierung von i vor Alice dient: er berechnet v = x[i] + encode(k) mit Alices öffentlichem Schlüssel und sendet v an Alice.\line\line {\b Schritt 3:} Für jeden Eintrag m[j] in ihrer Datenbank berechnet Alice den Wert m[j] + decode(v-x[j]) mit ihrem privaten Schlüssel und sendet die resultierende Liste an Bob. Für Eintrag Nummer i ergibt dies m[i]+k, aber da Alice k nicht kennt, kann sie nicht feststellen, um welchen Eintrag es sich handelt.\line\line {\b Schritt 4:} Bob empfängt Alices Liste und wählt Eintrag i aus, welcher m[i] + k ist. Er subtrahiert k und erhält m[i], den Eintrag aus Alices Datenbank, den er abfragen wollte. Ohne Alices privaten Schlüssel kann Bob die anderen Werte aus Alices Liste nicht rekonstruieren."/>
  </replacements>
  <replacements lang="en">
    <replacement key="$RSA Key$" value="RSA Key"/>
    <replacement key="$Newline$" value="Newline"/>
    <replacement key="$Split$" value="Split"/>
    <replacement key="$Database$" value="Database"/>
    <replacement key="$Requested entry$" value="Requested entry"/>
	 <replacement key="$step1$" value="{\b Step 1}\line Alice creates a list of random numbers (one random number per database entry)."/>
    <replacement key="$step2$" value="{\b Step 2}\line Bob generates random k and v=x[i]+enc(k)."/>
    <replacement key="$step3$" value="{\b Step 3}\line Alice sends encoded database entries m[j]+dec(v-x[j])."/>
    <replacement key="$step4$" value="{\b Step 4}\line Bob decodes the requested database entry."/>
	 <replacement key="$memo1$" value="Alice's secret and private key"/>
	 <replacement key="$memo2$" value="Alice's database (one number per line)"/>
	 <replacement key="$memo3$" value="Index of requested message"/>
	 <replacement key="$desc$" value="{\b Oblivious Transfer Protocol}\line\line Alice has a database of messages. Bob wants to retrieve one of the entries, but doesn't want Alice to know, which entry he requested. Alice is prepared to send the requested entry to Bob, but she doesn't want Bob to get more than this one entry per request.\line\line The {\b Oblivious Transfer Protocol} meets these requirements. It requires Alice to supply the keys for an RSA encryption. Alice and Bob follow these steps:\line\line {\b Step 1:} Alice creates a list x of random numbers. The list must have the same number of entries as the database and the numbers must be smaller than the modulus N of the RSA key. Alice sends x to Bob.\line\line {\b Step 2:} Bob chooses the index i, which is the index of the database entry he wants to request from Alice. He generates a random number k that serves to blind the index i for Alice: he calculates v = x[i] + encode(k) with Alice's public key and sends it to Alice.\line\line {\b Step 3:} For each entry m[j] in her database, Alice calculates the value m[j] + decode(v-x[j]) using her private key and sends the resulting list to Bob. For entry number i, this evaluates to m[i]+k, but as Alice doesn't know k, she can't tell which entry that is.\line\line {\b Step 4:} Bob receives Alice's list and selects entry i, which is m[i] + k. He subtracts k and is left with m[i], the entry of Alice's database that he requested. Without the private key, Bob can't reconstruct any other values of Alice's list."/>
  </replacements>

</sample>
