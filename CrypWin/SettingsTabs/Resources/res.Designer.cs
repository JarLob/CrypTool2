//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.CrypWin.SettingsTabs.Resources {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class res {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal res() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.CrypWin.SettingsTabs.Resources.res", typeof(res).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download automatically ähnelt.
        /// </summary>
        public static string autoDownloadContent {
            get {
                return ResourceManager.GetString("autoDownloadContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to download updates automatically (if available) ähnelt.
        /// </summary>
        public static string autoDownloadToolTip {
            get {
                return ResourceManager.GetString("autoDownloadToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Install automatically ähnelt.
        /// </summary>
        public static string autoInstallContent {
            get {
                return ResourceManager.GetString("autoInstallContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to install updates automatically ähnelt.
        /// </summary>
        public static string autoInstallToolTip {
            get {
                return ResourceManager.GetString("autoInstallToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto download/install options ähnelt.
        /// </summary>
        public static string autoLabelContent {
            get {
                return ResourceManager.GetString("autoLabelContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hide in background when CT2 is closing and projects are still running ähnelt.
        /// </summary>
        public static string BackgroundingContent {
            get {
                return ResourceManager.GetString("BackgroundingContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Backgrounding options ähnelt.
        /// </summary>
        public static string BackgroundingLabelContent {
            get {
                return ResourceManager.GetString("BackgroundingLabelContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to background CT2 when clicking close if there are running tasks ähnelt.
        /// </summary>
        public static string BackgroundingToolTip {
            get {
                return ResourceManager.GetString("BackgroundingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the duration of the balloon visibility in seconds ähnelt.
        /// </summary>
        public static string BalloonDuration_Tooltip {
            get {
                return ResourceManager.GetString("BalloonDuration_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is a balloon ähnelt.
        /// </summary>
        public static string balloonTooltip {
            get {
                return ResourceManager.GetString("balloonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update-check preferences (changes are firstly effective after a restart of CT2) ähnelt.
        /// </summary>
        public static string checkLabelContent {
            get {
                return ResourceManager.GetString("checkLabelContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check periodically ähnelt.
        /// </summary>
        public static string checkPeriodicallyContent {
            get {
                return ResourceManager.GetString("checkPeriodicallyContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for updates every  ähnelt.
        /// </summary>
        public static string checkPeriodicallyText1Content {
            get {
                return ResourceManager.GetString("checkPeriodicallyText1Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die minutes ähnelt.
        /// </summary>
        public static string checkPeriodicallyText2Content {
            get {
                return ResourceManager.GetString("checkPeriodicallyText2Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to check for updates periodically ähnelt.
        /// </summary>
        public static string checkPeriodicallyToolTip {
            get {
                return ResourceManager.GetString("checkPeriodicallyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter a valid integer ähnelt.
        /// </summary>
        public static string checkPeriodicallyWarningContent {
            get {
                return ResourceManager.GetString("checkPeriodicallyWarningContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check on startup ähnelt.
        /// </summary>
        public static string checkStartupContent {
            get {
                return ResourceManager.GetString("checkStartupContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to check for updates on startup ähnelt.
        /// </summary>
        public static string checkStartupToolTip {
            get {
                return ResourceManager.GetString("checkStartupToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy all lines ähnelt.
        /// </summary>
        public static string Copy_all {
            get {
                return ResourceManager.GetString("Copy_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy line ähnelt.
        /// </summary>
        public static string Copy_line {
            get {
                return ResourceManager.GetString("Copy_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set your preferred language for CT2 here ähnelt.
        /// </summary>
        public static string cultureBox_tooltip {
            get {
                return ResourceManager.GetString("cultureBox_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deselect all ähnelt.
        /// </summary>
        public static string Deselect_all {
            get {
                return ResourceManager.GetString("Deselect_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New editor opening behaviour ähnelt.
        /// </summary>
        public static string EditorOpeningContent {
            get {
                return ResourceManager.GetString("EditorOpeningContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General settings ähnelt.
        /// </summary>
        public static string GeneralSettings {
            get {
                return ResourceManager.GetString("GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assembly ähnelt.
        /// </summary>
        public static string HeaderAssembly {
            get {
                return ResourceManager.GetString("HeaderAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string HeaderDescription {
            get {
                return ResourceManager.GetString("HeaderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disabled ähnelt.
        /// </summary>
        public static string HeaderDisabled {
            get {
                return ResourceManager.GetString("HeaderDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component name ähnelt.
        /// </summary>
        public static string HeaderPluginName {
            get {
                return ResourceManager.GetString("HeaderPluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invert selection ähnelt.
        /// </summary>
        public static string Invert_selection {
            get {
                return ResourceManager.GetString("Invert_selection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General settings ähnelt.
        /// </summary>
        public static string MainSettings {
            get {
                return ResourceManager.GetString("MainSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message settings ähnelt.
        /// </summary>
        public static string MessageSettings {
            get {
                return ResourceManager.GetString("MessageSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The checking time interval (in minutes) ähnelt.
        /// </summary>
        public static string minutesInputToolTip {
            get {
                return ResourceManager.GetString("minutesInputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notification icon ähnelt.
        /// </summary>
        public static string NotificationIconSettings {
            get {
                return ResourceManager.GetString("NotificationIconSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notification icon settings ähnelt.
        /// </summary>
        public static string NotificationIconSettingsTitle {
            get {
                return ResourceManager.GetString("NotificationIconSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please restart CT2 for the change to take effect ähnelt.
        /// </summary>
        public static string Please_restart_CrypTool {
            get {
                return ResourceManager.GetString("Please_restart_CrypTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings of single components ähnelt.
        /// </summary>
        public static string PluginSettings {
            get {
                return ResourceManager.GetString("PluginSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Power saving options ähnelt.
        /// </summary>
        public static string PowerModeLabelContent {
            get {
                return ResourceManager.GetString("PowerModeLabelContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preferred language ähnelt.
        /// </summary>
        public static string Preferred_language {
            get {
                return ResourceManager.GetString("Preferred_language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Length of the list of recently opened cwm files: ähnelt.
        /// </summary>
        public static string RecentFileListLength {
            get {
                return ResourceManager.GetString("RecentFileListLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reopen last opened projects on startup ähnelt.
        /// </summary>
        public static string Reopen_last_opened_file {
            get {
                return ResourceManager.GetString("Reopen_last_opened_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to reopen the last opened file on CT2 startup ähnelt.
        /// </summary>
        public static string Reopen_last_opened_file_tooltip {
            get {
                return ResourceManager.GetString("Reopen_last_opened_file_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart now ähnelt.
        /// </summary>
        public static string Restart_Button_Content {
            get {
                return ResourceManager.GetString("Restart_Button_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop workspaces if power mode is offline ähnelt.
        /// </summary>
        public static string SavePowerContent {
            get {
                return ResourceManager.GetString("SavePowerContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to save power ähnelt.
        /// </summary>
        public static string SavePowerToolTip {
            get {
                return ResourceManager.GetString("SavePowerToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die seconds ähnelt.
        /// </summary>
        public static string seconds_ {
            get {
                return ResourceManager.GetString("seconds_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select all ähnelt.
        /// </summary>
        public static string Select_all {
            get {
                return ResourceManager.GetString("Select_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select preferred editor: ähnelt.
        /// </summary>
        public static string SelectEditorLabel {
            get {
                return ResourceManager.GetString("SelectEditorLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the editor you want to open when clicking the &quot;New&quot; button here ähnelt.
        /// </summary>
        public static string SelectEditorTooltip {
            get {
                return ResourceManager.GetString("SelectEditorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show balloon for  ähnelt.
        /// </summary>
        public static string Show_balloon_for_ {
            get {
                return ResourceManager.GetString("Show_balloon_for_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show balloon log messages in balloon ähnelt.
        /// </summary>
        public static string Show_balloon_log_messages_in_balloon {
            get {
                return ResourceManager.GetString("Show_balloon_log_messages_in_balloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to show the balloon log messages in the tray icon balloon! ähnelt.
        /// </summary>
        public static string Show_balloon_log_messages_in_balloon_tooltip {
            get {
                return ResourceManager.GetString("Show_balloon_log_messages_in_balloon_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show debug log messages in balloon ähnelt.
        /// </summary>
        public static string Show_debug_log_messages_in_balloon {
            get {
                return ResourceManager.GetString("Show_debug_log_messages_in_balloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to show the debug log messages in the tray icon balloon! ähnelt.
        /// </summary>
        public static string Show_debug_log_messages_in_balloon_tooltip {
            get {
                return ResourceManager.GetString("Show_debug_log_messages_in_balloon_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show error log messages in balloon ähnelt.
        /// </summary>
        public static string Show_error_log_messages_in_balloon {
            get {
                return ResourceManager.GetString("Show_error_log_messages_in_balloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to show the error log messages in the tray icon balloon! ähnelt.
        /// </summary>
        public static string Show_error_log_messages_in_balloon_tooltip {
            get {
                return ResourceManager.GetString("Show_error_log_messages_in_balloon_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show info log messages in balloon ähnelt.
        /// </summary>
        public static string Show_info_log_messages_in_balloon {
            get {
                return ResourceManager.GetString("Show_info_log_messages_in_balloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to show the info log messages in the tray icon balloon! ähnelt.
        /// </summary>
        public static string Show_info_log_messages_in_balloon_tooltip {
            get {
                return ResourceManager.GetString("Show_info_log_messages_in_balloon_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show warning log messages in balloon ähnelt.
        /// </summary>
        public static string Show_warning_log_messages_in_balloon {
            get {
                return ResourceManager.GetString("Show_warning_log_messages_in_balloon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to show the warning log messages in the tray icon balloon ähnelt.
        /// </summary>
        public static string Show_warning_log_messages_in_balloon_tooltip {
            get {
                return ResourceManager.GetString("Show_warning_log_messages_in_balloon_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start CT2 as singleton application (Global setting: a change of the setting here has no effect. 
        ///It has to be manually edited in CrypWin.exe.config file in the CT2 installation directory). ähnelt.
        /// </summary>
        public static string SingletonApplication {
            get {
                return ResourceManager.GetString("SingletonApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die When checked only one CT2 application instance is started. Disable in CrypWin.exe.config file in the CT2 installation directory for allowing CT2 being started multiple times ähnelt.
        /// </summary>
        public static string SingletonApplicationTooltip {
            get {
                return ResourceManager.GetString("SingletonApplicationTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Startup behaviour ähnelt.
        /// </summary>
        public static string Startup_Behaviour {
            get {
                return ResourceManager.GetString("Startup_Behaviour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updater ähnelt.
        /// </summary>
        public static string UpdaterSettings {
            get {
                return ResourceManager.GetString("UpdaterSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Updater settings ähnelt.
        /// </summary>
        public static string UpdaterSettingsTitle {
            get {
                return ResourceManager.GetString("UpdaterSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use last editor ähnelt.
        /// </summary>
        public static string UseLastEditorContent {
            get {
                return ResourceManager.GetString("UseLastEditorContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to always open the last used editor when clicking the &quot;New&quot; button ähnelt.
        /// </summary>
        public static string UseLastEditorTooltip {
            get {
                return ResourceManager.GetString("UseLastEditorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use last path in file dialog ähnelt.
        /// </summary>
        public static string UseLastPathContent {
            get {
                return ResourceManager.GetString("UseLastPathContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to ensure that the file dialog always shows the last path ähnelt.
        /// </summary>
        public static string UseLastPathTooltip {
            get {
                return ResourceManager.GetString("UseLastPathTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Write log file ähnelt.
        /// </summary>
        public static string WriteLogFile {
            get {
                return ResourceManager.GetString("WriteLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If this setting is enabled, CT2 automatically writes all of its log to a logfile ähnelt.
        /// </summary>
        public static string WriteLogFileTooltip {
            get {
                return ResourceManager.GetString("WriteLogFileTooltip", resourceCulture);
            }
        }
    }
}
