<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:CrypWin.Helper"
    xmlns:dc="clr-namespace:DevComponents.WpfRibbon;assembly=DevComponents.WpfRibbon"
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">

  <local:ListViewItemStyleSelector x:Key="ListViewItemStyleSelector" />
  <local:StringToImageSourceConverter x:Key="stringToImageSource" />

  <DataTemplate x:Key="ImageTemplate">
    <Image Source="{Binding Path=LogLevel, Converter={StaticResource stringToImageSource}}" 
           ToolTip="{Binding Path=LogLevel}"
           Margin="1" Width="16" Height="16" />
  </DataTemplate>

  <DataTemplate x:Key="MessageTemplate">
    <TextBox BorderThickness="0" IsReadOnly="True" Margin="0" 
             Text="{Binding Path=Message}"
             Background="Transparent" TextWrapping="Wrap" />
  </DataTemplate>

  <DataTemplate x:Key="NrTemplate">
    <TextBox BorderThickness="0" IsReadOnly="True" Margin="0" 
             TextAlignment="Right" Width="30"
             Text="{Binding Path=Nr}"
             Background="Transparent"  />
  </DataTemplate>

  <!--<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}" Padding="{TemplateBinding Padding}">-->
  <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
    <!--<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    <Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
    <Setter Property="BorderThickness" Value="2"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Microsoft_Windows_Themes:ClassicBorderDecorator SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderStyle="Sunken" BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=GalleryMenuScrollViewer, TypeInTargetAssembly=dc:Gallery}}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Microsoft_Windows_Themes:ClassicBorderDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>-->

    <Style.Resources>
      <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray" />
      <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="InactiveBorder" />-->
    </Style.Resources>
  </Style>

  <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItemStyleBase" x:Shared="False">
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="BorderBrush" Value="LightGray" />
    <!-- extra multi-col line with wrapping text box for each row displayed on selection -->
    <!--<Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}">
            <StackPanel>
              <GridViewRowPresenter />
              <TextBlock Text="{Binding XPath=Details}" Visibility="Collapsed" Name="tb" TextWrapping="Wrap" Margin="2,0,0,4"/>
							</StackPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="true">
              <Trigger.Setters>
                <Setter Property="Visibility" Value="Visible" TargetName="tb"/>
              </Trigger.Setters>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>-->
    <Style.Triggers>
      <Trigger Property="IsSelected" Value="true">
        <Trigger.Setters>
          <Setter Property="Background" Value="Gray" />
          <Setter Property="Foreground" Value="Black" />
        </Trigger.Setters>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type ListViewItem}" x:Shared="False" BasedOn="{StaticResource ListViewItemStyleBase}" x:Key="ListViewItemStyle1">
    <Setter Property="Background" Value="White" />
  </Style>

  <Style TargetType="{x:Type ListViewItem}" x:Shared="False" BasedOn="{StaticResource ListViewItemStyleBase}" x:Key="ListViewItemStyle2">
    <Setter Property="Background" Value="AliceBlue" />
  </Style>

  <!-- Style for column header -->
  <LinearGradientBrush x:Key="GridViewColumnHeaderBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFFFFFFF" Offset="0.4091"/>
    <GradientStop Color="DarkGray" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF2F2F2" Offset="0"/>
    <GradientStop Color="#FFD5D5D5" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9"/>
    <Setter Property="Width" Value="18"/>
    <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="Transparent" Padding="{TemplateBinding Padding}">
            <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Center" Width="1"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFBDEDFF" Offset="0"/>
    <GradientStop Color="#FFB7E7FB" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FF8DD6F7" Offset="0"/>
    <GradientStop Color="#FF8AD1F5" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="{StaticResource GridViewColumnHeaderBackground}"/>
    <Setter Property="BorderBrush" Value="{StaticResource GridViewColumnHeaderBorderBackground}"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Padding" Value="2,0,2,0"/>
    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="true">
            <Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Visibility="Collapsed" Fill="#FFE3F7FF" x:Name="UpperHighlight"/>
                <Border Grid.RowSpan="2" Padding="{TemplateBinding Padding}">
                  <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,1" x:Name="HeaderContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                </Border>
              </Grid>
            </Border>
            <Border Margin="1,1,0,0" x:Name="HeaderHoverBorder" BorderThickness="1,0,1,1"/>
            <Border Margin="1,0,0,1" x:Name="HeaderPressBorder" BorderThickness="1,1,1,0"/>
            <Canvas>
              <Thumb IsEnabled="True" x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderHoverBackground}"/>
              <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
              <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
              <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Background" TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderPressBackground}"/>
              <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF95DAF9"/>
              <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="#FF7A9EB1"/>
              <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
              <Setter Property="Fill" TargetName="UpperHighlight" Value="#FFBCE4F9"/>
              <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
              <Setter Property="Margin" TargetName="HeaderContent" Value="1,1,0,0"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
              <Setter Property="MinHeight" Value="20"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Role" Value="Floating">
        <Setter Property="Opacity" Value="0.4082"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas x:Name="PART_FloatingHeaderCanvas">
                <Rectangle Opacity="0.4697" Fill="#FF000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="Role" Value="Padding">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border x:Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,1,0,1"/>
              <ControlTemplate.Triggers>
                <Trigger Property="Height" Value="Auto">
                  <Setter Property="MinHeight" Value="20"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <!-- End Style for column header -->


</ResourceDictionary>