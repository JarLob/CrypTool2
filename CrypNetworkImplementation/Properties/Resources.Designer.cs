//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.239
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.P2PDLL.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.P2PDLL.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect on Startup ähnelt.
        /// </summary>
        internal static string ConnectOnStartup {
            get {
                return ResourceManager.GetString("ConnectOnStartup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to connect to the network on startup ähnelt.
        /// </summary>
        internal static string ConnectOnStartup_Tooltip {
            get {
                return ResourceManager.GetString("ConnectOnStartup_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network ähnelt.
        /// </summary>
        internal static string NetworkSettings {
            get {
                return ResourceManager.GetString("NetworkSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Peer-to-Peer ähnelt.
        /// </summary>
        internal static string P2PSettings {
            get {
                return ResourceManager.GetString("P2PSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Proxyserver settings: ähnelt.
        /// </summary>
        internal static string Proxy_Settings {
            get {
                return ResourceManager.GetString("Proxy_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password: ähnelt.
        /// </summary>
        internal static string ProxyPassword {
            get {
                return ResourceManager.GetString("ProxyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port: ähnelt.
        /// </summary>
        internal static string ProxyPort {
            get {
                return ResourceManager.GetString("ProxyPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server: ähnelt.
        /// </summary>
        internal static string ProxyServer {
            get {
                return ResourceManager.GetString("ProxyServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User: ähnelt.
        /// </summary>
        internal static string ProxyUser {
            get {
                return ResourceManager.GetString("ProxyUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh interval: ähnelt.
        /// </summary>
        internal static string RefreshInterval {
            get {
                return ResourceManager.GetString("RefreshInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use proxyserver ähnelt.
        /// </summary>
        internal static string Use_Proxy {
            get {
                return ResourceManager.GetString("Use_Proxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to use a proxy server for connecting to the network ähnelt.
        /// </summary>
        internal static string Use_Proxy_Tooltip {
            get {
                return ResourceManager.GetString("Use_Proxy_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use systemwide proxyserver ähnelt.
        /// </summary>
        internal static string Use_SystemWideProxy {
            get {
                return ResourceManager.GetString("Use_SystemWideProxy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use timeout ähnelt.
        /// </summary>
        internal static string Use_Timeout {
            get {
                return ResourceManager.GetString("Use_Timeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to use timeout for synchronous P2P operations ähnelt.
        /// </summary>
        internal static string Use_Timeout_Tooltip {
            get {
                return ResourceManager.GetString("Use_Timeout_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check this to use a systemwide proxyserver ähnelt.
        /// </summary>
        internal static string UseSystemWideProxy_Tooltip {
            get {
                return ResourceManager.GetString("UseSystemWideProxy_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workspace path: ähnelt.
        /// </summary>
        internal static string WorkspacePath {
            get {
                return ResourceManager.GetString("WorkspacePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die World name: ähnelt.
        /// </summary>
        internal static string WorldName {
            get {
                return ResourceManager.GetString("WorldName", resourceCulture);
            }
        }
    }
}
