<?xml version="1.0" encoding="utf-8" ?>

<documentation>

  <language culture="en"/>
  <language culture="de-DE"/>

  <introduction lang="en">
    There are two millionaires, Alice and Bob. They want to know who is richer, but they don´t want to disclose to each other how much money they own.
    This problem is solved by Yao´s millionaire protocol. It was proposed by the computer scientist Andrew Yao in 1982.
    <newline/>
    <newline/>
    CrypTool implements the protocol with the three components Yao1, Yao2 and Yao3.
    Yao1 and Yao2 represent actions that are executed by Alice, Yao3 is executed by Bob.
  </introduction>

  <introduction lang="de-DE">
    Die beiden Millionäre Alice und Bob wollen herausfinden, wer von ihnen reicher ist, ohne dem anderen dabei mitteilen zu müssen, wie reich sie genau sind.
    Dieses Problem wird auch "Yaos Millionärsproblem" genannt. Der Informatiker Andrew Yao schlug 1982 ein Protokoll zur Lösung des Problems dar.
    <newline/>
    <newline/>
    Das Protokoll wird in CrypTool durch die drei Komponenten Yao1, Yao2 und Yao3 implementiert.
    Yao1 und Yao2 stellen Aktionen dar, die von Alice ausgeführt werden, Yao3 wird von Bob ausgeführt.
  </introduction>

  <usage lang="en">
    This component implements the last step of the protocol. Its actions are executed by Bob. It outputs the result of the protocol and tells us, who is the richer millionaire.
    <newline/>
    <newline/>
    On the input 'B', the component expects the amount of Bob's money, on the input 'p' the prime number generated by Alice, that must also be sent to the component Yao2, and on the input 'x' the random number that was generated by Bob.
    The list, that was created by the component Yao2, must be entered at the input 'Z'.
    Yao3 then compares the amounts of money of Alice and Bob and returns the result at its output as a boolean value. If Bob is richer, it outputs 'true', otherwise 'false'.
  </usage>

  <usage lang="de-DE">
    Diese Komponente implementiert den letzten Schritt des Protokolls und stellt von Bob ausgeführte Aktionen dar. Es gibt als Resultat des Protokolls aus, welcher der beiden Millionäre reicher ist.
    <newline/>
    <newline/>
    Die Komponente erwartet am Eingang 'B' das Vermögen von Bob, am Eingang 'p' die von Alice generierte Primzahl, die auch an die Komponente Yao2 geschickt werden muss, und am Eingang 'x' die von Bob erzeugte Zufallszahl.
    Außerdem muss am Eingang 'Z' die von der Komponente Yao2 erzeugte Liste eingegeben werden.
    Yao3 führt dann den Vergleich der Vermögen von Alice und Bob durch und gibt das Ergebnis an seinem Ausgang als booleschen Wert aus. Wenn Bob reicher ist, wird 'wahr' ausgegeben, sonst wird 'falsch' ausgegeben.
  </usage>

  <presentation lang="en">
  </presentation>

  <presentation lang="de-DE">
  </presentation>

  <references>
    <linkReference>
      <link url="http://en.wikipedia.org/wiki/Yao's_Millionaires'_Problem" lang="en" />
      <caption lang="en">Yao's Millionaires' Problem (Wikipedia)</caption>
      <link url="http://de.wikipedia.org/wiki/Yaos_Millionärsproblem" lang="de-DE" />
      <caption lang="de-DE">Yaos Millionärsproblem (Wikipedia)</caption>
    </linkReference>
    <linkReference>
      <link url="http://www.proproco.co.uk/million.pdf" lang="en" />
      <caption lang="en">Yao´s Millionaires' problem (PDF)</caption>
      <link url="http://www.proproco.co.uk/million.pdf" lang="de-DE" />
      <caption lang="de-DE">Yaos Millionärsproblem (PDF, englisch)</caption>
    </linkReference>
  </references>

</documentation>