<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="architecture_caption" xml:space="preserve">
    <value>Architecture</value>
  </data>
  <data name="architecture_tooltip" xml:space="preserve">
    <value>Architecture of the P2P network.</value>
  </data>
  <data name="bootstrapper_caption" xml:space="preserve">
    <value>Bootstrapper type</value>
  </data>
  <data name="bootstrapper_tooltip" xml:space="preserve">
    <value>Bootstrappe type</value>
  </data>
  <data name="connectOnStartup_caption" xml:space="preserve">
    <value>Connect on startup</value>
  </data>
  <data name="distributedJobListRefreshInterval_caption" xml:space="preserve">
    <value>Job list refresh interval (seconds)</value>
  </data>
  <data name="distributedJobListRefreshInterval_tooltip" xml:space="preserve">
    <value>Refreshes the the distributed job list in the given interval. A value of 0 will disable the automated process.</value>
  </data>
  <data name="experienced_settings" xml:space="preserve">
    <value>Experienced settings</value>
  </data>
  <data name="expert_settings" xml:space="preserve">
    <value>Expert settings</value>
  </data>
  <data name="linkmanager_caption" xml:space="preserve">
    <value>Link manager type</value>
  </data>
  <data name="linkmanager_tooltip" xml:space="preserve">
    <value>Link manager type</value>
  </data>
  <data name="localPort_caption" xml:space="preserve">
    <value>Local port</value>
  </data>
  <data name="localPort_tooltip" xml:space="preserve">
    <value>Local port used by the framework. If set to 0, the framework will choose a random port.</value>
  </data>
  <data name="log2monitor_caption" xml:space="preserve">
    <value>Syslog</value>
  </data>
  <data name="log2monitor_tooltip" xml:space="preserve">
    <value>Log peer-to-peer related messages to a local syslog daemon running on port 514.</value>
  </data>
  <data name="log_connection_state_caption" xml:space="preserve">
    <value>Log connection state</value>
  </data>
  <data name="log_connection_state_tooltip" xml:space="preserve">
    <value>Logs connection state to the GUI log. For debugging only.</value>
  </data>
  <data name="onnectOnStartup_tooltip" xml:space="preserve">
    <value>Establish a connection to the peer-to-peer network during CrypTool startup.</value>
  </data>
  <data name="serverHost_caption" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="serverHost_tooltip" xml:space="preserve">
    <value>Host of the central p2p server.</value>
  </data>
  <data name="serverPort_caption" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="serverPort_tooltip" xml:space="preserve">
    <value>Post of the central p2p server.</value>
  </data>
  <data name="server_settings" xml:space="preserve">
    <value>Server</value>
  </data>
  <data name="start_caption" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="start_failed" xml:space="preserve">
    <value>Cannot connect to the P2P network. You are already connected or a connection attempt is in progress.</value>
  </data>
  <data name="start_launched" xml:space="preserve">
    <value>Connection to the P2P network will be established in the background.</value>
  </data>
  <data name="start_tooltip" xml:space="preserve">
    <value>Connect to the P2P network.</value>
  </data>
  <data name="stop_caption" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="stop_failed" xml:space="preserve">
    <value>Cannot disconnect from the P2P network. You are not connected or a connection attempt is in progress.</value>
  </data>
  <data name="stop_launched" xml:space="preserve">
    <value>Disconnecting from the P2P network.</value>
  </data>
  <data name="stop_tooltip" xml:space="preserve">
    <value>Disconnect from P2P network.</value>
  </data>
  <data name="transportprotocol_caption" xml:space="preserve">
    <value>Transport protocol</value>
  </data>
  <data name="transportprotocol_tooltip" xml:space="preserve">
    <value>Transport protocol to use.</value>
  </data>
  <data name="useLocalAddressDetection_caption" xml:space="preserve">
    <value>Use local port address detection</value>
  </data>
  <data name="useLocalAddressDetection_tooltip" xml:space="preserve">
    <value>Setting for nodes, where the internal and external adresses match.</value>
  </data>
  <data name="username_caption" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="username_tooltip" xml:space="preserve">
    <value>Uusername for the peer-to-peer system. If this value is changed, CrypTool will ask for a certificate the first time the new name is used. When in doubt, leave the default name "CrypTool2".</value>
  </data>
  <data name="workspacePath_caption" xml:space="preserve">
    <value>Local workspace directory</value>
  </data>
  <data name="workspacePath_tooltip" xml:space="preserve">
    <value>Directory in where workspaces you participate in are saved.</value>
  </data>
  <data name="worldname_caption" xml:space="preserve">
    <value>World name</value>
  </data>
  <data name="worldname_tooltip" xml:space="preserve">
    <value>Name of the world in the peer-to-peer system.</value>
  </data>
</root>