//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.P2PEditor.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Attributes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Attributes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.P2PEditor.Resources.Attributes", typeof(Attributes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        internal static string architecture_caption {
            get {
                return ResourceManager.GetString("architecture_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture of the P2P network..
        /// </summary>
        internal static string architecture_tooltip {
            get {
                return ResourceManager.GetString("architecture_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrapper type.
        /// </summary>
        internal static string bootstrapper_caption {
            get {
                return ResourceManager.GetString("bootstrapper_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bootstrappe type.
        /// </summary>
        internal static string bootstrapper_tooltip {
            get {
                return ResourceManager.GetString("bootstrapper_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect on startup.
        /// </summary>
        internal static string connectOnStartup_caption {
            get {
                return ResourceManager.GetString("connectOnStartup_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Job list refresh interval (seconds).
        /// </summary>
        internal static string distributedJobListRefreshInterval_caption {
            get {
                return ResourceManager.GetString("distributedJobListRefreshInterval_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refreshes the the distributed job list in the given interval. A value of 0 will disable the automated process..
        /// </summary>
        internal static string distributedJobListRefreshInterval_tooltip {
            get {
                return ResourceManager.GetString("distributedJobListRefreshInterval_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experienced settings.
        /// </summary>
        internal static string experienced_settings {
            get {
                return ResourceManager.GetString("experienced_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expert settings.
        /// </summary>
        internal static string expert_settings {
            get {
                return ResourceManager.GetString("expert_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link manager type.
        /// </summary>
        internal static string linkmanager_caption {
            get {
                return ResourceManager.GetString("linkmanager_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link manager type.
        /// </summary>
        internal static string linkmanager_tooltip {
            get {
                return ResourceManager.GetString("linkmanager_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local port.
        /// </summary>
        internal static string localPort_caption {
            get {
                return ResourceManager.GetString("localPort_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local port used by the framework. If set to 0, the framework will choose a random port..
        /// </summary>
        internal static string localPort_tooltip {
            get {
                return ResourceManager.GetString("localPort_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log connection state.
        /// </summary>
        internal static string log_connection_state_caption {
            get {
                return ResourceManager.GetString("log_connection_state_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logs connection state to the GUI log. For debugging only..
        /// </summary>
        internal static string log_connection_state_tooltip {
            get {
                return ResourceManager.GetString("log_connection_state_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Syslog.
        /// </summary>
        internal static string log2monitor_caption {
            get {
                return ResourceManager.GetString("log2monitor_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log peer-to-peer related messages to a local syslog daemon running on port 514..
        /// </summary>
        internal static string log2monitor_tooltip {
            get {
                return ResourceManager.GetString("log2monitor_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network Size.
        /// </summary>
        internal static string networksize_caption {
            get {
                return ResourceManager.GetString("networksize_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current estimated network size (currently works only with FullMesh).
        /// </summary>
        internal static string networksize_tooltip {
            get {
                return ResourceManager.GetString("networksize_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Establish a connection to the peer-to-peer network during CrypTool startup..
        /// </summary>
        internal static string onnectOnStartup_tooltip {
            get {
                return ResourceManager.GetString("onnectOnStartup_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        internal static string password_caption {
            get {
                return ResourceManager.GetString("password_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password of your Peers@Play certificate.
        /// </summary>
        internal static string password_tooltip {
            get {
                return ResourceManager.GetString("password_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Settings.
        /// </summary>
        internal static string proxy_settings {
            get {
                return ResourceManager.GetString("proxy_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Password.
        /// </summary>
        internal static string proxypassword_caption {
            get {
                return ResourceManager.GetString("proxypassword_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Password.
        /// </summary>
        internal static string proxypassword_tooltip {
            get {
                return ResourceManager.GetString("proxypassword_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Port.
        /// </summary>
        internal static string proxyport_caption {
            get {
                return ResourceManager.GetString("proxyport_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Port.
        /// </summary>
        internal static string proxyport_tooltip {
            get {
                return ResourceManager.GetString("proxyport_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Server.
        /// </summary>
        internal static string proxyserver_caption {
            get {
                return ResourceManager.GetString("proxyserver_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Server.
        /// </summary>
        internal static string proxyserver_tooltip {
            get {
                return ResourceManager.GetString("proxyserver_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Proxy.
        /// </summary>
        internal static string proxysettings_caption {
            get {
                return ResourceManager.GetString("proxysettings_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Proxy.
        /// </summary>
        internal static string proxysettings_tooltip {
            get {
                return ResourceManager.GetString("proxysettings_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use System Proxy Settings.
        /// </summary>
        internal static string proxysettingssystem_caption {
            get {
                return ResourceManager.GetString("proxysettingssystem_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use System Proxy Settings.
        /// </summary>
        internal static string proxysettingssystem_tooltip {
            get {
                return ResourceManager.GetString("proxysettingssystem_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy User.
        /// </summary>
        internal static string proxyuser_caption {
            get {
                return ResourceManager.GetString("proxyuser_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy User.
        /// </summary>
        internal static string proxyuser_tooltip {
            get {
                return ResourceManager.GetString("proxyuser_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember Password.
        /// </summary>
        internal static string rememberPassword_caption {
            get {
                return ResourceManager.GetString("rememberPassword_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remember Password.
        /// </summary>
        internal static string rememberPassword_tooltip {
            get {
                return ResourceManager.GetString("rememberPassword_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server.
        /// </summary>
        internal static string server_settings {
            get {
                return ResourceManager.GetString("server_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host.
        /// </summary>
        internal static string serverHost_caption {
            get {
                return ResourceManager.GetString("serverHost_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host of the central p2p server..
        /// </summary>
        internal static string serverHost_tooltip {
            get {
                return ResourceManager.GetString("serverHost_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        internal static string serverPort_caption {
            get {
                return ResourceManager.GetString("serverPort_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post of the central p2p server..
        /// </summary>
        internal static string serverPort_tooltip {
            get {
                return ResourceManager.GetString("serverPort_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect.
        /// </summary>
        internal static string start_caption {
            get {
                return ResourceManager.GetString("start_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot connect to the P2P network. You are already connected or a connection attempt is in progress..
        /// </summary>
        internal static string start_failed {
            get {
                return ResourceManager.GetString("start_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connection to the P2P network will be established in the background..
        /// </summary>
        internal static string start_launched {
            get {
                return ResourceManager.GetString("start_launched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect to the P2P network..
        /// </summary>
        internal static string start_tooltip {
            get {
                return ResourceManager.GetString("start_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect.
        /// </summary>
        internal static string stop_caption {
            get {
                return ResourceManager.GetString("stop_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot disconnect from the P2P network. You are not connected or a connection attempt is in progress..
        /// </summary>
        internal static string stop_failed {
            get {
                return ResourceManager.GetString("stop_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnecting from the P2P network..
        /// </summary>
        internal static string stop_launched {
            get {
                return ResourceManager.GetString("stop_launched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disconnect from P2P network..
        /// </summary>
        internal static string stop_tooltip {
            get {
                return ResourceManager.GetString("stop_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transport protocol.
        /// </summary>
        internal static string transportprotocol_caption {
            get {
                return ResourceManager.GetString("transportprotocol_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transport protocol to use..
        /// </summary>
        internal static string transportprotocol_tooltip {
            get {
                return ResourceManager.GetString("transportprotocol_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use local port address detection.
        /// </summary>
        internal static string useLocalAddressDetection_caption {
            get {
                return ResourceManager.GetString("useLocalAddressDetection_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting for nodes, where the internal and external adresses match..
        /// </summary>
        internal static string useLocalAddressDetection_tooltip {
            get {
                return ResourceManager.GetString("useLocalAddressDetection_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        internal static string username_caption {
            get {
                return ResourceManager.GetString("username_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uusername for the peer-to-peer system. If this value is changed, CrypTool will ask for a certificate the first time the new name is used. When in doubt, leave the default name &quot;CrypTool2&quot;..
        /// </summary>
        internal static string username_tooltip {
            get {
                return ResourceManager.GetString("username_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Local workspace directory.
        /// </summary>
        internal static string workspacePath_caption {
            get {
                return ResourceManager.GetString("workspacePath_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory in where workspaces you participate in are saved..
        /// </summary>
        internal static string workspacePath_tooltip {
            get {
                return ResourceManager.GetString("workspacePath_tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World name.
        /// </summary>
        internal static string worldname_caption {
            get {
                return ResourceManager.GetString("worldname_caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name of the world in the peer-to-peer system..
        /// </summary>
        internal static string worldname_tooltip {
            get {
                return ResourceManager.GetString("worldname_tooltip", resourceCulture);
            }
        }
    }
}
