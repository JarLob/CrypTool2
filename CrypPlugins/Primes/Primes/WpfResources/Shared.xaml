<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type TabItem}">
        <Border Name="Border" BorderThickness="1" CornerRadius="3" TextBlock.Foreground="Black" Padding="3" HorizontalAlignment="Stretch" Background="{StaticResource HorizontalLightBrush}" BorderBrush="Gray">
            <DockPanel>
                <TextBlock Text="{TemplateBinding Header}" Margin="{TemplateBinding Padding}" />
            </DockPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Border Name="Border"
                    BorderThickness="1" CornerRadius="2"
                    TextBlock.Foreground="Black" TextBlock.TextAlignment="Left" Padding="3"
                    HorizontalAlignment="Stretch" VerticalAlignment="Center">
            <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"></ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="LightBlue" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#EFEFEF" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse
                        Name="Ellipse"
                        Fill="{StaticResource NormalBrush}"
                        Stroke="{StaticResource NormalBorderBrush}"
                        StrokeThickness="1" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DarkBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource DisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar
                Name="TopTick"
                SnapsToDevicePixels="True"
                Placement="Top"
                Fill="{StaticResource GlyphBrush}"
                Height="4"
                Visibility="Collapsed" />
            <Border
                Name="TrackBackground"
                Margin="0"
                CornerRadius="2"
                Height="4"
                Grid.Row="1"
                Background="{StaticResource LightBrush}"
                BorderBrush="{StaticResource NormalBorderBrush}"
                BorderThickness="1" />
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar
                Name="BottomTick"
                SnapsToDevicePixels="True"
                Grid.Row="2"
                Fill="{TemplateBinding Foreground}"
                Placement="Bottom"
                Height="4"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar
                Name="TopTick"
                SnapsToDevicePixels="True"
                Placement="Left"
                Fill="{StaticResource GlyphBrush}"
                Width="4"
                Visibility="Collapsed" />
            <Border
                Name="TrackBackground"
                Margin="0"
                CornerRadius="2"
                Width="4"
                Grid.Column="1"
                Background="{StaticResource HorizontalLightBrush}"
                BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                BorderThickness="1" />
            <Track Grid.Column="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar
                Name="BottomTick"
                SnapsToDevicePixels="True"
                Grid.Column="2"
                Fill="{TemplateBinding Foreground}"
                Placement="Right"
                Width="4"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Border"
                        BorderThickness="1" CornerRadius="2"
                        TextBlock.Foreground="Black" TextBlock.TextAlignment="Left" Padding="3"
                        HorizontalAlignment="Stretch" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}">
                        <TextBlock Text="{TemplateBinding Content}" TextBlock.TextAlignment="Center" Margin="{TemplateBinding Padding}" Name="btnTextBlock">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="btnTextBlock" Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type TabControl}" TargetType="{x:Type TabControl}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel Grid.Row="0" IsItemsHost="true" />
                        <Border BorderThickness="0,0,1,1" BorderBrush="#D0CEBF" Grid.Row="1">
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter ContentSource="SelectedContent" />
                                </Border>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Background" Value="{StaticResource NormalBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border>
                        <Grid>
                            <Grid>
                                <Border CornerRadius="3,3,0,0" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}" />
                            </Grid>
                            <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter ContentSource="Header"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource LightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="simplearrowbtntmpl">
        <Border BorderBrush="Gray" CornerRadius="3" BorderThickness="2" Margin="{TemplateBinding Margin}">
            <Canvas Background="Transparent">
                <Polygon Points="4,23 28,23 16,5" Name="p" Width="32">
                    <Polygon.Fill>
                        <RadialGradientBrush>
                            <GradientStop Offset="-0.4" Color="WhiteSmoke" />
                            <GradientStop Offset="0.15" Color="Gray" />
                            <GradientStop Offset="1" Color="Black" />
                        </RadialGradientBrush>
                    </Polygon.Fill>
                </Polygon>
            </Canvas>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="p">
                    <Setter.Value>
                        <RadialGradientBrush>
                            <GradientStop Offset="-0.1" Color="WhiteSmoke" />
                            <GradientStop Offset="0.38" Color="Gray" />
                            <GradientStop Offset="1" Color="Black" />
                        </RadialGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="p" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="doublearrowbtntmpl">
        <Border BorderBrush="Gray" CornerRadius="3" BorderThickness="2" Margin="{TemplateBinding Margin}">
            <Canvas Background="Transparent">
                <Polygon Points="4,13 28,13 16,4" Name="p1" Width="32">
                    <Polygon.Fill>
                        <RadialGradientBrush>
                            <GradientStop Offset="-0.4" Color="WhiteSmoke" />
                            <GradientStop Offset="0.15" Color="Gray" />
                            <GradientStop Offset="1" Color="Black" />
                        </RadialGradientBrush>
                    </Polygon.Fill>
                </Polygon>
                <Polygon Points="4,23 28,23 16,13" Name="p2" Width="32">
                    <Polygon.Fill>
                        <RadialGradientBrush>
                            <GradientStop Offset="-0.4" Color="WhiteSmoke" />
                            <GradientStop Offset="0.15" Color="Gray" />
                            <GradientStop Offset="1" Color="Black" />
                        </RadialGradientBrush>
                    </Polygon.Fill>

                </Polygon>
            </Canvas>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="p1">
                    <Setter.Value>
                        <RadialGradientBrush>
                            <GradientStop Offset="-0.1" Color="WhiteSmoke" />
                            <GradientStop Offset="0.38" Color="Gray" />
                            <GradientStop Offset="1" Color="Black" />
                        </RadialGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="p1" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Fill" TargetName="p2">
                    <Setter.Value>
                        <RadialGradientBrush>
                            <GradientStop Offset="-0.1" Color="WhiteSmoke" />
                            <GradientStop Offset="0.38" Color="Gray" />
                            <GradientStop Offset="1" Color="Black" />
                        </RadialGradientBrush>

                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="p2" Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border
            Name="Border"
            CornerRadius="2"
            Background="Transparent"
            BorderBrush="Gray"
            BorderThickness="1">
            <Path
                Name="Arrow"
                Fill="Black"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 8 L 8 0 Z" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 0 L 0 8 L 8 4 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid Name="grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border
                            Name="Border"
                            Grid.Row="0"
                            BorderThickness="1"
                            CornerRadius="2,2,0,0" BorderBrush="AliceBlue">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton
                                    IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,
                                    RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource ExpanderToggleButton}"
                                    Background="{StaticResource NormalBrush}" />
                                <TextBlock
                                    Name="cnt"
                                    Grid.Column="1"
                                    Margin="4"
                                    Text="{TemplateBinding Header}"
                                    />
                            </Grid>
                        </Border>
                        <Border
                            Name="Content"
                            Grid.Row="1"
                            Background="{StaticResource WindowBackgroundBrush}"
                            BorderBrush="{StaticResource SolidBorderBrush}"
                            BorderThickness="1,0,1,1"
                            CornerRadius="0,0,2,2">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="cnt" Property="Foreground" Value="Blue" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnNavigateLeft" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="Gray" BorderThickness="1" CornerRadius="2" IsHitTestVisible="True" Name="b">
                        <DockPanel Margin="5" IsHitTestVisible="True" >
                            <Image Source="../Resources/icons/resultset_previous.png" Width="16" Height="16" HorizontalAlignment="Left" IsHitTestVisible="True" />
                            <TextBlock Margin="4" Text="{TemplateBinding Content}" Name="tb"></TextBlock>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="b" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="tb" Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnNavigateRight" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderBrush="Gray" CornerRadius="2" BorderThickness="1" IsHitTestVisible="True" Name="b">
                        <DockPanel Margin="5" IsHitTestVisible="True" Name="dp">
                            <TextBlock Margin="4" Text="{TemplateBinding Content}" Name="tb"></TextBlock>
                            <Image Source="../Resources/icons/resultset_next.png" Width="16" Height="16" HorizontalAlignment="Left" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="b" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="tb" Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
