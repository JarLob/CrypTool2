//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Primes.Resources.lang.WpfControls.Factorization {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Factorization {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Factorization() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Primes.Resources.lang.WpfControls.Factorization.Factorization", typeof(Factorization).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die actual divisor:  ähnelt.
        /// </summary>
        public static string bf_actualdiv {
            get {
                return ResourceManager.GetString("bf_actualdiv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale of the factor tree ähnelt.
        /// </summary>
        public static string bf_scale {
            get {
                return ResourceManager.GetString("bf_scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Brute-force ähnelt.
        /// </summary>
        public static string fac_bruteforce {
            get {
                return ResourceManager.GetString("fac_bruteforce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy to clipboard ähnelt.
        /// </summary>
        public static string fac_copytoclipboard {
            get {
                return ResourceManager.GetString("fac_copytoclipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate random number for factorization ähnelt.
        /// </summary>
        public static string fac_generaternd {
            get {
                return ResourceManager.GetString("fac_generaternd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number to factorize ähnelt.
        /// </summary>
        public static string fac_groupboxheader {
            get {
                return ResourceManager.GetString("fac_groupboxheader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quadratic sieve ähnelt.
        /// </summary>
        public static string fac_qs {
            get {
                return ResourceManager.GetString("fac_qs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factorization result ähnelt.
        /// </summary>
        public static string fac_result {
            get {
                return ResourceManager.GetString("fac_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factorization result (aborted) ähnelt.
        /// </summary>
        public static string fac_resultaborted {
            get {
                return ResourceManager.GetString("fac_resultaborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factorization result (The brute-force division was canceled after {0}.) ähnelt.
        /// </summary>
        public static string fac_resultabortedtime {
            get {
                return ResourceManager.GetString("fac_resultabortedtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factorization result (finished) ähnelt.
        /// </summary>
        public static string fac_resultfinished {
            get {
                return ResourceManager.GetString("fac_resultfinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factorization result (The brute-force division finished in {0}.) ähnelt.
        /// </summary>
        public static string fac_resultfinishedtime {
            get {
                return ResourceManager.GetString("fac_resultfinishedtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Factorization result (running) ähnelt.
        /// </summary>
        public static string fac_resultrunning {
            get {
                return ResourceManager.GetString("fac_resultrunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die hour ähnelt.
        /// </summary>
        public static string fac_timehour {
            get {
                return ResourceManager.GetString("fac_timehour", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die hours ähnelt.
        /// </summary>
        public static string fac_timehours {
            get {
                return ResourceManager.GetString("fac_timehours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die minute ähnelt.
        /// </summary>
        public static string fac_timeminute {
            get {
                return ResourceManager.GetString("fac_timeminute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die minutes ähnelt.
        /// </summary>
        public static string fac_timeminutes {
            get {
                return ResourceManager.GetString("fac_timeminutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die seconds ähnelt.
        /// </summary>
        public static string fac_timeseconds {
            get {
                return ResourceManager.GetString("fac_timeseconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart ähnelt.
        /// </summary>
        public static string qs_btnrestart {
            get {
                return ResourceManager.GetString("qs_btnrestart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy to clipboard ähnelt.
        /// </summary>
        public static string qs_copytoclipboard {
            get {
                return ResourceManager.GetString("qs_copytoclipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step 1 (Determine suitable values) ähnelt.
        /// </summary>
        public static string qs_step1 {
            get {
                return ResourceManager.GetString("qs_step1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The square root of n={0} is {1} ≈ {2}. The sieving interval is [{3}, {4}]. ähnelt.
        /// </summary>
        public static string qs_step1_squareroot {
            get {
                return ResourceManager.GetString("qs_step1_squareroot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step 2 (Determine smooth values) ähnelt.
        /// </summary>
        public static string qs_step2 {
            get {
                return ResourceManager.GetString("qs_step2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The upper bound is {0}. The factor base is {{{1}}}. Start sieving step. ähnelt.
        /// </summary>
        public static string qs_step2_B {
            get {
                return ResourceManager.GetString("qs_step2_B", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is b-smooth? ähnelt.
        /// </summary>
        public static string qs_step2_bsmooth {
            get {
                return ResourceManager.GetString("qs_step2_bsmooth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Smooth factors ähnelt.
        /// </summary>
        public static string qs_step2_factorization {
            get {
                return ResourceManager.GetString("qs_step2_factorization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die no ähnelt.
        /// </summary>
        public static string qs_step2_no {
            get {
                return ResourceManager.GetString("qs_step2_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die yes ähnelt.
        /// </summary>
        public static string qs_step2_yes {
            get {
                return ResourceManager.GetString("qs_step2_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step 3 (Search for squares) ähnelt.
        /// </summary>
        public static string qs_step3 {
            get {
                return ResourceManager.GetString("qs_step3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is ignored. ähnelt.
        /// </summary>
        public static string qs_step3_ignored {
            get {
                return ResourceManager.GetString("qs_step3_ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not a square number. ähnelt.
        /// </summary>
        public static string qs_step3_isnotsquare {
            get {
                return ResourceManager.GetString("qs_step3_isnotsquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is a square number. The square root of {1} is {2}. ähnelt.
        /// </summary>
        public static string qs_step3_issquare {
            get {
                return ResourceManager.GetString("qs_step3_issquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} smooth value(s) found. ähnelt.
        /// </summary>
        public static string qs_step3_smooth {
            get {
                return ResourceManager.GetString("qs_step3_smooth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} smooth value(s) found. ähnelt.
        /// </summary>
        public static string qs_step3_smoothvalues {
            get {
                return ResourceManager.GetString("qs_step3_smoothvalues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test combinations ähnelt.
        /// </summary>
        public static string qs_step3_testcombi {
            get {
                return ResourceManager.GetString("qs_step3_testcombi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The combination {0} = {1} is ignored. ähnelt.
        /// </summary>
        public static string qs_step3_testcombiignore {
            get {
                return ResourceManager.GetString("qs_step3_testcombiignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The combination {0} = {1} is not a square. ähnelt.
        /// </summary>
        public static string qs_step3_testcombiisnotsquare {
            get {
                return ResourceManager.GetString("qs_step3_testcombiisnotsquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The combination {0} = {1} is a square. The square root of {2} is {3}. ähnelt.
        /// </summary>
        public static string qs_step3_testcombiisquare {
            get {
                return ResourceManager.GetString("qs_step3_testcombiisquare", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step 4 (Calculate congruences and factorization) ähnelt.
        /// </summary>
        public static string qs_step4 {
            get {
                return ResourceManager.GetString("qs_step4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die a and b were calculated with a = {0}, b = {1}. ähnelt.
        /// </summary>
        public static string qs_step4_abcalculated {
            get {
                return ResourceManager.GetString("qs_step4_abcalculated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check the congruences a² ≡ b² (mod n), a ≢ b (mod n): ähnelt.
        /// </summary>
        public static string qs_step4_checkcong {
            get {
                return ResourceManager.GetString("qs_step4_checkcong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No more congruences found. Could not factorize n={0} with the quadratic sieve. ähnelt.
        /// </summary>
        public static string qs_step4_end {
            get {
                return ResourceManager.GetString("qs_step4_end", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die    gcd({0} + {1}, {2}) = {3} ähnelt.
        /// </summary>
        public static string qs_step4_factor1 {
            get {
                return ResourceManager.GetString("qs_step4_factor1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die    gcd({0} - {1}, {2}) = {3} ähnelt.
        /// </summary>
        public static string qs_step4_factor2 {
            get {
                return ResourceManager.GetString("qs_step4_factor2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die no ähnelt.
        /// </summary>
        public static string qs_step4_no {
            get {
                return ResourceManager.GetString("qs_step4_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The conditions are not fulfilled. Click &apos;Restart&apos; to search for a new combination. ähnelt.
        /// </summary>
        public static string qs_step4_notproofed {
            get {
                return ResourceManager.GetString("qs_step4_notproofed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Both conditions are fulfilled. We get the following factors of n={0}: ähnelt.
        /// </summary>
        public static string qs_step4_proofed {
            get {
                return ResourceManager.GetString("qs_step4_proofed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not a prime. Click &apos;Restart&apos; to factorize {1}. ähnelt.
        /// </summary>
        public static string qs_step4_refactorize {
            get {
                return ResourceManager.GetString("qs_step4_refactorize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The factorization with a = {0} and b = {1} provided only trivial factors.
        ///Click &apos;Restart&apos; for a new factorization round. The unsuccessful values will be ignored. ähnelt.
        /// </summary>
        public static string qs_step4_reset {
            get {
                return ResourceManager.GetString("qs_step4_reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die yes ähnelt.
        /// </summary>
        public static string qs_step4_yes {
            get {
                return ResourceManager.GetString("qs_step4_yes", resourceCulture);
            }
        }
    }
}
