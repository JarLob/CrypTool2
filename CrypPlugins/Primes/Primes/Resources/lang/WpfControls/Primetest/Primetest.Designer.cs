//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.296
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Primes.Resources.lang.WpfControls.Primetest {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Primetest {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Primetest() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Primes.Resources.lang.WpfControls.Primetest.Primetest", typeof(Primetest).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Berechne {0}^{1} mod {2} = {3} ähnelt.
        /// </summary>
        public static string mr_calculating1 {
            get {
                return ResourceManager.GetString("mr_calculating1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Berechne ({0}^{1})^{2} mod {3} = {4}^2 mod {3} = {5} ähnelt.
        /// </summary>
        public static string mr_calculating2 {
            get {
                return ResourceManager.GetString("mr_calculating2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auswahl der Basis von 2 bis  ähnelt.
        /// </summary>
        public static string mr_choosearnd {
            get {
                return ResourceManager.GetString("mr_choosearnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wahl der Basis ähnelt.
        /// </summary>
        public static string mr_chooseasys {
            get {
                return ResourceManager.GetString("mr_chooseasys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl der Runden ähnelt.
        /// </summary>
        public static string mr_countrounds {
            get {
                return ResourceManager.GetString("mr_countrounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ist gerade und kann daher keine Primzahl sein. ähnelt.
        /// </summary>
        public static string mr_iseven {
            get {
                return ResourceManager.GetString("mr_iseven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ist eine Quadratwurzel von 1 mod {1}. Daher kann {1} keine Primzahl sein. ähnelt.
        /// </summary>
        public static string mr_isnotprime1 {
            get {
                return ResourceManager.GetString("mr_isnotprime1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} hat den Fermat-Test nicht bestanden, denn {1}^{2} mod {3} = {4} ≠ 1. Daher kann {0} keine Primzahl sein. ähnelt.
        /// </summary>
        public static string mr_isnotprime2 {
            get {
                return ResourceManager.GetString("mr_isnotprime2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Runde mit Basis {0} beendet. {1} könnte eine Primzahl sein. ähnelt.
        /// </summary>
        public static string mr_isprime {
            get {
                return ResourceManager.GetString("mr_isprime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optionen ähnelt.
        /// </summary>
        public static string mr_options {
            get {
                return ResourceManager.GetString("mr_options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zufällige Wahl der Basen ähnelt.
        /// </summary>
        public static string mr_rbchoosearnd {
            get {
                return ResourceManager.GetString("mr_rbchoosearnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Systematische Auswahl der Basen ähnelt.
        /// </summary>
        public static string mr_rbchooseasys {
            get {
                return ResourceManager.GetString("mr_rbchooseasys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Runde {0} mit Basis {1} ähnelt.
        /// </summary>
        public static string mr_round {
            get {
                return ResourceManager.GetString("mr_round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Berechne die größte Zweierpotenz, die n-1 = {0} teilt. ähnelt.
        /// </summary>
        public static string mr_shiftcalc {
            get {
                return ResourceManager.GetString("mr_shiftcalc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es wurde {0} mal nach rechts geschoben: {1} = 2^{0} * {2} ähnelt.
        /// </summary>
        public static string mr_shiftedright {
            get {
                return ResourceManager.GetString("mr_shiftedright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ist gerade und wird um ein Bit nach rechts geschoben = {1} ähnelt.
        /// </summary>
        public static string mr_shiftright {
            get {
                return ResourceManager.GetString("mr_shiftright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nach {0} Runde wurde ein Zeuge gefunden, daher ist {1} keine Primzahl. ähnelt.
        /// </summary>
        public static string mr_witnessfound1 {
            get {
                return ResourceManager.GetString("mr_witnessfound1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nach {0} Runden wurde ein Zeuge gefunden, daher ist {1} keine Primzahl. ähnelt.
        /// </summary>
        public static string mr_witnessfound2 {
            get {
                return ResourceManager.GetString("mr_witnessfound2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nach {0} Runde wurde kein Zeuge gefunden, daher ist {1} wahrscheinlich eine Primzahl. ähnelt.
        /// </summary>
        public static string mr_witnessnotfound1 {
            get {
                return ResourceManager.GetString("mr_witnessnotfound1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nach {0} Runden wurde kein Zeuge gefunden, daher ist {1} wahrscheinlich eine Primzahl. ähnelt.
        /// </summary>
        public static string mr_witnessnotfound2 {
            get {
                return ResourceManager.GetString("mr_witnessnotfound2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Weiter mit automatischer Ausführung ähnelt.
        /// </summary>
        public static string soe_btnresume {
            get {
                return ResourceManager.GetString("soe_btnresume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die fertig ähnelt.
        /// </summary>
        public static string soe_done {
            get {
                return ResourceManager.GetString("soe_done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ausführung beendet:  ähnelt.
        /// </summary>
        public static string soe_doneautomatic {
            get {
                return ResourceManager.GetString("soe_doneautomatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es werden alle Zahlen von 2 bis {0} aufgelistet! ähnelt.
        /// </summary>
        public static string soe_infostepwise1 {
            get {
                return ResourceManager.GetString("soe_infostepwise1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bitte streichen Sie Vielfache der nächten Zahl, beginnend bei 2, indem Sie die Zahl anklicken.  ähnelt.
        /// </summary>
        public static string soe_infostepwise2 {
            get {
                return ResourceManager.GetString("soe_infostepwise2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ist keine Primzahl ähnelt.
        /// </summary>
        public static string soe_isnotprime {
            get {
                return ResourceManager.GetString("soe_isnotprime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ist eine Primzahl  ähnelt.
        /// </summary>
        public static string soe_isprime {
            get {
                return ResourceManager.GetString("soe_isprime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verfahren ähnelt.
        /// </summary>
        public static string soe_method {
            get {
                return ResourceManager.GetString("soe_method", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatisch ähnelt.
        /// </summary>
        public static string soe_methodauto {
            get {
                return ResourceManager.GetString("soe_methodauto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Schrittweise geführt ähnelt.
        /// </summary>
        public static string soe_methodstepwise {
            get {
                return ResourceManager.GetString("soe_methodstepwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Zahl {0} wurde nicht erwartet ähnelt.
        /// </summary>
        public static string soe_multiplenotexpected {
            get {
                return ResourceManager.GetString("soe_multiplenotexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die Vielfachen von {0} werden entfernt ähnelt.
        /// </summary>
        public static string soe_removemultiple {
            get {
                return ResourceManager.GetString("soe_removemultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entferne Vielfache von {0} ähnelt.
        /// </summary>
        public static string soe_removemultipleof {
            get {
                return ResourceManager.GetString("soe_removemultipleof", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Für das Verfahren &quot;Sieb des Eratosthenes&quot; werden nur Zahlen von {0} bis {1} zugelassen. ähnelt.
        /// </summary>
        public static string soe_validatormessage {
            get {
                return ResourceManager.GetString("soe_validatormessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test nach Fermat ähnelt.
        /// </summary>
        public static string test_fermat {
            get {
                return ResourceManager.GetString("test_fermat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die zu testende Zahl generieren ähnelt.
        /// </summary>
        public static string test_genNumber {
            get {
                return ResourceManager.GetString("test_genNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zu testende Zahl ähnelt.
        /// </summary>
        public static string test_groupboxheader {
            get {
                return ResourceManager.GetString("test_groupboxheader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Miller-Rabin-Test ähnelt.
        /// </summary>
        public static string test_millerrabin {
            get {
                return ResourceManager.GetString("test_millerrabin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sieb des Atkin ähnelt.
        /// </summary>
        public static string test_soa {
            get {
                return ResourceManager.GetString("test_soa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sieb des Eratosthenes ähnelt.
        /// </summary>
        public static string test_soe {
            get {
                return ResourceManager.GetString("test_soe", resourceCulture);
            }
        }
    }
}
