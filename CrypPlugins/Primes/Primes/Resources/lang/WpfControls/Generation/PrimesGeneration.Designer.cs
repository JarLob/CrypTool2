//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Primes.Resources.lang.WpfControls.Generation {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class PrimesGeneration {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PrimesGeneration() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Primes.Resources.lang.WpfControls.Generation.PrimesGeneration", typeof(PrimesGeneration).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die keine Primzahl ähnelt.
        /// </summary>
        public static string isNotPrime {
            get {
                return ResourceManager.GetString("isNotPrime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Primzahl ähnelt.
        /// </summary>
        public static string isPrime {
            get {
                return ResourceManager.GetString("isPrime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abbrechen ähnelt.
        /// </summary>
        public static string ntimesm_btnCancel {
            get {
                return ResourceManager.GetString("ntimesm_btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generieren ähnelt.
        /// </summary>
        public static string ntimesm_btnExecute {
            get {
                return ResourceManager.GetString("ntimesm_btnExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stellen ähnelt.
        /// </summary>
        public static string ntimesm_digits {
            get {
                return ResourceManager.GetString("ntimesm_digits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mehr als {0} Stellen sind nicht erlaubt. ähnelt.
        /// </summary>
        public static string ntimesm_errordigits {
            get {
                return ResourceManager.GetString("ntimesm_errordigits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eingabe ähnelt.
        /// </summary>
        public static string ntimesm_input {
            get {
                return ResourceManager.GetString("ntimesm_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zahlen mit ähnelt.
        /// </summary>
        public static string ntimesm_numbers {
            get {
                return ResourceManager.GetString("ntimesm_numbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Werte für x ähnelt.
        /// </summary>
        public static string polynom_values {
            get {
                return ResourceManager.GetString("polynom_values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eingabe der Koeffizienten für ein Polynom ähnelt.
        /// </summary>
        public static string polynomname_polynom {
            get {
                return ResourceManager.GetString("polynomname_polynom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eingabe der Parameter für Eulers Polynom ähnelt.
        /// </summary>
        public static string polynomname_polynomeuler {
            get {
                return ResourceManager.GetString("polynomname_polynomeuler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eingabe der Parameter für zufällige Polynome ähnelt.
        /// </summary>
        public static string polynomname_polynomrnd {
            get {
                return ResourceManager.GetString("polynomname_polynomrnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eingabe der Parameter für den systematischen Test ähnelt.
        /// </summary>
        public static string polynomname_polynomsyst {
            get {
                return ResourceManager.GetString("polynomname_polynomsyst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Abbrechen ähnelt.
        /// </summary>
        public static string polynomrange_btnCancel {
            get {
                return ResourceManager.GetString("polynomrange_btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ausführen ähnelt.
        /// </summary>
        public static string polynomrange_btnExecute {
            get {
                return ResourceManager.GetString("polynomrange_btnExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wert für x zufällig bestimmen ähnelt.
        /// </summary>
        public static string polynomrange_choosevaluesrnd {
            get {
                return ResourceManager.GetString("polynomrange_choosevaluesrnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Für jedes Polynom ähnelt.
        /// </summary>
        public static string polynomrange_foreachformulars {
            get {
                return ResourceManager.GetString("polynomrange_foreachformulars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Berechnungen pro Durchgang ähnelt.
        /// </summary>
        public static string polynomrange_numberofcalculations {
            get {
                return ResourceManager.GetString("polynomrange_numberofcalculations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Anzahl der Funktionen ähnelt.
        /// </summary>
        public static string polynomrange_numberofformulars {
            get {
                return ResourceManager.GetString("polynomrange_numberofformulars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 10 x 100-stellig ähnelt.
        /// </summary>
        public static string rnd10100 {
            get {
                return ResourceManager.GetString("rnd10100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 10 x 20-stellig ähnelt.
        /// </summary>
        public static string rnd1020 {
            get {
                return ResourceManager.GetString("rnd1020", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 10 x 50-stellig ähnelt.
        /// </summary>
        public static string rnd1050 {
            get {
                return ResourceManager.GetString("rnd1050", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die n x m-stellig ähnelt.
        /// </summary>
        public static string rndntimesm {
            get {
                return ResourceManager.GetString("rndntimesm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zufällige Primzahl erzeugen im Bereich... ähnelt.
        /// </summary>
        public static string rndPrimes {
            get {
                return ResourceManager.GetString("rndPrimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Quadratische Polynome zur Erzeugung von Primzahlen ähnelt.
        /// </summary>
        public static string rndQuadratic {
            get {
                return ResourceManager.GetString("rndQuadratic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eulers Polynom testen ähnelt.
        /// </summary>
        public static string rndQuadraticEuler {
            get {
                return ResourceManager.GetString("rndQuadraticEuler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spezielles Polynom testen ähnelt.
        /// </summary>
        public static string rndQuadraticFormular {
            get {
                return ResourceManager.GetString("rndQuadraticFormular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zufällige Polynome testen ähnelt.
        /// </summary>
        public static string rndQuadraticRnd {
            get {
                return ResourceManager.GetString("rndQuadraticRnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Polynome systematisch testen ähnelt.
        /// </summary>
        public static string rndQuadraticSystematic {
            get {
                return ResourceManager.GetString("rndQuadraticSystematic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Betrachte die Zahl {0}. ähnelt.
        /// </summary>
        public static string soa_actualnumber {
            get {
                return ResourceManager.GetString("soa_actualnumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} mod 60 = {1}. Suche alle Lösungen von 4 * x² + y² = {2}. ähnelt.
        /// </summary>
        public static string soa_firstifmatch {
            get {
                return ResourceManager.GetString("soa_firstifmatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eine Lösung wurde gefunden. 4 * {0}² + {1}² = {2}. Markiere {3} als {4}. ähnelt.
        /// </summary>
        public static string soa_firstsolutionfound {
            get {
                return ResourceManager.GetString("soa_firstsolutionfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ist ein Vielfaches von {1} und darum keine Primzahl. ähnelt.
        /// </summary>
        public static string soa_fithsolutionfound {
            get {
                return ResourceManager.GetString("soa_fithsolutionfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} wurde als Primzahl identifiziert. Entferne alle Vielfachen von {1}. ähnelt.
        /// </summary>
        public static string soa_fourthsolutionfound {
            get {
                return ResourceManager.GetString("soa_fourthsolutionfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die alle Primzahlen erechnen bis ähnelt.
        /// </summary>
        public static string soa_generateprimesto {
            get {
                return ResourceManager.GetString("soa_generateprimesto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alle Zahlen von 1 bis {0} werden als nicht-prim markiert. ähnelt.
        /// </summary>
        public static string soa_initvsieve {
            get {
                return ResourceManager.GetString("soa_initvsieve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;ist keine Primzahl&quot; ähnelt.
        /// </summary>
        public static string soa_isnotprime {
            get {
                return ResourceManager.GetString("soa_isnotprime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;ist eine Primzahl&quot; ähnelt.
        /// </summary>
        public static string soa_isprime {
            get {
                return ResourceManager.GetString("soa_isprime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} mod 60 = {1}. Suche alle Lösungen von 3 * x² + y² = {2}. ähnelt.
        /// </summary>
        public static string soa_secondifmatch {
            get {
                return ResourceManager.GetString("soa_secondifmatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eine Lösung wurde gefunden. 3 * {0}² + {1}² = {2}. Markiere {3} als {4}. ähnelt.
        /// </summary>
        public static string soa_secondsolutionfound {
            get {
                return ResourceManager.GetString("soa_secondsolutionfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Das Sieb wird gestartet. Alle Zahlen werden mod 60 betrachtet. ähnelt.
        /// </summary>
        public static string soa_startsieve {
            get {
                return ResourceManager.GetString("soa_startsieve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} mod 60 = {1}. Suche alle Lösungen von 3 * x² - y² = {2}. ähnelt.
        /// </summary>
        public static string soa_thirdifmatch {
            get {
                return ResourceManager.GetString("soa_thirdifmatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Eine Lösung wurde gefunden. 3 * {0}² - {1}² = {2}. Markiere {3} als {4}. ähnelt.
        /// </summary>
        public static string soa_thirdsolutionfound {
            get {
                return ResourceManager.GetString("soa_thirdsolutionfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die durchschnittliche Anzahl der Primzahlen beträgt {0} ({1}%). ähnelt.
        /// </summary>
        public static string statAvgCountPrimes {
            get {
                return ResourceManager.GetString("statAvgCountPrimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Funktion(en), die als Funktionswert die wenigsten Primzahlen lieferten, sind: ähnelt.
        /// </summary>
        public static string statFunctionsLeast {
            get {
                return ResourceManager.GetString("statFunctionsLeast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Funktion(en), die als Funktionswert die wenigsten Primzahlen in diesem Wertebereich lieferten, sind: ähnelt.
        /// </summary>
        public static string statFunctionsLeastInterval {
            get {
                return ResourceManager.GetString("statFunctionsLeastInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Funktion(en), die als Funktionswert die meisten Primzahlen lieferten, sind: ähnelt.
        /// </summary>
        public static string statFunctionsMost {
            get {
                return ResourceManager.GetString("statFunctionsMost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Funktion(en), die als Funktionswert die meisten Primzahlen in diesem Wertebereich lieferten, sind: ähnelt.
        /// </summary>
        public static string statFunctionsMostInterval {
            get {
                return ResourceManager.GetString("statFunctionsMostInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Funktion(en), die als Funktionswert die meisten verschiedenen Primzahlen lieferten, sind: ähnelt.
        /// </summary>
        public static string statFunctionsMostMisc {
            get {
                return ResourceManager.GetString("statFunctionsMostMisc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Funktion(en), die als Funktionswert die meisten verschiedenen Primzahlen in diesem Wertebereich lieferten, sind: ähnelt.
        /// </summary>
        public static string statFunctionsMostMiscInterval {
            get {
                return ResourceManager.GetString("statFunctionsMostMiscInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insgesamt {0} verschiedene Primzahlen erzeugt, {2} gesamt ({1} %). ähnelt.
        /// </summary>
        public static string statGenerated {
            get {
                return ResourceManager.GetString("statGenerated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Von {0} Zahlen sind {1} Primzahlen ({2}%). ähnelt.
        /// </summary>
        public static string statGeneratedAbsolut {
            get {
                return ResourceManager.GetString("statGeneratedAbsolut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es wurden keine weiteren Primzahlen gefunden. ähnelt.
        /// </summary>
        public static string statNonPrimes {
            get {
                return ResourceManager.GetString("statNonPrimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es wurden {0} Funktionen untersucht. ähnelt.
        /// </summary>
        public static string statRnd {
            get {
                return ResourceManager.GetString("statRnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es wurden {0} Funktionen im Wertebereich x aus [{1}, {2}] untersucht. ähnelt.
        /// </summary>
        public static string statRndInterval {
            get {
                return ResourceManager.GetString("statRndInterval", resourceCulture);
            }
        }
    }
}
