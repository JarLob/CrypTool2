<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="graph_btnResume" xml:space="preserve">
    <value>Weiter</value>
  </data>
  <data name="graph_btnStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="graph_contextmenucopy" xml:space="preserve">
    <value>kopieren</value>
  </data>
  <data name="graph_gausscountinfo" xml:space="preserve">
    <value>Die Anzahl der Primzahlen nach dem Primzahlsatz beträgt:</value>
  </data>
  <data name="graph_gausscountinfoCalculating" xml:space="preserve">
    <value>Die Anzahl der Primzahlen nach dem Primzahlsatz wird berechnet:</value>
  </data>
  <data name="graph_gaussname" xml:space="preserve">
    <value>Primzahlsatz</value>
  </data>
  <data name="graph_groupboxheader" xml:space="preserve">
    <value>Verfügbare Funktionen zur Berechnung der Anzahl der Primzahlen Y in einem gegebenen Bereich X</value>
  </data>
  <data name="graph_lincountinfo" xml:space="preserve">
    <value>Die Anzahl der Primzahlen nach dem logarithmischen Integral beträgt:</value>
  </data>
  <data name="graph_lincountinfoCalculating" xml:space="preserve">
    <value>Die Anzahl der Primzahlen nach dem logarithmischen Integral wird berechnet:</value>
  </data>
  <data name="graph_linname" xml:space="preserve">
    <value>Das logarithmische Integral</value>
  </data>
  <data name="graph_pincountinfo" xml:space="preserve">
    <value>Die tatsächliche Anzahl der Primzahlen beträgt:</value>
  </data>
  <data name="graph_pincountinfoCalculating" xml:space="preserve">
    <value>Die tatsächliche Anzahl der Primzahlen wird berechnet:</value>
  </data>
  <data name="graph_pinlimitinfo" xml:space="preserve">
    <value>Die Exakte Treppenfunktion wird nur für Werte unter 10.000 gezeichnet. Alle Werte darüber werden lediglich berechnet und hier ausgegeben.</value>
  </data>
  <data name="graph_pinname" xml:space="preserve">
    <value>Exakte Treppenfunktion π</value>
  </data>
  <data name="graph_validatorrangemessage" xml:space="preserve">
    <value>Der Abstand zwischen "von" und "bis" muss mindestens {0} betragen.</value>
  </data>
  <data name="numbergrid_actualnumber" xml:space="preserve">
    <value>aktuelle Zahl</value>
  </data>
  <data name="numbergrid_btnExecute" xml:space="preserve">
    <value>Ausführen</value>
  </data>
  <data name="numbergrid_height" xml:space="preserve">
    <value>Höhe</value>
  </data>
  <data name="numbergrid_input" xml:space="preserve">
    <value>Eingabe</value>
  </data>
  <data name="numbergrid_scroll" xml:space="preserve">
    <value>Zeilenweise im Zahlengitter scrollen</value>
  </data>
  <data name="numbergrid_start" xml:space="preserve">
    <value>Startwert</value>
  </data>
  <data name="numbergrid_tooltipscrolldown" xml:space="preserve">
    <value>Mit Klick hierauf scrollen Sie eine Zeile nach unten.</value>
  </data>
  <data name="numbergrid_tooltipscrolldownfast" xml:space="preserve">
    <value>Mit Klick hierauf scrollen Sie zwei Zeilen nach unten.</value>
  </data>
  <data name="numbergrid_tooltipscrollup" xml:space="preserve">
    <value>Mit Klick hierauf scrollen Sie eine Zeile nach oben.</value>
  </data>
  <data name="numbergrid_tooltipscrollupfast" xml:space="preserve">
    <value>Mit Klick hierauf scrollen Sie zwei Zeilen nach oben.</value>
  </data>
  <data name="numbergrid_width" xml:space="preserve">
    <value>Breite</value>
  </data>
  <data name="numbergrid_zoom" xml:space="preserve">
    <value>Das Zahlengitter zoomen</value>
  </data>
  <data name="numberline_actualnumber" xml:space="preserve">
    <value>Aktuelle Zahl n =</value>
  </data>
  <data name="numberline_calculating" xml:space="preserve">
    <value>(wird berechnet)</value>
  </data>
  <data name="numberline_cancelcalculations" xml:space="preserve">
    <value>Berechnungen abbrechen</value>
  </data>
  <data name="numberline_countprimesgauss" xml:space="preserve">
    <value>Nach der Abschätzung durch den Gaußschen Primzahlsatz beträgt die Anzahl {0}.</value>
  </data>
  <data name="numberline_countprimespin" xml:space="preserve">
    <value>Die tatsächliche Anzahl der Primzahlen in diesem Bereich beträgt {0}.</value>
  </data>
  <data name="numberline_divcount" xml:space="preserve">
    <value>Anzahl der Teiler</value>
  </data>
  <data name="numberline_divsum" xml:space="preserve">
    <value>Summe der Teiler</value>
  </data>
  <data name="numberline_eulerphi" xml:space="preserve">
    <value>Eulersche φ-Funktion</value>
  </data>
  <data name="numberline_eulerphifoundresult" xml:space="preserve">
    <value>{0} teilerfremde Zahlen zur aktuellen Zahl {1} gefunden.</value>
  </data>
  <data name="numberline_eulerphiisprime" xml:space="preserve">
    <value>{0} ist eine Primzahl. Darum ist die Anzahl der zu {1} teilerfremden Zahlen {2} - 1 = {3}</value>
  </data>
  <data name="numberline_eulerphisum" xml:space="preserve">
    <value>Teilersummenformel</value>
  </data>
  <data name="numberline_eulerphisuminfo" xml:space="preserve">
    <value>Die Formel liefert für die aktuelle Zahl {0} den Wert {1}.</value>
  </data>
  <data name="numberline_eulerphisumlog" xml:space="preserve">
    <value>φ({0}) = {1}</value>
  </data>
  <data name="numberline_factorization" xml:space="preserve">
    <value>Faktorisierung</value>
  </data>
  <data name="numberline_factorizationcalculating" xml:space="preserve">
    <value>(wird faktorisiert)</value>
  </data>
  <data name="numberline_from" xml:space="preserve">
    <value>von</value>
  </data>
  <data name="numberline_goldbach" xml:space="preserve">
    <value>Goldbach-Vermutung</value>
  </data>
  <data name="numberline_goldbachfoundsums" xml:space="preserve">
    <value>{0} Primzahlsummen für die aktuelle Zahl {1} gefunden.</value>
  </data>
  <data name="numberline_goldbachinfo" xml:space="preserve">
    <value>(Jede gerade Zahl &gt; 2 kann als Summe von 2 Primzahlen geschrieben werden.)</value>
  </data>
  <data name="numberline_header" xml:space="preserve">
    <value>Hier erhalten Sie zahlentheoretische Aussagen zu den auf der Zahlengeraden angezeigten Zahlen.
Auf der Zahlengeraden kann ein Intervall der Breite zwischen 10 und 90 Zahlen angezeigt werden. Die Intervallbreite wird mit dem Schieberegler festgelegt, indem die Obergrenze angepasst wird.</value>
  </data>
  <data name="numberline_headercoutprimes" xml:space="preserve">
    <value>Anzahl der Primzahlen im ausgewählten Bereich</value>
  </data>
  <data name="numberline_isodd" xml:space="preserve">
    <value>Die Goldbach-Vermutung gilt nur für gerade Zahlen. {0} ist ungerade.</value>
  </data>
  <data name="numberline_isprime" xml:space="preserve">
    <value>ist eine Primzahl</value>
  </data>
  <data name="numberline_isquadtrupletprime" xml:space="preserve">
    <value>({0}, {1}, {2}, {3}) ist ein Primzahlvierling.</value>
  </data>
  <data name="numberline_issixtupletprime" xml:space="preserve">
    <value>({0}, {1}, {2}, {3}, {4}, {5}) ist ein Primzahlsechsling.</value>
  </data>
  <data name="numberline_istwinprime" xml:space="preserve">
    <value>({0}, {1}) ist ein Primzahlzwilling.</value>
  </data>
  <data name="numberline_maxinterval" xml:space="preserve">
    <value>Die Untergrenze des Intervalls beträgt 2, die Obergrenze 10^9. Mit den Pfeilen können Sie das ganze Intervall in Einer- und Zehnerschritten nach links oder rechts schieben.</value>
  </data>
  <data name="numberline_nextprime" xml:space="preserve">
    <value>Nächstgrößere Primzahl</value>
  </data>
  <data name="numberline_nexttwinprime" xml:space="preserve">
    <value>Der nächstgrößere Primzahlzwilling ist ({0},{1}).</value>
  </data>
  <data name="numberline_numberofprimeinterval" xml:space="preserve">
    <value>Anzahl der Primzahlen im ausgewählten Bereich ({0}, {1})</value>
  </data>
  <data name="numberline_numberofprimes" xml:space="preserve">
    <value>Anzahl der Primzahlen &lt;= n</value>
  </data>
  <data name="numberline_pointsdisplayed" xml:space="preserve">
    <value>Intervallbreite</value>
  </data>
  <data name="numberline_priorprime" xml:space="preserve">
    <value>Nächstkleinere Primzahl</value>
  </data>
  <data name="numberline_priortwinprime" xml:space="preserve">
    <value>Der nächstkleinere Primzahlzwilling ist ({0},{1}).</value>
  </data>
  <data name="numberline_progress" xml:space="preserve">
    <value>Fortschritt</value>
  </data>
  <data name="numberline_quadtuplet" xml:space="preserve">
    <value>Primzahlvierlinge</value>
  </data>
  <data name="numberline_rhoinfo" xml:space="preserve">
    <value>Die Summe der Teiler der aktuellen Zahl {0} beträgt {1}.</value>
  </data>
  <data name="numberline_sixtuplet" xml:space="preserve">
    <value>Primzahlsechslinge</value>
  </data>
  <data name="numberline_tauinfo" xml:space="preserve">
    <value>{0} Teiler zur aktuellen Zahl {1} gefunden.</value>
  </data>
  <data name="numberline_to" xml:space="preserve">
    <value>bis</value>
  </data>
  <data name="numberline_tooltipscrollleft" xml:space="preserve">
    <value>Verringert den Bereich in 1-er Schritten</value>
  </data>
  <data name="numberline_tooltipscrollleftfast" xml:space="preserve">
    <value>Verringert den Bereich in 10-er Schritten</value>
  </data>
  <data name="numberline_tooltipscrollright" xml:space="preserve">
    <value>Erhöht den Bereich in 1-er Schritten</value>
  </data>
  <data name="numberline_tooltipscrollrightfast" xml:space="preserve">
    <value>Erhöht den Bereich in 10-er Schritten</value>
  </data>
  <data name="numberline_twinprime" xml:space="preserve">
    <value>Primzahlzwillinge</value>
  </data>
  <data name="tabitemgoldbach" xml:space="preserve">
    <value>Goldbach-Vermutung</value>
  </data>
  <data name="tabitemnumbergrid" xml:space="preserve">
    <value>Zahlengitter</value>
  </data>
  <data name="tabitemnumberline" xml:space="preserve">
    <value>Zahlengerade</value>
  </data>
  <data name="tabitemulam" xml:space="preserve">
    <value>Ulam-Spirale</value>
  </data>
  <data name="ulam_btnCancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="ulam_btnExecute" xml:space="preserve">
    <value>Ausführen</value>
  </data>
  <data name="ulam_input" xml:space="preserve">
    <value>Start- und Endwert der Spirale</value>
  </data>
  <data name="ulam_rotate" xml:space="preserve">
    <value>Drehnung: </value>
  </data>
  <data name="ulam_zoom" xml:space="preserve">
    <value>Die Spirale zoomen</value>
  </data>
  <data name="tabitemgraph" xml:space="preserve">
    <value>Anzahl der Primzahlen</value>
  </data>
  <data name="ulam_calculating" xml:space="preserve">
    <value>Spirale wird berechnet</value>
  </data>
  <data name="ulam_validatorrangemessage" xml:space="preserve">
    <value>Der Abstand zwischen "von" und "bis" muss mindestens {0} und höchstens {1} sein.</value>
  </data>
  <data name="numberline_goldbachfoundsum" xml:space="preserve">
    <value>{0} Primzahlsumme für die aktuelle Zahl {1} gefunden.</value>
  </data>
  <data name="numberline_istwo" xml:space="preserve">
    <value>Die Goldbach-Vermutung gilt nur für gerade Zahlen &gt; 2.</value>
  </data>
</root>