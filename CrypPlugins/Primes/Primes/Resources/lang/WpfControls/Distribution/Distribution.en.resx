<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="graph_btnResume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="graph_btnStop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="graph_contextmenucopy" xml:space="preserve">
    <value>copy</value>
  </data>
  <data name="graph_gausscountinfo" xml:space="preserve">
    <value>Number of primes according to the Prime Number Theorem:</value>
  </data>
  <data name="graph_gausscountinfoCalculating" xml:space="preserve">
    <value>Calculating the number of primes according to the Prime Number Theorem:</value>
  </data>
  <data name="graph_gaussname" xml:space="preserve">
    <value>Prime Number Theorem</value>
  </data>
  <data name="graph_groupboxheader" xml:space="preserve">
    <value>Available functions for calculating the number of primes Y in a given range X</value>
  </data>
  <data name="graph_lincountinfo" xml:space="preserve">
    <value>Number of primes according to the logarithmic integral:</value>
  </data>
  <data name="graph_lincountinfoCalculating" xml:space="preserve">
    <value>Calculating the number of primes according to the logarithmic integral:</value>
  </data>
  <data name="graph_linname" xml:space="preserve">
    <value>The logarithmic integral</value>
  </data>
  <data name="graph_pincountinfo" xml:space="preserve">
    <value>The actual number of primes is:</value>
  </data>
  <data name="graph_pincountinfoCalculating" xml:space="preserve">
    <value>Calclulating the actual number of primes:</value>
  </data>
  <data name="graph_pinlimitinfo" xml:space="preserve">
    <value>The exact step function is only displayed for values smaller than 10.000. All bigger values are merely calculated and printed here.</value>
  </data>
  <data name="graph_pinname" xml:space="preserve">
    <value>Exact step function π</value>
  </data>
  <data name="graph_validatorrangemessage" xml:space="preserve">
    <value>The difference between "from" and "to" must be at least {0}.</value>
  </data>
  <data name="numbergrid_actualnumber" xml:space="preserve">
    <value>current number</value>
  </data>
  <data name="numbergrid_btnExecute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="numbergrid_height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="numbergrid_input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="numbergrid_scroll" xml:space="preserve">
    <value>Scroll rowwise in the number grid</value>
  </data>
  <data name="numbergrid_start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="numbergrid_tooltipscrolldown" xml:space="preserve">
    <value>Click here to scroll down one row.</value>
  </data>
  <data name="numbergrid_tooltipscrolldownfast" xml:space="preserve">
    <value>Click here to scroll down two rows.</value>
  </data>
  <data name="numbergrid_tooltipscrollup" xml:space="preserve">
    <value>Click here to scroll up one row.</value>
  </data>
  <data name="numbergrid_tooltipscrollupfast" xml:space="preserve">
    <value>Click here to scroll up two rows.</value>
  </data>
  <data name="numbergrid_width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="numbergrid_zoom" xml:space="preserve">
    <value>Zoom the number grid</value>
  </data>
  <data name="numberline_actualnumber" xml:space="preserve">
    <value>Current number n =</value>
  </data>
  <data name="numberline_calculating" xml:space="preserve">
    <value>(calculating)</value>
  </data>
  <data name="numberline_cancelcalculations" xml:space="preserve">
    <value>Cancel calculations</value>
  </data>
  <data name="numberline_countprimesgauss" xml:space="preserve">
    <value>The number of primes according to the estimate of Gauss' prime number theorem is {0}.</value>
  </data>
  <data name="numberline_countprimespin" xml:space="preserve">
    <value>The actual number of primes in this range is {0}.</value>
  </data>
  <data name="numberline_divcount" xml:space="preserve">
    <value>Number of divisors</value>
  </data>
  <data name="numberline_divsum" xml:space="preserve">
    <value>Sum of the divisors</value>
  </data>
  <data name="numberline_eulerphi" xml:space="preserve">
    <value>Euler's φ-function</value>
  </data>
  <data name="numberline_eulerphifoundresult" xml:space="preserve">
    <value>Found {0} coprime numbers for the current number {1}.</value>
  </data>
  <data name="numberline_eulerphiisprime" xml:space="preserve">
    <value>{0} is a prime. Therefore the number of coprime numbers to {1} is {2} - 1 = {3}.</value>
  </data>
  <data name="numberline_eulerphimaxlines" xml:space="preserve">
    <value>Only the first {0} of {1} values are displayed.</value>
  </data>
  <data name="numberline_eulerphisum" xml:space="preserve">
    <value>Sum of divisor totients</value>
  </data>
  <data name="numberline_eulerphisuminfo" xml:space="preserve">
    <value>For the current number {0} the formula evaluates to {1}.</value>
  </data>
  <data name="numberline_eulerphisumlog" xml:space="preserve">
    <value>φ({0}) = {1}</value>
  </data>
  <data name="numberline_factorization" xml:space="preserve">
    <value>Factorization</value>
  </data>
  <data name="numberline_factorizationcalculating" xml:space="preserve">
    <value>(calculating factorization)</value>
  </data>
  <data name="numberline_from" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="numberline_goldbach" xml:space="preserve">
    <value>Goldbach's conjecture</value>
  </data>
  <data name="numberline_goldbachdesc" xml:space="preserve">
    <value>y(n) is the number of ways that the number n can be expressed as the sum of two prime numbers. Example: 10 = 3 + 7 and 10 = 5 + 5, thus y(10)=2.</value>
  </data>
  <data name="numberline_goldbachfoundsum" xml:space="preserve">
    <value>Found {0} prime number sum for the current number {1}.</value>
  </data>
  <data name="numberline_goldbachfoundsums" xml:space="preserve">
    <value>Found {0} prime number sums for the current number {1}.</value>
  </data>
  <data name="numberline_goldbachinfo" xml:space="preserve">
    <value>(Every even number &gt; 2 can be expressed as a sum of 2 prime numbers.)</value>
  </data>
  <data name="numberline_goldbachmaxlines" xml:space="preserve">
    <value>Only the first {0} sums are displayed.</value>
  </data>
  <data name="numberline_goldbachsum" xml:space="preserve">
    <value>sum</value>
  </data>
  <data name="numberline_goldbachsums" xml:space="preserve">
    <value>sums</value>
  </data>
  <data name="numberline_header" xml:space="preserve">
    <value>Here you get some number-theoretic statements for the numbers on the number line. The number line can display 10 to 90 numbers. You can adjust the range with the slider, which determines the upper limit of the range.</value>
  </data>
  <data name="numberline_headercoutprimes" xml:space="preserve">
    <value>Number of primes in the selected range</value>
  </data>
  <data name="numberline_insidetwinprime" xml:space="preserve">
    <value>{0} lies inside the twin prime ({1}, {2}).</value>
  </data>
  <data name="numberline_isodd" xml:space="preserve">
    <value>The Goldbach conjecture only holds for even numbers. {0} is odd.</value>
  </data>
  <data name="numberline_isprime" xml:space="preserve">
    <value>is prime</value>
  </data>
  <data name="numberline_isquadtrupletprime" xml:space="preserve">
    <value>({0}, {1}, {2}, {3}) is a prime quadruplet.</value>
  </data>
  <data name="numberline_issixtupletprime" xml:space="preserve">
    <value>({0}, {1}, {2}, {3}, {4}, {5}) is a prime sixtuplet.</value>
  </data>
  <data name="numberline_istwinprime" xml:space="preserve">
    <value>({0}, {1}) is a prime twin.</value>
  </data>
  <data name="numberline_istwo" xml:space="preserve">
    <value>The Goldbach conjecture only holds for even numbers &gt; 2.</value>
  </data>
  <data name="numberline_maxinterval" xml:space="preserve">
    <value>The lower boundary of the interval is 2, the upper boundary is 10^9. With the arrow keys, you can move left and right through the interval in steps of size 1 or 10.</value>
  </data>
  <data name="numberline_nextprime" xml:space="preserve">
    <value>Next bigger prime number</value>
  </data>
  <data name="numberline_nexttwinprime" xml:space="preserve">
    <value>The next bigger twin prime is ({0}, {1}).</value>
  </data>
  <data name="numberline_numberofprimeinterval" xml:space="preserve">
    <value>Number of primes in the selected range ({0}, {1})</value>
  </data>
  <data name="numberline_numberofprimes" xml:space="preserve">
    <value>Number of primes &lt;= n</value>
  </data>
  <data name="numberline_pointsdisplayed" xml:space="preserve">
    <value>number of points displayed</value>
  </data>
  <data name="numberline_priorprime" xml:space="preserve">
    <value>Next smaller prime number</value>
  </data>
  <data name="numberline_priortwinprime" xml:space="preserve">
    <value>The next smaller twin prime is ({0}, {1}).</value>
  </data>
  <data name="numberline_progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="numberline_quadtuplet" xml:space="preserve">
    <value>Prime quadruplets</value>
  </data>
  <data name="numberline_rhoinfo" xml:space="preserve">
    <value>The sum of the divisors of the current number {0} is {1}.</value>
  </data>
  <data name="numberline_sixtuplet" xml:space="preserve">
    <value>Prime sixtuplet</value>
  </data>
  <data name="numberline_tauinfo" xml:space="preserve">
    <value>Found {0} divisors for the current number {1}.</value>
  </data>
  <data name="numberline_to" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="numberline_tooltipdecrange" xml:space="preserve">
    <value>Reduce range to at least 10 numbers</value>
  </data>
  <data name="numberline_tooltipincrange" xml:space="preserve">
    <value>Increase range to at most 90 numbers</value>
  </data>
  <data name="numberline_tooltipscrollleft" xml:space="preserve">
    <value>Reduce range in increments of 1</value>
  </data>
  <data name="numberline_tooltipscrollleftfast" xml:space="preserve">
    <value>Reduce range in increments of 10</value>
  </data>
  <data name="numberline_tooltipscrollright" xml:space="preserve">
    <value>Increase range in increments of 1</value>
  </data>
  <data name="numberline_tooltipscrollrightfast" xml:space="preserve">
    <value>Increase range in increments of 10</value>
  </data>
  <data name="numberline_twinprime" xml:space="preserve">
    <value>Twin primes</value>
  </data>
  <data name="tabitemgoldbach" xml:space="preserve">
    <value>Goldbach's conjecture</value>
  </data>
  <data name="tabitemgraph" xml:space="preserve">
    <value>Number of primes</value>
  </data>
  <data name="tabitemnumbergrid" xml:space="preserve">
    <value>Number grid</value>
  </data>
  <data name="tabitemnumberline" xml:space="preserve">
    <value>Number line</value>
  </data>
  <data name="tabitemulam" xml:space="preserve">
    <value>Ulam's spiral</value>
  </data>
  <data name="ulam_btnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ulam_btnExecute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="ulam_calculating" xml:space="preserve">
    <value>Calculating the spiral </value>
  </data>
  <data name="ulam_input" xml:space="preserve">
    <value>Beginning and end of the spiral</value>
  </data>
  <data name="ulam_rotate" xml:space="preserve">
    <value>Rotation: </value>
  </data>
  <data name="ulam_validatorrangemessage" xml:space="preserve">
    <value>The difference between "from" and "to" must be at least {0} and at most {1}.</value>
  </data>
  <data name="ulam_zoom" xml:space="preserve">
    <value>Zoom the spiral</value>
  </data>
</root>