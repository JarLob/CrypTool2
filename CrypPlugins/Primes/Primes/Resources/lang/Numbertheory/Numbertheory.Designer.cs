//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Primes.Resources.lang.Numbertheory {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Numbertheory {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Numbertheory() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Primes.Resources.lang.Numbertheory.Numbertheory", typeof(Numbertheory).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save whole table to file ähnelt.
        /// </summary>
        public static string copy_savetable {
            get {
                return ResourceManager.GetString("copy_savetable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy selected row to clipboard ähnelt.
        /// </summary>
        public static string copy_selectedrow {
            get {
                return ResourceManager.GetString("copy_selectedrow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy whole table to clipboard ähnelt.
        /// </summary>
        public static string copy_table {
            get {
                return ResourceManager.GetString("copy_table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Euler&apos;s totient function ähnelt.
        /// </summary>
        public static string eulerphi {
            get {
                return ResourceManager.GetString("eulerphi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sum of divisor totients ähnelt.
        /// </summary>
        public static string eulerphisum {
            get {
                return ResourceManager.GetString("eulerphisum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List of coprimes ähnelt.
        /// </summary>
        public static string eulerphivalues {
            get {
                return ResourceManager.GetString("eulerphivalues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extended Euclidean algorithm ähnelt.
        /// </summary>
        public static string exteuclid {
            get {
                return ResourceManager.GetString("exteuclid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Greatest common divisor ähnelt.
        /// </summary>
        public static string gcd {
            get {
                return ResourceManager.GetString("gcd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die y(n) is the number of ways that the number n can be expressed as the sum of two prime numbers. Example: 10 = 3 + 7 and 10 = 5 + 5, thus y(10)=2. ähnelt.
        /// </summary>
        public static string goldbach_desc {
            get {
                return ResourceManager.GetString("goldbach_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die sum ähnelt.
        /// </summary>
        public static string goldbach_sum {
            get {
                return ResourceManager.GetString("goldbach_sum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die sums ähnelt.
        /// </summary>
        public static string goldbach_sums {
            get {
                return ResourceManager.GetString("goldbach_sums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose functions ähnelt.
        /// </summary>
        public static string groupbox_choosefunctions {
            get {
                return ResourceManager.GetString("groupbox_choosefunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        public static string groupbox_input {
            get {
                return ResourceManager.GetString("groupbox_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} does not lie between {1} und {2} and is not evaluated further. ähnelt.
        /// </summary>
        public static string invalidnumber {
            get {
                return ResourceManager.GetString("invalidnumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Least common multiple ähnelt.
        /// </summary>
        public static string lcm {
            get {
                return ResourceManager.GetString("lcm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modular multiplicative inverse ähnelt.
        /// </summary>
        public static string modinv {
            get {
                return ResourceManager.GetString("modinv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of primes ähnelt.
        /// </summary>
        public static string pix {
            get {
                return ResourceManager.GetString("pix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Base ähnelt.
        /// </summary>
        public static string powermod_base {
            get {
                return ResourceManager.GetString("powermod_base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string powermod_btncancel {
            get {
                return ResourceManager.GetString("powermod_btncancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Execute ähnelt.
        /// </summary>
        public static string powermod_btnexecute {
            get {
                return ResourceManager.GetString("powermod_btnexecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next step ähnelt.
        /// </summary>
        public static string powermod_btnnextstep {
            get {
                return ResourceManager.GetString("powermod_btnnextstep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resume ähnelt.
        /// </summary>
        public static string powermod_btnresume {
            get {
                return ResourceManager.GetString("powermod_btnresume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die anti-clockwise ähnelt.
        /// </summary>
        public static string powermod_ccw {
            get {
                return ResourceManager.GetString("powermod_ccw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die clockwise ähnelt.
        /// </summary>
        public static string powermod_cw {
            get {
                return ResourceManager.GetString("powermod_cw", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cycle contains duplicate values. ähnelt.
        /// </summary>
        public static string powermod_cycle_duplicate_values {
            get {
                return ResourceManager.GetString("powermod_cycle_duplicate_values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cycle length: {0} ähnelt.
        /// </summary>
        public static string powermod_cycle_length {
            get {
                return ResourceManager.GetString("powermod_cycle_length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}.	{1}^{2} mod {3} = {4} ähnelt.
        /// </summary>
        public static string powermod_execution {
            get {
                return ResourceManager.GetString("powermod_execution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exponent ähnelt.
        /// </summary>
        public static string powermod_exponent {
            get {
                return ResourceManager.GetString("powermod_exponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input parameter ähnelt.
        /// </summary>
        public static string powermod_inputgroupbox {
            get {
                return ResourceManager.GetString("powermod_inputgroupbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max. Base ähnelt.
        /// </summary>
        public static string powermod_max_base {
            get {
                return ResourceManager.GetString("powermod_max_base", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max. Exponent ähnelt.
        /// </summary>
        public static string powermod_max_exponent {
            get {
                return ResourceManager.GetString("powermod_max_exponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modulus ähnelt.
        /// </summary>
        public static string powermod_modulus {
            get {
                return ResourceManager.GetString("powermod_modulus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Point order ähnelt.
        /// </summary>
        public static string powermod_points {
            get {
                return ResourceManager.GetString("powermod_points", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Progress ähnelt.
        /// </summary>
        public static string powermod_progress {
            get {
                return ResourceManager.GetString("powermod_progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die automatic execution ähnelt.
        /// </summary>
        public static string powermod_rbautomatic {
            get {
                return ResourceManager.GetString("powermod_rbautomatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: Typical parameters for RSA: (N, e) = (33, 3), (55, 7), (143, 23) ähnelt.
        /// </summary>
        public static string powermod_rsa_description {
            get {
                return ResourceManager.GetString("powermod_rsa_description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die stepwise execution ähnelt.
        /// </summary>
        public static string powermod_stepwise {
            get {
                return ResourceManager.GetString("powermod_stepwise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zoom ähnelt.
        /// </summary>
        public static string powermod_zoom {
            get {
                return ResourceManager.GetString("powermod_zoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string proot_btnCancel {
            get {
                return ResourceManager.GetString("proot_btnCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Execute ähnelt.
        /// </summary>
        public static string proot_btnExecute {
            get {
                return ResourceManager.GetString("proot_btnExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip current calculation ähnelt.
        /// </summary>
        public static string proot_btnSkipCalculation {
            get {
                return ResourceManager.GetString("proot_btnSkipCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculating the roots... ähnelt.
        /// </summary>
        public static string proot_calculating {
            get {
                return ResourceManager.GetString("proot_calculating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate primes ähnelt.
        /// </summary>
        public static string proot_genprimes {
            get {
                return ResourceManager.GetString("proot_genprimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        public static string proot_input {
            get {
                return ResourceManager.GetString("proot_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter a number ähnelt.
        /// </summary>
        public static string proot_insert {
            get {
                return ResourceManager.GetString("proot_insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not a prime. ähnelt.
        /// </summary>
        public static string proot_noprime {
            get {
                return ResourceManager.GetString("proot_noprime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No primes were found in the given interval(s). ähnelt.
        /// </summary>
        public static string proot_noprimes {
            get {
                return ResourceManager.GetString("proot_noprimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} is not a number between {1} and {2}.  ähnelt.
        /// </summary>
        public static string proot_novalidnumber {
            get {
                return ResourceManager.GetString("proot_novalidnumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Printing... ähnelt.
        /// </summary>
        public static string proot_printing {
            get {
                return ResourceManager.GetString("proot_printing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Progress ähnelt.
        /// </summary>
        public static string proot_progress {
            get {
                return ResourceManager.GetString("proot_progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter the interval boundaries. ähnelt.
        /// </summary>
        public static string proot_rangeboth {
            get {
                return ResourceManager.GetString("proot_rangeboth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter the interval boundaries. The number {0} is interpreted as the lower boundary of a closed interval, the upper boundary is still missing. ähnelt.
        /// </summary>
        public static string proot_rangedown {
            get {
                return ResourceManager.GetString("proot_rangedown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please enter the interval boundaries. The number {0} is interpreted as the upper boundary of a closed interval, the lower boundary is still missing. ähnelt.
        /// </summary>
        public static string proot_rangeupper {
            get {
                return ResourceManager.GetString("proot_rangeupper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        public static string proot_result {
            get {
                return ResourceManager.GetString("proot_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has {1} primitive root ähnelt.
        /// </summary>
        public static string proot_resultcalc {
            get {
                return ResourceManager.GetString("proot_resultcalc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} has {1} primitive roots ähnelt.
        /// </summary>
        public static string proot_resultscalc {
            get {
                return ResourceManager.GetString("proot_resultscalc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The calculation was skipped. ähnelt.
        /// </summary>
        public static string proot_skip {
            get {
                return ResourceManager.GetString("proot_skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning: The interval {0} contains big numbers for which the calculation may take some time. ähnelt.
        /// </summary>
        public static string proot_warningbiginterval {
            get {
                return ResourceManager.GetString("proot_warningbiginterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning: For big numbers like {0} the calculation may take some time. ähnelt.
        /// </summary>
        public static string proot_warningbignumber {
            get {
                return ResourceManager.GetString("proot_warningbignumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The first number of the interval {0} has to be smaller than the second. ähnelt.
        /// </summary>
        public static string proot_wronginterval {
            get {
                return ResourceManager.GetString("proot_wronginterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You selected a function that requires the second parameter. ähnelt.
        /// </summary>
        public static string secondparametermissing {
            get {
                return ResourceManager.GetString("secondparametermissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sum of divisors ähnelt.
        /// </summary>
        public static string sigma {
            get {
                return ResourceManager.GetString("sigma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Goldbach&apos;s conjecture ähnelt.
        /// </summary>
        public static string tabitemheader_goldbach {
            get {
                return ResourceManager.GetString("tabitemheader_goldbach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number-theoretic functions ähnelt.
        /// </summary>
        public static string tabitemheader_ntfunctions {
            get {
                return ResourceManager.GetString("tabitemheader_ntfunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Powering (iterating exponent) ähnelt.
        /// </summary>
        public static string tabitemheader_power {
            get {
                return ResourceManager.GetString("tabitemheader_power", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Powering (iterating base)(RSA) ähnelt.
        /// </summary>
        public static string tabitemheader_powerBase {
            get {
                return ResourceManager.GetString("tabitemheader_powerBase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Primitive roots ähnelt.
        /// </summary>
        public static string tabitemheader_proots {
            get {
                return ResourceManager.GetString("tabitemheader_proots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of divisors ähnelt.
        /// </summary>
        public static string tau {
            get {
                return ResourceManager.GetString("tau", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List of divisors ähnelt.
        /// </summary>
        public static string tauvalues {
            get {
                return ResourceManager.GetString("tauvalues", resourceCulture);
            }
        }
    }
}
