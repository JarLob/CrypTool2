//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace T_310.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("T_310.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bit selector ähnelt.
        /// </summary>
        internal static string BitSelectorCaption {
            get {
                return ResourceManager.GetString("BitSelectorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Most significant bits ähnelt.
        /// </summary>
        internal static string BitSelectorList1 {
            get {
                return ResourceManager.GetString("BitSelectorList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Least significant bits ähnelt.
        /// </summary>
        internal static string BitSelectorList2 {
            get {
                return ResourceManager.GetString("BitSelectorList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose if the most or least significant bits of certain vectors should be used ähnelt.
        /// </summary>
        internal static string BitSelectorTooltip {
            get {
                return ResourceManager.GetString("BitSelectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Both keys are even. Odd keys are required. Check the documentation for more information. ähnelt.
        /// </summary>
        internal static string ErrorBothKeysEvenParity {
            get {
                return ResourceManager.GetString("ErrorBothKeysEvenParity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Both keys have an incorrect length, provide 15 byte (120 bit) keys at both connectors. Both of these keys have to have an odd parity. ähnelt.
        /// </summary>
        internal static string ErrorBothKeysLength {
            get {
                return ResourceManager.GetString("ErrorBothKeysLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No keys connected, provide 15 byte (120 bit) keys at both connectors. Both these keys have to have an odd parity. ähnelt.
        /// </summary>
        internal static string ErrorBothKeysNull {
            get {
                return ResourceManager.GetString("ErrorBothKeysNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After converting the message into CCITT-2 character encoding, no characters of the messages were left. (The message consists completely of invalid characters) ähnelt.
        /// </summary>
        internal static string ErrorEmptyConversion {
            get {
                return ResourceManager.GetString("ErrorEmptyConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &quot;magic number bytes&quot; of the message header were invalid (It consists of 4 byte 0x19, 25 bytes inizialization vector and 4 byte 0x0F) ähnelt.
        /// </summary>
        internal static string ErrorHeaderBytes {
            get {
                return ResourceManager.GetString("ErrorHeaderBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The message header is invalid. (It consists of 4 byte 0x19, 25 bytes inizialization vector and 4 byte 0x0F). The 4 byte at the beginning 0x19 and 0x0F at the end were valid. ähnelt.
        /// </summary>
        internal static string ErrorHeaderIntegrity {
            get {
                return ResourceManager.GetString("ErrorHeaderIntegrity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message header could not be parsed, it is too short. Required Length: {0}; Given Length: {1} ähnelt.
        /// </summary>
        internal static string ErrorHeaderLength {
            get {
                return ResourceManager.GetString("ErrorHeaderLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input connector is empty, no action can be performed. ähnelt.
        /// </summary>
        internal static string ErrorInputEmpty {
            get {
                return ResourceManager.GetString("ErrorInputEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No input connected, please connect a byte[] as input. ähnelt.
        /// </summary>
        internal static string ErrorInputNull {
            get {
                return ResourceManager.GetString("ErrorInputNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The parity of Key {0} is even. An odd key is required. Check the documentation for more information. ähnelt.
        /// </summary>
        internal static string ErrorKeyEvenParity {
            get {
                return ResourceManager.GetString("ErrorKeyEvenParity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key {0} needs to be exactly 15 bytes long (120 bits). The given Key {0} is {1} bytes long. ähnelt.
        /// </summary>
        internal static string ErrorKeyLength {
            get {
                return ResourceManager.GetString("ErrorKeyLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key {0} is not connected, provide a 15 byte (120 bit) key with an odd parity. ähnelt.
        /// </summary>
        internal static string ErrorKeyNull {
            get {
                return ResourceManager.GetString("ErrorKeyNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There were {0} unconvertable characters in the given message ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableBeginningPlural {
            get {
                return ResourceManager.GetString("ErrorUnconvertableBeginningPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There was {0} unconvertable character in the given message ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableBeginningSingular {
            get {
                return ResourceManager.GetString("ErrorUnconvertableBeginningSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ; they were truncated before encrypting. ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableEndPlural {
            get {
                return ResourceManager.GetString("ErrorUnconvertableEndPlural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ; it was truncated before encrypting. ähnelt.
        /// </summary>
        internal static string ErrorUnconvertableEndSingular {
            get {
                return ResourceManager.GetString("ErrorUnconvertableEndSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input data ähnelt.
        /// </summary>
        internal static string InputDataCaption {
            get {
                return ResourceManager.GetString("InputDataCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter plaintext (for encryption) or ciphertext (for decryption) ähnelt.
        /// </summary>
        internal static string InputDataTooltip {
            get {
                return ResourceManager.GetString("InputDataTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subkey 1 ähnelt.
        /// </summary>
        internal static string InputKeyCaption1 {
            get {
                return ResourceManager.GetString("InputKeyCaption1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Subkey 2 ähnelt.
        /// </summary>
        internal static string InputKeyCaption2 {
            get {
                return ResourceManager.GetString("InputKeyCaption2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a T-310 subkey as binary data. It needs to be exactly 120 bits (15 bytes) long and its parity must be odd. ähnelt.
        /// </summary>
        internal static string InputKeyTooltip1 {
            get {
                return ResourceManager.GetString("InputKeyTooltip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a T-310 subkey as binary data. It needs to be exactly 120 bits (15 bytes) long and its parity must be odd. ähnelt.
        /// </summary>
        internal static string InputKeyTooltip2 {
            get {
                return ResourceManager.GetString("InputKeyTooltip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 14 ähnelt.
        /// </summary>
        internal static string Key14 {
            get {
                return ResourceManager.GetString("Key14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 15 ähnelt.
        /// </summary>
        internal static string Key15 {
            get {
                return ResourceManager.GetString("Key15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 16 ähnelt.
        /// </summary>
        internal static string Key16 {
            get {
                return ResourceManager.GetString("Key16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 17 ähnelt.
        /// </summary>
        internal static string Key17 {
            get {
                return ResourceManager.GetString("Key17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 21 ähnelt.
        /// </summary>
        internal static string Key21 {
            get {
                return ResourceManager.GetString("Key21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 26 ähnelt.
        /// </summary>
        internal static string Key26 {
            get {
                return ResourceManager.GetString("Key26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 29 ähnelt.
        /// </summary>
        internal static string Key29 {
            get {
                return ResourceManager.GetString("Key29", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 30 ähnelt.
        /// </summary>
        internal static string Key30 {
            get {
                return ResourceManager.GetString("Key30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 31 ähnelt.
        /// </summary>
        internal static string Key31 {
            get {
                return ResourceManager.GetString("Key31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 32 ähnelt.
        /// </summary>
        internal static string Key32 {
            get {
                return ResourceManager.GetString("Key32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key 33 ähnelt.
        /// </summary>
        internal static string Key33 {
            get {
                return ResourceManager.GetString("Key33", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term key ähnelt.
        /// </summary>
        internal static string LongTermKeyCaption {
            get {
                return ResourceManager.GetString("LongTermKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Long term keys were special permutations used in the T-310 block cipher (Wurmreihe D-W). They were fixed to the machine, but could be changed. ähnelt.
        /// </summary>
        internal static string LongTermKeyTooltip {
            get {
                return ResourceManager.GetString("LongTermKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action ähnelt.
        /// </summary>
        internal static string ModeCaption {
            get {
                return ResourceManager.GetString("ModeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt ähnelt.
        /// </summary>
        internal static string ModeList1 {
            get {
                return ResourceManager.GetString("ModeList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt ähnelt.
        /// </summary>
        internal static string ModeList2 {
            get {
                return ResourceManager.GetString("ModeList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want the input data to be encrypted or decrypted? ähnelt.
        /// </summary>
        internal static string ModeTooltip {
            get {
                return ResourceManager.GetString("ModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output data ähnelt.
        /// </summary>
        internal static string OutputDataCaption {
            get {
                return ResourceManager.GetString("OutputDataCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resulting ciphertext (when encrypting) or plaintext (when decrypting) ähnelt.
        /// </summary>
        internal static string OutputDataTooltip {
            get {
                return ResourceManager.GetString("OutputDataTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die T-310 ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Historic Cipher Machine used by German Democratic Republic ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version of the T-310 ähnelt.
        /// </summary>
        internal static string VersionCaption {
            get {
                return ResourceManager.GetString("VersionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die T-310/50 telex encryption ähnelt.
        /// </summary>
        internal static string VersionList1 {
            get {
                return ResourceManager.GetString("VersionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die T-310/51 data encryption ähnelt.
        /// </summary>
        internal static string VersionList2 {
            get {
                return ResourceManager.GetString("VersionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Die T310 was available in the models T-310/50 und T-310/51. Version 50 can only decrypt CCITT-2 encoded characters; version 51 any data.  ähnelt.
        /// </summary>
        internal static string VersionTooltip {
            get {
                return ResourceManager.GetString("VersionTooltip", resourceCulture);
            }
        }
    }
}
