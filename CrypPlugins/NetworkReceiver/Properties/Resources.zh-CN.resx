<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmountLabel" xml:space="preserve">
    <value>收到的包裹：</value>
  </data>
  <data name="IPFromHeader" xml:space="preserve">
    <value>源IP地址</value>
  </data>
  <data name="MetaLabel" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="PackageLimitCaption" xml:space="preserve">
    <value>包装限制</value>
  </data>
  <data name="PackageLimitTooltip" xml:space="preserve">
    <value>指示将停止组件的软件包数量。 0表示“不停止”。</value>
  </data>
  <data name="PaylodHeader" xml:space="preserve">
    <value>收到资料</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>网络接收器</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>接收通过网络发送的数据包</value>
  </data>
  <data name="PortCaption" xml:space="preserve">
    <value>港口</value>
  </data>
  <data name="PortTooltip" xml:space="preserve">
    <value>组件将侦听的端口</value>
  </data>
  <data name="ReceivedPackagesLabel" xml:space="preserve">
    <value>收到包裹</value>
  </data>
  <data name="SingleOutputCaption" xml:space="preserve">
    <value>单包</value>
  </data>
  <data name="SingleOutputTooltip" xml:space="preserve">
    <value>单个数据包的数据</value>
  </data>
  <data name="StartLabel" xml:space="preserve">
    <value>开始时间：</value>
  </data>
  <data name="StopConditions" xml:space="preserve">
    <value>停止条件</value>
  </data>
  <data name="StreamOutputCaption" xml:space="preserve">
    <value>最新包</value>
  </data>
  <data name="StreamOutputTooltip" xml:space="preserve">
    <value>转发最后收到的数据包。</value>
  </data>
  <data name="TimeLimitCaption" xml:space="preserve">
    <value>时限</value>
  </data>
  <data name="TimeLimitTooltip" xml:space="preserve">
    <value>指示组件将停止的秒数。 0表示“不停止”。</value>
  </data>
  <data name="TORHeader" xml:space="preserve">
    <value>在收到</value>
  </data>
  <data name="UniqueIPLabel" xml:space="preserve">
    <value>资料来源：</value>
  </data>
  <data name="DeviceIpCaption" xml:space="preserve">
    <value>网络设备IP地址</value>
  </data>
  <data name="DeviceIpTooltip" xml:space="preserve">
    <value>输入网络设备的IP地址，使其仅从该设备接收。</value>
  </data>
  <data name="LisPort" xml:space="preserve">
    <value>港口：</value>
  </data>
  <data name="NetworkConditionsGroup" xml:space="preserve">
    <value>网络设置</value>
  </data>
  <data name="NetworkDeviceCaption" xml:space="preserve">
    <value>使用所有网络接口</value>
  </data>
  <data name="NetworkDeviceTooltip" xml:space="preserve">
    <value>输入您的网络接口的IP地址，使其仅从该设备接收。</value>
  </data>
  <data name="ByteAsciiSwitchCaption" xml:space="preserve">
    <value>将字节显示为ASCII</value>
  </data>
  <data name="ByteAsciiSwitchTooltip" xml:space="preserve">
    <value>将字节显示为ASCII</value>
  </data>
  <data name="PresentationSettingsGroup" xml:space="preserve">
    <value>介绍</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>尺寸</value>
  </data>
  <data name="ProtocolCaption" xml:space="preserve">
    <value>协议</value>
  </data>
  <data name="ProtocolTooltip" xml:space="preserve">
    <value>更改协议类型</value>
  </data>
  <data name="SpeedrateLabel" xml:space="preserve">
    <value>接收率：</value>
  </data>
  <data name="updateSpeedrateLable" xml:space="preserve">
    <value>更新接收速率间隔：</value>
  </data>
  <data name="updateSpeedrateTooltip" xml:space="preserve">
    <value>设置更新接收速率的时间（以秒为单位）。</value>
  </data>
  <data name="NumberOfClientsCaption" xml:space="preserve">
    <value>客户限额</value>
  </data>
  <data name="NumberOfClientsTooltip" xml:space="preserve">
    <value>设置最大客户端连接数。 0表示“无限制”。</value>
  </data>
  <data name="TCPServerConditionsGroup" xml:space="preserve">
    <value>TCP条件</value>
  </data>
  <data name="ConnectionIDInputCaption" xml:space="preserve">
    <value>连接输入</value>
  </data>
  <data name="ConnectionIDInputTooltip" xml:space="preserve">
    <value>指定接收方应在哪个连接上侦听</value>
  </data>
  <data name="ConnectionIDOutputCaption" xml:space="preserve">
    <value>连接输出</value>
  </data>
  <data name="ConnectionIDOutputTooltip" xml:space="preserve">
    <value>显示当前连接的ID</value>
  </data>
  <data name="ConnectionCaption" xml:space="preserve">
    <value>仅使用连接输入</value>
  </data>
  <data name="ConnectionTooltip" xml:space="preserve">
    <value>该组件将不会创建新的连接。它将仅使用在连接输入上指定的连接。</value>
  </data>
</root>