//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NetworkReceiver.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NetworkReceiver.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received Packages: ähnelt.
        /// </summary>
        internal static string AmountLabel {
            get {
                return ResourceManager.GetString("AmountLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die show bytes as ASCII ähnelt.
        /// </summary>
        internal static string ByteAsciiSwitchCaption {
            get {
                return ResourceManager.GetString("ByteAsciiSwitchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die show bytes as ASCII ähnelt.
        /// </summary>
        internal static string ByteAsciiSwitchTooltip {
            get {
                return ResourceManager.GetString("ByteAsciiSwitchTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only use Connection Input ähnelt.
        /// </summary>
        internal static string ConnectionCaption {
            get {
                return ResourceManager.GetString("ConnectionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection Input ähnelt.
        /// </summary>
        internal static string ConnectionIDInputCaption {
            get {
                return ResourceManager.GetString("ConnectionIDInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies on which connection the Receiver should listen ähnelt.
        /// </summary>
        internal static string ConnectionIDInputTooltip {
            get {
                return ResourceManager.GetString("ConnectionIDInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connection Output ähnelt.
        /// </summary>
        internal static string ConnectionIDOutputCaption {
            get {
                return ResourceManager.GetString("ConnectionIDOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shows the ID of the current connection ähnelt.
        /// </summary>
        internal static string ConnectionIDOutputTooltip {
            get {
                return ResourceManager.GetString("ConnectionIDOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The component will not create a new connection. It will only use the connection specified on the connection input. ähnelt.
        /// </summary>
        internal static string ConnectionTooltip {
            get {
                return ResourceManager.GetString("ConnectionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network device IP Address ähnelt.
        /// </summary>
        internal static string DeviceIpCaption {
            get {
                return ResourceManager.GetString("DeviceIpCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the IP address of your network device to only receive from this device. ähnelt.
        /// </summary>
        internal static string DeviceIpTooltip {
            get {
                return ResourceManager.GetString("DeviceIpTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source IP Address ähnelt.
        /// </summary>
        internal static string IPFromHeader {
            get {
                return ResourceManager.GetString("IPFromHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port: ähnelt.
        /// </summary>
        internal static string LisPort {
            get {
                return ResourceManager.GetString("LisPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Info ähnelt.
        /// </summary>
        internal static string MetaLabel {
            get {
                return ResourceManager.GetString("MetaLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Settings ähnelt.
        /// </summary>
        internal static string NetworkConditionsGroup {
            get {
                return ResourceManager.GetString("NetworkConditionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use all network interfaces ähnelt.
        /// </summary>
        internal static string NetworkDeviceCaption {
            get {
                return ResourceManager.GetString("NetworkDeviceCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the IP address of your network interface to only receive from this device. ähnelt.
        /// </summary>
        internal static string NetworkDeviceTooltip {
            get {
                return ResourceManager.GetString("NetworkDeviceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Client limit ähnelt.
        /// </summary>
        internal static string NumberOfClientsCaption {
            get {
                return ResourceManager.GetString("NumberOfClientsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sets the maximum number of client connections. 0 means &quot;no limit&quot;. ähnelt.
        /// </summary>
        internal static string NumberOfClientsTooltip {
            get {
                return ResourceManager.GetString("NumberOfClientsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Package limit ähnelt.
        /// </summary>
        internal static string PackageLimitCaption {
            get {
                return ResourceManager.GetString("PackageLimitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates the amount of packages after which the component will stop. 0 means &quot;don&apos;t stop&quot;. ähnelt.
        /// </summary>
        internal static string PackageLimitTooltip {
            get {
                return ResourceManager.GetString("PackageLimitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received Data ähnelt.
        /// </summary>
        internal static string PaylodHeader {
            get {
                return ResourceManager.GetString("PaylodHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Network Receiver ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Receives packets sent over a network ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port ähnelt.
        /// </summary>
        internal static string PortCaption {
            get {
                return ResourceManager.GetString("PortCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Port on which the component will listen ähnelt.
        /// </summary>
        internal static string PortTooltip {
            get {
                return ResourceManager.GetString("PortTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Presentation ähnelt.
        /// </summary>
        internal static string PresentationSettingsGroup {
            get {
                return ResourceManager.GetString("PresentationSettingsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Protocol ähnelt.
        /// </summary>
        internal static string ProtocolCaption {
            get {
                return ResourceManager.GetString("ProtocolCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changes the protocol type ähnelt.
        /// </summary>
        internal static string ProtocolTooltip {
            get {
                return ResourceManager.GetString("ProtocolTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received Packages ähnelt.
        /// </summary>
        internal static string ReceivedPackagesLabel {
            get {
                return ResourceManager.GetString("ReceivedPackagesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Single Packet ähnelt.
        /// </summary>
        internal static string SingleOutputCaption {
            get {
                return ResourceManager.GetString("SingleOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data of a single packet ähnelt.
        /// </summary>
        internal static string SingleOutputTooltip {
            get {
                return ResourceManager.GetString("SingleOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        internal static string Size {
            get {
                return ResourceManager.GetString("Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Receiving Rate: ähnelt.
        /// </summary>
        internal static string SpeedrateLabel {
            get {
                return ResourceManager.GetString("SpeedrateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Time: ähnelt.
        /// </summary>
        internal static string StartLabel {
            get {
                return ResourceManager.GetString("StartLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stop Conditions ähnelt.
        /// </summary>
        internal static string StopConditions {
            get {
                return ResourceManager.GetString("StopConditions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Latest Packet ähnelt.
        /// </summary>
        internal static string StreamOutputCaption {
            get {
                return ResourceManager.GetString("StreamOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forwards the last received packet. ähnelt.
        /// </summary>
        internal static string StreamOutputTooltip {
            get {
                return ResourceManager.GetString("StreamOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TCP Conditions ähnelt.
        /// </summary>
        internal static string TCPServerConditionsGroup {
            get {
                return ResourceManager.GetString("TCPServerConditionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Time Limit ähnelt.
        /// </summary>
        internal static string TimeLimitCaption {
            get {
                return ResourceManager.GetString("TimeLimitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates the number of seconds after which the component will stop. 0 means &quot;don&apos;t stop&quot;. ähnelt.
        /// </summary>
        internal static string TimeLimitTooltip {
            get {
                return ResourceManager.GetString("TimeLimitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Received at ähnelt.
        /// </summary>
        internal static string TORHeader {
            get {
                return ResourceManager.GetString("TORHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sources: ähnelt.
        /// </summary>
        internal static string UniqueIPLabel {
            get {
                return ResourceManager.GetString("UniqueIPLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die update receiving rate intervall: ähnelt.
        /// </summary>
        internal static string updateSpeedrateLable {
            get {
                return ResourceManager.GetString("updateSpeedrateLable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sets the time in seconds in which the receiving rate will be updated. ähnelt.
        /// </summary>
        internal static string updateSpeedrateTooltip {
            get {
                return ResourceManager.GetString("updateSpeedrateTooltip", resourceCulture);
            }
        }
    }
}
