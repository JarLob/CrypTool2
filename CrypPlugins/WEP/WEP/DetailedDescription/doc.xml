<?xml version="1.0" encoding="utf-8" ?>

<documentation>
  <language culture="en"/>
  <language culture="de-DE"/>

  <introduction lang="en">
    This WEP component allows you to encrypt or decrypt the input data according to the Wired Equivalent Privacy (WEP) protocol.
    Developed and published by the Institute of Electrical and Electronics Engineers (IEEE) in 1999, the WEP protocol was the first
    protocol for security matters within a Wireless Local Area Network (WLAN). The main features are encryption and decryption of
    transmitted packets and an Integrity Check Value (ICV) which is used to detect transmission errors within the packets.<newline/>
      <newline/>
        According to the protocol a key is used which consists of either 5, 13 or 29 bytes. In the WEP component there are only key sizes of 5 and 13 bytes supported. This key is called RootKey (RK). The RK is concatenated with a packet individual Initialization Vector(IV) consisting of 3 bytes.
        So the key K, which is in fact used to encrypt or decrypt a packet i is:
      <newline/>
    <newline/>
    K of packet i = (IV of packet i || RK)<newline/>
    <newline/>
    The packets are encrypted / decrypted with the RC4 algorithm, a simple stream cipher algorithm.<newline/>
    <newline/>
    The user can choose if the component is going to encrypt or to decrypt.<newline/>
    <newline/>
    If the packets are going to be encrypted an individual ICV is computed for each packet. This is called Cyclic Redundancy Check (CRC) and it is
    based on a polynomial division with a well defined 32 bit polynom. The result is a checksum of 32 bit which protects the packet
    against transmission errors but not against manipulation. This checksum is added to the packet and then the packet will be encrypted.
    This step is missing within the decryption. Instead, the ICV is removed from the packet. In a real world scenario the receiver of a packet
    would compute the ICV himself again and compare the two ICVs. If they are not equal the packet would be requested from the sender again.
  </introduction>

  <introduction lang="de-DE">
    Die WEP-Komponente ermöglicht es, die Eingabedaten entsprechend des "Wired Equivalent Privacy Protovol" (WEP-Protokoll) zu ver- oder entschlüsseln.
    Entwickelt und veröffentlicht vom "Institute of Electrical and Electronics Engineering (IEEE) im Jahr 1999, war das WEP-protocol das erste Protokoll
    für Sicherheit innerhalb eines Drahlosen Netzwerkes (WLAN). Die hauptsächlichen Aufgaben sind das Ver- und Entschlüsseln von übertragenen
    Paketen und ein "Integrity Check Value" (ICV), welcher verwendet wird, um Übertragungsfehler innerhalb des Pakets zu entdecken. <newline/>
    <newline/>
    Je nach Protokoll wird ein Schlüssel benötigt, welcher aus 5, 13, oder 29 bytes bestehen kann. In der WEP-Komponente kann nur ein Schlüssel mit einer Größe von 5 und 13 bytes genutzt werden. Dieser Schlüssel wird RootKey genannt (RK). Der RootKey wird mit einem individuellen Initialisierungsvektor (IV), welcher aus 3 bytes besteht, konkateniert.
    Das bedeutet, dass der Schlüssel K, welcher tatsächlich ein Paket i ent- oder verschlüsselt, folgendermaßen lautet:
    <newline/>
    <newline/>
    K von Paket i = (IV of packet i || RK)<newline/>
    <newline/>
    Die Pakete werden verschlüsselt/ entschlüsselt mit dem RC4 Algorithmus, ein einfacher Stromverschlüsselungsalgorithmus.<newline/>
    <newline/>
    Der Benutzer kann auswählen, ob die Komponente ver- oder entschlüsseln soll.<newline/>
    <newline/>
    Wenn die Pakete verschlüsselt werden, wird ein individueller ICV für jedes Paket berechnet. Das wird als "Cyclic Redundancy Check" (CRC) bezeichnet
    und basiert auf einer Polynomdivision mit einem definierten 32 bit Polynom. Das Ergebnis gibt eine Prüfsumme von 32 bit, welche das Paket zwar vor Übertragungsfehlern schützt, aber nicht vor Manipulation. Diese Checksumme wird dem Paket hinzugefügt und anschließend wird alles verschlüsselt. Dieser
    Schritt wird bei der Entschlüsselung nicht durchgeführt. An Stelle dessen wird der ICV vom Paket entfernt. In der realen Welt würde der Empfänger
    den ICV ebenfalls bestimmen und mit dem empfangenen vergleichen. Wären beide ICVs nicht gleich würde das Paket verworfen und neu vom Sender angefordert.
  </introduction>

  <usage lang="en">
    To use the WEP component the user has to put it onto the workspace. A 40bit key has to be provided. The WEP component offers to encrypt or to
    decrypt packets which have to be provided using an CryptoolStream. To generate test packets an IFrame Generator component is suitable. Depending
    on the users choice to encrypt or to decrypt the WEP component delivers encrypted or decrypted packets using the provided key.
  </usage>

  <usage lang="de-DE">
    Um die WEP-Komponente zu verwenden muss der Benutzer diese auf den Arbeitsplatz ziehen. Ein 40bit Schlüssel muss angegeben werden. Die WEP Komponente bietet
    die Möglichkeit Pakete zu ver- oder entschlüsseln, welche durch einen CryptoolStream geliefert werden. Um WEP Pakete zu generieren bietet sich der IFRame Generator an.
    Abhängig von der Wahl des Benutzers liefert die WEP Komponente verschlüsselte oder entschlüsselte WEP Pakete unter Nutzung des angegeben Schlüssels.
  </usage>
  
  <presentation lang="en">
    The plugin offers no special presentation.
  </presentation>
  
  <presentation lang="de-DE">
    Das Plugin bietet keine spezielle Präsentation an.
  </presentation>
  
  <references>
    <linkReference id="wikipedia">
      <link url="http://en.wikipedia.org/wiki/Wired_Equivalent_Privacy" lang="en" />
      <caption lang="en">WEP (Wikipedia)</caption>
      <link url="http://de.wikipedia.org/wiki/Wired_Equivalent_Privacy" lang="de-DE" />
      <caption lang="de-DE">WEP (Wikipedia)</caption>
    </linkReference>
  </references>
</documentation>