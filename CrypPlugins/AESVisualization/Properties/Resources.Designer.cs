//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AESVisualization.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AESVisualization.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Key ähnelt.
        /// </summary>
        internal static string addKeyButton {
            get {
                return ResourceManager.GetString("addKeyButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The round key is added to the current state by XORing the bytes. ähnelt.
        /// </summary>
        internal static string addKeyExplanation {
            get {
                return ResourceManager.GetString("addKeyExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto ähnelt.
        /// </summary>
        internal static string autoButton {
            get {
                return ResourceManager.GetString("autoButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back ähnelt.
        /// </summary>
        internal static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext ähnelt.
        /// </summary>
        internal static string Ciphertext {
            get {
                return ResourceManager.GetString("Ciphertext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip Expansion ähnelt.
        /// </summary>
        internal static string encButton {
            get {
                return ResourceManager.GetString("encButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 3 ähnelt.
        /// </summary>
        internal static string encryptionIntro {
            get {
                return ResourceManager.GetString("encryptionIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption ähnelt.
        /// </summary>
        internal static string encryptionIntro1 {
            get {
                return ResourceManager.GetString("encryptionIntro1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption ähnelt.
        /// </summary>
        internal static string encTextBlock {
            get {
                return ResourceManager.GetString("encTextBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End ähnelt.
        /// </summary>
        internal static string endButton {
            get {
                return ResourceManager.GetString("endButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First, the last four bytes of the previous key are taken. Afterwards, the last byte is placed at the front. ähnelt.
        /// </summary>
        internal static string expansionExplanation {
            get {
                return ResourceManager.GetString("expansionExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Every byte is exchanged with the corresponding byte from the S-box. ähnelt.
        /// </summary>
        internal static string expansionExplanation1 {
            get {
                return ResourceManager.GetString("expansionExplanation1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A round constant is added. ähnelt.
        /// </summary>
        internal static string expansionExplanation2 {
            get {
                return ResourceManager.GetString("expansionExplanation2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adding the first four bytes of the previous key gives you the first four bytes of the next key. ähnelt.
        /// </summary>
        internal static string expansionExplanation3 {
            get {
                return ResourceManager.GetString("expansionExplanation3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For column x of the new key you XOR column x from the previous key with column x-1 from the new key. ähnelt.
        /// </summary>
        internal static string expansionExplanation4 {
            get {
                return ResourceManager.GetString("expansionExplanation4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 ähnelt.
        /// </summary>
        internal static string expansionIntro {
            get {
                return ResourceManager.GetString("expansionIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key Expansion ähnelt.
        /// </summary>
        internal static string expansionIntro1 {
            get {
                return ResourceManager.GetString("expansionIntro1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To Expansion ähnelt.
        /// </summary>
        internal static string expButton {
            get {
                return ResourceManager.GetString("expButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expansion ähnelt.
        /// </summary>
        internal static string expTextBlock {
            get {
                return ResourceManager.GetString("expTextBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial Round ähnelt.
        /// </summary>
        internal static string initialRoundTextBlock {
            get {
                return ResourceManager.GetString("initialRoundTextBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the key used for the encryption ähnelt.
        /// </summary>
        internal static string inputKeyDescription {
            get {
                return ResourceManager.GetString("inputKeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key input ähnelt.
        /// </summary>
        internal static string inputKeyName {
            get {
                return ResourceManager.GetString("inputKeyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the text that is to be encrypted ähnelt.
        /// </summary>
        internal static string inputTextDescription {
            get {
                return ResourceManager.GetString("inputTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text input ähnelt.
        /// </summary>
        internal static string inputTextName {
            get {
                return ResourceManager.GetString("inputTextName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 ähnelt.
        /// </summary>
        internal static string intro {
            get {
                return ResourceManager.GetString("intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Intro ähnelt.
        /// </summary>
        internal static string intro1 {
            get {
                return ResourceManager.GetString("intro1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Encryption Standard ähnelt.
        /// </summary>
        internal static string introduction {
            get {
                return ResourceManager.GetString("introduction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (AES) ähnelt.
        /// </summary>
        internal static string introduction1 {
            get {
                return ResourceManager.GetString("introduction1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visualization of this modern block cipher ähnelt.
        /// </summary>
        internal static string introduction2 {
            get {
                return ResourceManager.GetString("introduction2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Intro ähnelt.
        /// </summary>
        internal static string IntroText {
            get {
                return ResourceManager.GetString("IntroText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES is a modern block cipher.  AES takes two inputs: 
        ///the plaintext that is to be encrypted and a key.  After the encryption AES outputs the ciphertext. ähnelt.
        /// </summary>
        internal static string introTextBlock {
            get {
                return ResourceManager.GetString("introTextBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES starts with the &quot;Key Expansion&quot; in which round keys are derived from the original key. 
        ///
        ///After the expansion an initial round takes place, in which the original key is applied to the plaintext. 
        ///
        ///Depending on the key length the algorithm will go through 9, 11, or 13 rounds. Each round consists of the four operations: &quot;SubBytes&quot;, &quot;ShiftRow&quot;, &quot;MixColumns&quot;, and &quot;AddRoundKey&quot;. 
        ///
        ///Once these rounds are completed one last round is performed, which has no &quot;MixColumn&quot; step. ähnelt.
        /// </summary>
        internal static string introTextBlock1 {
            get {
                return ResourceManager.GetString("introTextBlock1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keysize ähnelt.
        /// </summary>
        internal static string KeysizeCaption {
            get {
                return ResourceManager.GetString("KeysizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the size of the key. ähnelt.
        /// </summary>
        internal static string KeysizeTooltip {
            get {
                return ResourceManager.GetString("KeysizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string KeyText {
            get {
                return ResourceManager.GetString("KeyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mix Col. ähnelt.
        /// </summary>
        internal static string mixColButton {
            get {
                return ResourceManager.GetString("mixColButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One column is taken from the current state and placed next to the multiplication matrix. ähnelt.
        /// </summary>
        internal static string mixColExplanation {
            get {
                return ResourceManager.GetString("mixColExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Then it is multiplied with the multiplication matrix to determine the next column of the next state. ähnelt.
        /// </summary>
        internal static string mixColExplanation1 {
            get {
                return ResourceManager.GetString("mixColExplanation1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text output ähnelt.
        /// </summary>
        internal static string OutputStreamCaption {
            get {
                return ResourceManager.GetString("OutputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the ciphertext ähnelt.
        /// </summary>
        internal static string OutputStreamTooltip {
            get {
                return ResourceManager.GetString("OutputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        internal static string Plaintext {
            get {
                return ResourceManager.GetString("Plaintext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        internal static string playButton {
            get {
                return ResourceManager.GetString("playButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES Visualization ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visualization of AES encryption ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prev. Operation ähnelt.
        /// </summary>
        internal static string prevOperationButton {
            get {
                return ResourceManager.GetString("prevOperationButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prev. Round ähnelt.
        /// </summary>
        internal static string prevRoundButton {
            get {
                return ResourceManager.GetString("prevRoundButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        internal static string resultTextBlock {
            get {
                return ResourceManager.GetString("resultTextBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 1 ähnelt.
        /// </summary>
        internal static string Round1 {
            get {
                return ResourceManager.GetString("Round1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 10 ähnelt.
        /// </summary>
        internal static string Round10 {
            get {
                return ResourceManager.GetString("Round10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 11 ähnelt.
        /// </summary>
        internal static string Round11 {
            get {
                return ResourceManager.GetString("Round11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 12 ähnelt.
        /// </summary>
        internal static string Round12 {
            get {
                return ResourceManager.GetString("Round12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round13 ähnelt.
        /// </summary>
        internal static string Round13 {
            get {
                return ResourceManager.GetString("Round13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round14 ähnelt.
        /// </summary>
        internal static string Round14 {
            get {
                return ResourceManager.GetString("Round14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 2 ähnelt.
        /// </summary>
        internal static string Round2 {
            get {
                return ResourceManager.GetString("Round2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 3 ähnelt.
        /// </summary>
        internal static string Round3 {
            get {
                return ResourceManager.GetString("Round3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 4 ähnelt.
        /// </summary>
        internal static string Round4 {
            get {
                return ResourceManager.GetString("Round4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 5 ähnelt.
        /// </summary>
        internal static string Round5 {
            get {
                return ResourceManager.GetString("Round5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 6 ähnelt.
        /// </summary>
        internal static string Round6 {
            get {
                return ResourceManager.GetString("Round6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 7 ähnelt.
        /// </summary>
        internal static string Round7 {
            get {
                return ResourceManager.GetString("Round7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 8 ähnelt.
        /// </summary>
        internal static string Round8 {
            get {
                return ResourceManager.GetString("Round8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 9 ähnelt.
        /// </summary>
        internal static string Round9 {
            get {
                return ResourceManager.GetString("Round9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;&lt; ähnelt.
        /// </summary>
        internal static string shiftLeftButton {
            get {
                return ResourceManager.GetString("shiftLeftButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &gt;&gt; ähnelt.
        /// </summary>
        internal static string shiftRightButton {
            get {
                return ResourceManager.GetString("shiftRightButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shift Row ähnelt.
        /// </summary>
        internal static string shiftRowButton {
            get {
                return ResourceManager.GetString("shiftRowButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First, the second row is shifted once to the left. Then, the third row is shifted twice towards the left, and finally the forth row is shifted three times to the left. The overlapping bytes are transferred to the right to form a 4 x 4 matrix. ähnelt.
        /// </summary>
        internal static string shiftRowExplanation {
            get {
                return ResourceManager.GetString("shiftRowExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip Operation  ähnelt.
        /// </summary>
        internal static string skipOperationButton {
            get {
                return ResourceManager.GetString("skipOperationButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip Round ähnelt.
        /// </summary>
        internal static string skipRoundButton {
            get {
                return ResourceManager.GetString("skipRoundButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        internal static string startButton {
            get {
                return ResourceManager.GetString("startButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sub Bytes ähnelt.
        /// </summary>
        internal static string subBytesButton {
            get {
                return ResourceManager.GetString("subBytesButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die First, a byte is transferred from the state matrix to the transition spot and split up. ähnelt.
        /// </summary>
        internal static string subBytesExplanation {
            get {
                return ResourceManager.GetString("subBytesExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The corresponding byte in the S-box is determined and placed into the result matrix. ähnelt.
        /// </summary>
        internal static string subBytesExplanation1 {
            get {
                return ResourceManager.GetString("subBytesExplanation1", resourceCulture);
            }
        }
    }
}
