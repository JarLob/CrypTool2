//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormatPreservingEncryption.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FormatPreservingEncryption.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation ähnelt.
        /// </summary>
        internal static string ActionCaption {
            get {
                return ResourceManager.GetString("ActionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Operation ähnelt.
        /// </summary>
        internal static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Algorithm ähnelt.
        /// </summary>
        internal static string AlgorithmCaption {
            get {
                return ResourceManager.GetString("AlgorithmCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alogrithm ähnelt.
        /// </summary>
        internal static string AlgorithmTooltip {
            get {
                return ResourceManager.GetString("AlgorithmTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alphabet ähnelt.
        /// </summary>
        internal static string AlphabetCaption {
            get {
                return ResourceManager.GetString("AlphabetCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Alphabet. ähnelt.
        /// </summary>
        internal static string AlphabetTooltip {
            get {
                return ResourceManager.GetString("AlphabetTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key size must be 128bit. ähnelt.
        /// </summary>
        internal static string ErrorKey {
            get {
                return ResourceManager.GetString("ErrorKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mode not supported. ähnelt.
        /// </summary>
        internal static string ErrorMode {
            get {
                return ResourceManager.GetString("ErrorMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        internal static string InputCaption {
            get {
                return ResourceManager.GetString("InputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Input as string. ähnelt.
        /// </summary>
        internal static string InputTooltip {
            get {
                return ResourceManager.GetString("InputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string KeyCaption {
            get {
                return ResourceManager.GetString("KeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The 128bit Key. ähnelt.
        /// </summary>
        internal static string KeyTooltip {
            get {
                return ResourceManager.GetString("KeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log ähnelt.
        /// </summary>
        internal static string LogCaption {
            get {
                return ResourceManager.GetString("LogCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Log. ähnelt.
        /// </summary>
        internal static string LogTooltip {
            get {
                return ResourceManager.GetString("LogTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mode ähnelt.
        /// </summary>
        internal static string ModeCaption {
            get {
                return ResourceManager.GetString("ModeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mode ähnelt.
        /// </summary>
        internal static string ModeTooltip {
            get {
                return ResourceManager.GetString("ModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output ähnelt.
        /// </summary>
        internal static string OutputCaption {
            get {
                return ResourceManager.GetString("OutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Output as string. ähnelt.
        /// </summary>
        internal static string OutputTooltip {
            get {
                return ResourceManager.GetString("OutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass the value of &quot;Input&quot; to the &quot;Output&quot;. ähnelt.
        /// </summary>
        internal static string PassPlaintextCaption {
            get {
                return ResourceManager.GetString("PassPlaintextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This option can be used in XML mode to create a diff of the XML document. ähnelt.
        /// </summary>
        internal static string PassPlaintextTooltip {
            get {
                return ResourceManager.GetString("PassPlaintextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format Preserving Encryption. ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provides the FF1, FF2, FF3 and DFF encryption standards. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tweak ähnelt.
        /// </summary>
        internal static string TweakCaption {
            get {
                return ResourceManager.GetString("TweakCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tweak Radix ähnelt.
        /// </summary>
        internal static string TweakRadixCaption {
            get {
                return ResourceManager.GetString("TweakRadixCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Tweak Radix in range [1 ; 256]. ähnelt.
        /// </summary>
        internal static string TweakRadixTooltip {
            get {
                return ResourceManager.GetString("TweakRadixTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The Tweak. ähnelt.
        /// </summary>
        internal static string TweakTooltip {
            get {
                return ResourceManager.GetString("TweakTooltip", resourceCulture);
            }
        }
    }
}
