<?xml version="1.0" encoding="utf-8" ?>

<documentation>
  <language culture="en"/>
  <language culture="de-DE"/>

  <introduction lang="en">    
      SDES (Simplified Data Encryption Standard) is a simplified algorithm similar to DES. It has been developed for educational purposes.
      Compared to DES it is more easily possible to implement the algorithm.
      SDES needs a key length of 10 bits for encryption and decryption.
      Like DES the SDES algorithm is symmetric &#8211; this means the same key is used for en- and for decryption.
      SDES can be easily broken by using a brute-force attack, because of its very small key space (2^10 = 1024 possible keys).
  </introduction>

  <introduction lang="de-DE">    
      SDES (Simplified Data Encryption Standard) ist ein sehr einfacher Algorithmus, der DES ähnelt. Er wurde für Lehr- und Lernzwecke entwickelt. Verglichen mit DES ist es sehr einfach, den Algorithmus zu implementieren.
      SDES braucht einen Schlüssel der Länge 10-Bit für die Ver- und Entschlüsselung. Genau wie sein Vorbild DES ist SDES ein symmetrischer Algorithmus.
      Das bedeutet, dass derselbe Schlüssel für die Ver- und Entschlüsselung gebraucht wird.
      SDES kann, aufgrund seines geringen Schlüsselraums (2^10 = 1024 mögliche Schlüssel), sehr einfach mit Hilfe von Brute-Force-Angriffen gebrochen werden.
  </introduction>

  <usage lang="en">
    This component enables the user to choose between electronic code book (ECB), cipher block chaining (CBC), cipher feedback (CFB) and output feedback (OFB) for en- and decryption of texts.
    SDES needs two streams for en-/decryption (one as input and the other as output). It also needs a key of 10 bit length (here represented as text containing only '1' and '0');
    for example '1110011010'. Finally an initialization vector IV of 8 bit is needed (also represented as text containing only '1' and '0'); for example '10010010'.
    The component will not work if the key length or IV length is wrong (indicated by an error message). The key and IV have to be byte arrays.
    <newline/>
    Drag the SDES component to your workspace and connect the data input with some data source (like a text output component).
    Additionally, connect the key input with a string source, that contains the key as binary '0' and '1' representation.
    Optionally, you can also connect a data source containing an initialization vector to the IV input.
    By clicking on the SDES component, you get access to its settings (on the right side).
    There you can choose whether you want to encrypt or to decrypt and which chaining mode you wish to use.
  </usage>

  <usage lang="de-DE">
    Mit dieser Komponente kann man bei der Ver- und Entschlüsselung wählen, ob als Verkettungsmodus "Electronic Code Book" (ECB), "Cipher Block Chaining" (CBC), "Cipher Feedback" (CFB) oder "Output Feedback" (OFB) benutzt wird.
    SDES benötigt zwei Datenströme für die Ver- und Entschlüsselung (einen für die Eingabedaten und einen für die Ausgabedaten).
    Außerdem wird ein 10-Bit-Schlüssel benötigt (repräsentiert durch eine Zeichenkette bestehend aus '1' und '0' Zeichen); z.B. '1110011010'.
    Abschließend wird ein Initialisierungsvektor der Länge 8-Bit benötigt (z.B. '10010010').
    Die Komponente funktioniert nur, falls die Längen von Schlüssel und Initialisierungsvektor korrekt sind.
    Als Schlüssel und Initialisierungsvektor werden zwei Byte-Arrays benötigt.
    <newline/>
    Ziehen Sie die SDES-Komponente auf ihren Arbeitsbereich und verbinden Sie den Dateneingang mit einer Datenquelle (wie zum Beispiel einer Textausgangskomponente).<newline/>
    Verbinden Sie zusätzlich den Schlüsseleingang mit einer Zeichenkettenquelle, welche den Schlüssel als binäre '0' und '1' Repräsentation beinhaltet.<newline/>
    Optional können Sie eine Datenquelle, welche den Initialisierungsvektor beinhaltet, mit dem IV-Eingang verbinden.<newline/>
    Mit einem Klick auf die SDES-Komponente erhalten Sie Zugang zu den Einstellungen der Komponente (auf der rechten Seite).
    Dort können Sie auswählen, ob Sie ent- oder verschlüsseln wollen und welchen Verkettungsmodus Sie einsetzen möchten.
  </usage>
  
  <presentation lang="en">
    By double-clicking on the icon of the SDES component in the CrypTool window, the user can enable the visualization of the SDES algorithm. 
    In this view, he/she is able to watch the flow of the bits through the whole algorithm. 
    The flow of each bit is represented by small lines (like wires) which lead from the input through the algorithm to the final output. 
    Each step is shown by a text box which contains the actual word produced by a subfunction of the SDES algorithm. 
    Each name of a subfunction can be seen at the right or left side of a text box. 
    On the right side of the visualization, the encryption stream can be seen. 
    The middle contains the sub-key generation visualization and on the right side, the decryption is visible. <newline/>
    The directions shown are: encryption from top to bottom, sub-key generation from top to bottom and decryption from bottom to top.
  </presentation>
  
  <presentation lang="de-DE">
    Durch Doppelklick auf die SDES-Komponente im CrypTool-Fenster können Sie die Visualisierung des SDES-Algorithmus aktivieren.
    In dieser Ansicht können Sie den Fluss der Bits durch den ganzen Algorithmus verfolgen.
    Der Fluss jedes Bits wird durch schmale Linien (vergleichbar mit Kabeln) repräsentiert, die von der Eingabe durch den Algorithmus zur finalen Ausgabe führen.
    Jeder Schritt wird von einer Textbox angezeigt, die das aktuelle Wort, welches von einer Unterfunktion des SDES-Algorithmus produziert wurde, anzeigt.
    Jeder Name einer Unterfunktion kann auf der rechten oder linken Seite einer Textbox eingesehen werden.
    Auf der rechten Seite der Visualisierung ist der Verschlüsselungsstrom sichtbar.
    Die Mitte beinhaltet die Visualisierung der Unterschlüssel-Generierung und auf der rechten Seite ist die Entschlüsselung sichtbar. <newline/>
    Die angezeigten Richtungen sind: Verschlüsselung von oben nach unten, Unterschlüssel-Generierung von oben nach unten und Entschlüsselung von unten nach oben.
  </presentation>
  
</documentation>
