<!--
    //<Auto-Generated>
    //This is here so CodeMaid doesn't reorganize this document.
    //</Auto-Generated>
-->
<ResourceDictionary x:Class="Cryptool.Plugins.ChaCha.ContentTemplate.Localization.de_DE"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:conv="clr-namespace:Cryptool.Plugins.ChaCha.Helper.Converter">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Styles\TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <conv:BitsToBytes x:Key="BitsToBytes" />
    <conv:ZeroBasedIndexToOneBasedIndex x:Key="ZeroBasedIndexToOneBasedIndex" />
    <conv:DoubleToPercentage x:Key="DoubleToPercentage" />
    <BooleanToVisibilityConverter x:Key="FalseToCollapsed" />
    <Style TargetType="{x:Type TextBox}" x:Key="DiffusionText" BasedOn="{StaticResource Text}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="OverviewCounter">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <TextBlock Text="{Binding Settings.Version.CounterBits, StringFormat=Schlüsselstromblockzähler ({0}-bit)}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="OverviewIV">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <TextBlock Text="{Binding Settings.Version.IVBits, StringFormat=Initialisierungsvektor ({0}-bit)}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="OverviewState13">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="ZÄHLER" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Settings.Version.IVBits}" Value="96">
                                        <Setter Property="Text" Value="IV" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="DiffusionStateLabel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <TextBox>
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DiffusionText}">
                                <Setter Property="Text" Value="Inaktiv" />
                                <Setter Property="Foreground" Value="Red" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DiffusionActive}" Value="True">
                                        <Setter Property="Text" Value="Aktiv" />
                                        <Setter Property="Foreground" Value="Green" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="StateMatrixDescription2">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <RichTextBox Visibility="{Binding Description[0], Converter={StaticResource FalseToCollapsed}}">
                        <FlowDocument>
                            <Paragraph>
                                Die ersten 16 Bytes bestehen aus den
                                <Run Background="Bisque" Text="Konstanten" />.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="StateMatrixDescription3">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <RichTextBox Visibility="{Binding Description[1], Converter={StaticResource FalseToCollapsed}}">
                        <FlowDocument>
                            <Paragraph>
                                Die nächsten 32 Bytes bestehen aus dem
                                <Run Background="LightCoral" Text="Schlüssel" />. Wenn der Schlüssel nur aus 16 Bytes besteht, wird er mit sich selbst verkettet.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="StateMatrixDescription4">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <RichTextBox Visibility="{Binding Description[2], Converter={StaticResource FalseToCollapsed}}">
                        <FlowDocument>
                            <Paragraph>
                                Die nächsten
                                <Run Text="{Binding Settings.Version.CounterBits, Converter={StaticResource BitsToBytes}, Mode=OneWay}" />
                                Bytes bestehen aus dem
                                <Run Background="SkyBlue" Text="Blockzähler" />.
                                Der Blockzähler ist speziell weil erst die Bytereihenfolge umgekehrt wird. Das ist so weil alle anderen Parameter bereits als in Little-Endian interpretiert werden und deshalb die Bytereihenfolge nicht umgekehrt werden muss.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="StateMatrixDescription5">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <RichTextBox Visibility="{Binding Description[3], Converter={StaticResource FalseToCollapsed}}">
                        <FlowDocument>
                            <Paragraph>
                                Die nächsten
                                <Run Text="{Binding Settings.Version.IVBits, Converter={StaticResource BitsToBytes}, Mode=OneWay}" />
                                Bytes bestehen aus dem
                                <Run Background="PaleGreen" Text="Initialisierungsvektor" />.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="ChaChaHashDescription1">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <RichTextBox>
                        <FlowDocument>
                            <Paragraph>
                                Um einen Schlüsselstromblock zu generieren verwenden wir die-ChaCha Hashfunktion. Die ChaCha-Hashfunktion besteht aus
                                <Run Text="{Binding Settings.Rounds, FallbackValue=R}" /> Runden.
                                <LineBreak />
                                Während jeder Runde benutzen wir die Viertelrunde-Funktion viermal (deshalb der Name
                                <Italic>Viertelrunde</Italic>). Sie modifiziert vier Einträge in der Zustandsmatrix. Das bedeutet das nach jeder Runde alle Einträge in der Zustandsmatrix verändert worden sind.
                                <LineBreak />
                                In einer ungeraden Runde (Runde 1, 3, ...) iterieren wir durch alle Spalten. Deshalb werden ungerade Runden auch
                                <Italic>Spaltenrunden</Italic> genannt. In einer geraden Runde (Runde 2, 4, ...) iterieren wir durch alle Diagonalen. Deshalb werden gerade Runden auch
                                <Italic>Diagonalrunden</Italic> genannt.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="ChaChaHashDescription2">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <RichTextBox>
                        <FlowDocument>
                            <Paragraph>
                                Links ist der aktuelle Zustand als Matrix zu sehen. Unten ist die Visualisierung der Viertelrunde-Funktion zu sehen. Sie besteht aus vier Schritten. Jeder Schritt modifiziert drei Werte mithilfe von Addition modulo 2<Run Typography.Variants="Superscript">32</Run>, XOR und einem zirkulären Linksshift.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="ChaChaHashDescription3">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <RichTextBox Visibility="{Binding Description[2], Converter={StaticResource FalseToCollapsed}}">
                        <FlowDocument>
                            <Paragraph>
                                Nach allen Runden addieren wir auf jeden Eintrag den Eintrag des originalen Zustands und kehren die Reihenfolge aller Bytes pro Eintrag um.
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="ChaChaHashKeystreamBlockLabel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <TextBox Style="{StaticResource Text}" Text="{Binding CurrentKeystreamBlockIndex, Converter={StaticResource ZeroBasedIndexToOneBasedIndex}, StringFormat='Ausgabe: Schlüsselstromblock {0}'}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="ChaChaHashFlippedBitsLabel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Geflippte Bits: {0}/{1} ({2})">
                                <Binding Path="DiffusionFlippedBits" />
                                <Binding Path="TotalBits" Mode="OneTime" />
                                <Binding Path="DiffusionFlippedBitsPercentage" Converter="{StaticResource DoubleToPercentage}" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContentControl}" x:Key="ReverseBytesStepLabel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="Bytes" />
                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="umdrehen" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>