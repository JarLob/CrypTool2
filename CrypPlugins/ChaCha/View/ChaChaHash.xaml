<UserControl x:Class="CrypTool.Plugins.ChaCha.View.ChaChaHash"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:conv="clr-namespace:CrypTool.Plugins.ChaCha.Helper.Converter"
             mc:Ignorable="d"
             Background="White"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\Styles\Index.xaml" />
                <ResourceDictionary Source="..\ContentTemplate\PageContentTemplate.xaml" />
                <ResourceDictionary Source="..\Localization\en_US.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <conv:UInt32ToHex x:Key="UInt32ToHex" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
            <conv:BooleanOr x:Key="BooleanOr" />
            <conv:DoubleToPercentage x:Key="DoubleToPercentage" />
            <conv:ZeroBasedIndexToOneBasedIndex x:Key="ZeroBasedIndexToOneBasedIndex" />
        </ResourceDictionary>
    </UserControl.Resources>
    <ContentControl Template="{StaticResource PageContentTemplate}" Name="Root">
        <Grid>
            <Grid.Resources>
                <Style TargetType="{x:Type Grid}" x:Key="MatrixVisualizationGrid">
                    <Setter Property="Visibility">
                        <Setter.Value>
                            <Binding Path="RoundsStep">
                                <Binding.Converter>
                                    <conv:SequentialValueConverter>
                                        <conv:Invert />
                                        <BooleanToVisibilityConverter />
                                    </conv:SequentialValueConverter>
                                </Binding.Converter>
                            </Binding>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type Border}" x:Key="MatrixVisualizationBorder" BasedOn="{StaticResource MatrixBorder}">
                    <Setter Property="Visibility">
                        <Setter.Value>
                            <Binding Path="RoundsStep">
                                <Binding.Converter>
                                    <conv:SequentialValueConverter>
                                        <conv:Invert />
                                        <BooleanToVisibilityConverter />
                                    </conv:SequentialValueConverter>
                                </Binding.Converter>
                            </Binding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="50*" />
                <RowDefinition Height="50*" />
                <RowDefinition Height="8*" />
            </Grid.RowDefinitions>

            <!-- #region Top Row -->
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <!--#region WORKAROUND FOR SCALING ISSUE: Top path as border -->
                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="1" Style="{StaticResource MatrixVisualizationBorder}" BorderThickness="0" Margin="0">
                        <Border Style="{StaticResource MatrixBorder}"  BorderBrush="Black" BorderThickness="0,2,2,0" Margin="20,0,0,0" />
                    </Border>
                    <Grid Grid.Row="1" Margin="20,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid Margin="0,10,0,0" Grid.Row="4">
                            <Viewbox HorizontalAlignment="Left" Style="{StaticResource UniformViewbox}" Visibility="{Binding DiffusionActive, Converter={StaticResource FalseToCollapsed}}">
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl Style="{DynamicResource ChaChaHashFlippedBitsLabel}" />
                                </StackPanel>
                            </Viewbox>
                        </Grid>
                    </Grid>
                </Grid>
                <!--#endregion-->

                <!--#region State Matrix -->
                <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" Grid.Column="0">
                    <Grid Grid.Row="0" Grid.Column="0" Name="StateMatrix">
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                <Setter Property="Background" Value="Red" />
                            </Style>
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState0" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR0" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState1" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR1" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState2" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR2" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState3" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR3" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState4" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR4" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState5" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR5" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState6" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR6" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState7" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR7" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState8" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR8" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState9" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR9" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState10" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR10" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState11" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR11" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState12" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR12" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState13" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR13" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState14" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR14" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding StateValues[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding StateValues[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionState15" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionStateXOR15" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>
                <!--#endregion-->

                <!--#region Description -->
                <Grid Grid.Column="1" Grid.ColumnSpan="2"  Name="DescriptionRoot">
                    <Viewbox Style="{StaticResource UniformViewbox}">
                        <Viewbox.Resources>
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource RichText}">
                                <Setter Property="Margin" Value="3" />
                                <Setter Property="Width" Value="{Binding ElementName=DescriptionRoot, Path=ActualWidth}" />
                            </Style>
                        </Viewbox.Resources>
                        <StackPanel Orientation="Vertical">
                            <ContentControl Style="{DynamicResource ChaChaHashDescription1}" />
                            <ContentControl Style="{DynamicResource ChaChaHashDescription2}" />
                            <ContentControl Style="{DynamicResource ChaChaHashDescription3}" />
                        </StackPanel>
                    </Viewbox>
                </Grid>

                <!--#endregion Description -->
            </Grid>
            <!--#endregion-->

            <!-- #region Middle row -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <!-- #region  Quarterround visualization -->
                <Grid Grid.ColumnSpan="3" Margin="0,5" Visibility="{Binding RoundsStep, Converter={StaticResource BooleanToVisibility}}">
                    <Viewbox Style="{StaticResource UniformViewbox}">
                        <Viewbox.Resources>
                            <Style x:Key="QRValue" TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style x:Key="QRDiffusionValue" TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                            <Style TargetType="{x:Type StackPanel}">
                                <Setter Property="Orientation" Value="Vertical" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                            <Style x:Key="QRValueBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                <Setter Property="Width" Value="65" />
                                <Setter Property="Height" Value="40" />
                            </Style>
                            <Style x:Key="QRValueRectangle" TargetType="{x:Type Rectangle}">
                                <Setter Property="Width" Value="65" />
                                <Setter Property="Height" Value="40" />
                                <Setter Property="Fill" Value="White" />
                            </Style>
                            <Style x:Key="QRStepRectangle" TargetType="{x:Type Rectangle}">
                                <Setter Property="Width" Value="300" />
                                <Setter Property="Height" Value="260" />
                                <Setter Property="StrokeThickness" Value="1" />
                                <Setter Property="Stroke" Value="Black" />
                            </Style>
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource UniformViewbox}" />
                        </Viewbox.Resources>
                        <Canvas Width="1500" Height="260">
                            <Canvas Canvas.Top="20">
                                <!-- Input cells -->
                                <Border Canvas.Left="00" Canvas.Top="0" Name="QRInABorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInA.Mark" />
                                                            <Binding Path="QRStep[0].Add.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInA.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInA" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInAXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="00" Canvas.Top="60" Name="QRInBBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInB.Mark" />
                                                            <Binding Path="QRStep[1].XOR.MarkInput" />
                                                            <Binding Path="QRStep[0].Add.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInB.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInB" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInBXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="00" Canvas.Top="120" Name="QRInCBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInC.Mark" />
                                                            <Binding Path="QRStep[1].Add.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInC.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInC" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInCXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="00" Canvas.Top="180" Name="QRInDBorder">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                            <Binding Path="QRInD.Mark" />
                                                            <Binding Path="QRStep[0].XOR.MarkInput" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRInD.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInD" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQRInDXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <!-- Output cells -->
                                <Border Canvas.Left="1435" Canvas.Top="0">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutA.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutA.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutA" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutAXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="1435" Canvas.Top="60">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutB.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutB.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutB" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutBXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="1435" Canvas.Top="120">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutC.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutC.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutC" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutCXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <Border Canvas.Left="1435" Canvas.Top="180">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutD.Mark}" Value="True">
                                                    <Setter Property="Background" Value="AliceBlue" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Viewbox>
                                        <StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QROutD.Value, Converter={StaticResource UInt32ToHex}}" />
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutD" />
                                            </StackPanel>
                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="DiffusionQROutDXOR" />
                                            </StackPanel>
                                        </StackPanel>
                                    </Viewbox>
                                </Border>
                                <!-- General paths (unnamed) -->
                                <Path Data="M 0,20 h 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 648 c 0 -10 20 -10 20 0 H 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 55" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 648 c 0 -10 20 -10 20 0 H 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}" />
                                <Path Data="M 0,20 h 1370" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}" />
                                <!-- Input paths (named) -->
                                <!-- First box -->
                                <Path Data="M 0,20 h 50 m 4,0 v 60 h -55 M 60,20 h 20" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[0].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 140 m 9,-10 v -170 h -10 M 159,20 h 5" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[0].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 229,20 h 5 m 20,0 h 5" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[0].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Second box -->
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 220 m 19,0 h 9 m -19, 0 v 60 h -64" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[1].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 139 c 0 -10 20 -10 20 0 h 314 m 19,0 h 6 m -15,10 v 50 h -10" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[1].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 563,20 h 5 m 20,0 h 5" Canvas.Left="65" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[1].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Third box -->
                                <Path Data="M -529,20 H 50 m 4,0 v 60 h -65 M 60,20 h 20" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}" Panel.ZIndex="0">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[2].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M -344,20 H 140 m 9,-10 v -170 h -10 M 159,20 h 5" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[2].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 229,20 h 5 m 20,0 h 5" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[2].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Fourth box -->
                                <Path Data="M -195,20 H 139 c 0 -10 20 -10 20 0 h 220 m 19,0 h 9 m -19, 0 v 60 h -64" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[3].Add.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path  Data="M -10,20 H 139 c 0 -10 20 -10 20 0 h 314 m 19,0 h 6 m -15,10 v 50 h -10" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[3].XOR.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 563,20 h 5 m 20,0 h 5" Canvas.Left="733" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QRStep[3].Shift.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Output paths -->
                                <Path Data="M 0,20 h 563" Canvas.Left="872" Canvas.Top="{ Binding ElementName=QRInABorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutA.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 44" Canvas.Left="1391" Canvas.Top="{ Binding ElementName=QRInBBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutB.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 229" Canvas.Left="1206" Canvas.Top="{ Binding ElementName=QRInCBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutC.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <Path Data="M 0,20 h 378" Canvas.Left="1057" Canvas.Top="{ Binding ElementName=QRInDBorder, Path=(Canvas.Top)}">
                                    <Path.Style>
                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding QROutD.MarkInput}" Value="True">
                                                    <Setter Property="Stroke" Value="Purple" />
                                                    <Setter Property="StrokeThickness" Value="3" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Path.Style>
                                </Path>
                                <!-- Grid for qr detail boxes -->
                                <Grid Canvas.Left="65" Width="1370" Height="260" Canvas.Top="-20">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.0248*" />
                                        <!--  34/1370 = 0.0248 -->
                                        <ColumnDefinition Width="0.2189*" />
                                        <!-- 300/1370 = 0.2189 -->
                                        <ColumnDefinition Width="0.0248*" />
                                        <ColumnDefinition Width="0.2189*" />
                                        <ColumnDefinition Width="0.0248*" />
                                        <ColumnDefinition Width="0.2189*" />
                                        <ColumnDefinition Width="0.0248*" />
                                        <ColumnDefinition Width="0.2189*" />
                                        <ColumnDefinition Width="0.0248*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <Canvas Grid.Column="1" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="1" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[0].Add.Mark" />
                                                                            <Binding Path="QRStep[0].XOR.MarkInput" />
                                                                            <Binding Path="QRStep[2].Add.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[0].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_0" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusionXOR_0" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_0">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[0].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10" Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_0, Path=Stroke}" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[0].XOR.Mark" />
                                                                            <Binding Path="QRStep[0].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[0].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_0" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusionXOR_0" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_0, Path=Stroke}" />
                                                <Path Name="QRXORCircle_0">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[0].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Canvas>
                                            <Canvas Grid.Row="1" Grid.Column="1">
                                                <Path Canvas.Left="30" Data="M 10,30 v 170" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[0].Shift.Mark" />
                                                                            <Binding Path="QRStep[1].Add.MarkInput" />
                                                                            <Binding Path="QRStep[2].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[0].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_0" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusionXOR_0" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_0">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[0].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_0, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="64" Style="{StaticResource ShiftSubscript}" Text="16" Foreground="{ Binding ElementName=QRShiftCircle_0, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                    <Canvas Grid.Column="3" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="3" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[1].Add.Mark" />
                                                                            <Binding Path="QRStep[1].XOR.MarkInput" />
                                                                            <Binding Path="QRStep[3].Add.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[1].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_1" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusionXOR_1" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_1">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[1].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10" Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_1, Path=Stroke}" />
                                                <Path Data="M 20,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[1].XOR.Mark" />
                                                                            <Binding Path="QRStep[1].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[1].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_1" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusionXOR_1" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_0, Path=Stroke}" />
                                                <Path Name="QRXORCircle_1">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[1].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Path Data="M 40,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[1].Shift.Mark" />
                                                                            <Binding Path="QRStep[2].Add.MarkInput" />
                                                                            <Binding Path="QRStep[3].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[1].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_1" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusionXOR_1" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_1">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[1].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_1, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="64" Style="{StaticResource ShiftSubscript}" Text="12" Foreground="{ Binding ElementName=QRShiftCircle_1, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                    <Canvas Grid.Column="5" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="1" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[2].Add.Mark" />
                                                                            <Binding Path="QROutA.MarkInput" />
                                                                            <Binding Path="QRStep[2].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[2].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_2" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusionXOR_2" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_2">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[2].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10" Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_2, Path=Stroke}" />
                                                <Path Data="M 20,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[2].XOR.Mark" />
                                                                            <Binding Path="QRStep[2].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[2].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_2" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusionXOR_2" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_2, Path=Stroke}" />
                                                <Path Name="QRXORCircle_2">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[2].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                            </Canvas>
                                            <Canvas Grid.Row="1" Grid.Column="1">
                                                <Path Canvas.Left="30" Data="M 10,30 v 170" />
                                            </Canvas>
                                            <Canvas Grid.Row="4" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}"  Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[2].Shift.Mark" />
                                                                            <Binding Path="QRStep[3].Add.MarkInput" />
                                                                            <Binding Path="QROutD.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[2].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_2" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusionXOR_2" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_2">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[2].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_2, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="66" Style="{StaticResource ShiftSubscript}" Text="8" Foreground="{ Binding ElementName=QRShiftCircle_2, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                    <Canvas Grid.Column="7" Grid.RowSpan="4">
                                        <Rectangle Style="{StaticResource QRStepRectangle}" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="75" />
                                                <!-- Width: 300/4 = 75 -->
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                                <ColumnDefinition Width="75" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="10" />
                                                <RowDefinition Height="60" />
                                                <!-- Height: 260/4 = 65-->
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="60" />
                                                <RowDefinition Height="10" />
                                            </Grid.RowDefinitions>
                                            <Canvas Grid.Row="3" Grid.Column="0">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="40" />
                                                <Border Canvas.Top="10" Canvas.Left="40">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[3].Add.Mark" />
                                                                            <Binding Path="QROutC.MarkInput" />
                                                                            <Binding Path="QRStep[3].XOR.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[3].Add.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusion_3" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueAddDiffusionXOR_3" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRAddCircle_3">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource AddCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[3].Add.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Label Canvas.Top="11" Canvas.Left="10"  Style="{StaticResource AddLabel}" Foreground="{ Binding ElementName=QRAddCircle_3, Path=Stroke}" />
                                                <Path Data="M 20,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="1">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="55" />
                                                <Border Canvas.Top="10" Canvas.Left="55">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[3].XOR.Mark" />
                                                                            <Binding Path="QRStep[3].Shift.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[3].XOR.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusion_3" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueXORDiffusionXOR_3" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <TextBox Canvas.Left="30" Canvas.Top="24" Style="{StaticResource XORLabel}" Foreground="{ Binding ElementName=QRXORCircle_3, Path=Stroke}" />
                                                <Path Name="QRXORCircle_3">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource XORCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[3].XOR.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <Path Data="M 40,40 v 50" />
                                            </Canvas>
                                            <Canvas Grid.Row="2" Grid.Column="2">
                                                <Rectangle Style="{StaticResource QRValueRectangle}" Canvas.Top="10" Canvas.Left="75" />
                                                <Border Canvas.Top="10" Canvas.Left="75">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}" BasedOn="{StaticResource QRValueBorder}">
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <MultiBinding Converter="{StaticResource BooleanOr}">
                                                                            <Binding Path="QRStep[3].Shift.Mark" />
                                                                            <Binding Path="QROutB.MarkInput" />
                                                                        </MultiBinding>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="Background" Value="AliceBlue" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <Viewbox>
                                                        <StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                                                <TextBox Style="{StaticResource QRValue}" Text="{Binding QRStep[3].Shift.Value, Converter={StaticResource UInt32ToHex}}" />
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusion_3" />
                                                            </StackPanel>
                                                            <StackPanel Style="{StaticResource DiffusionXOR}">
                                                                <RichTextBox Style="{StaticResource QRDiffusionValue}" Name="QRValueShiftDiffusionXOR_3" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Viewbox>
                                                </Border>
                                                <Path Name="QRShiftCircle_3">
                                                    <Path.Style>
                                                        <Style TargetType="{x:Type Path}" BasedOn="{StaticResource ShiftCircle}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding QRStep[3].Shift.MarkInput}" Value="True">
                                                                    <Setter Property="Stroke" Value="Purple" />
                                                                    <Setter Property="StrokeThickness" Value="3" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Path.Style>
                                                </Path>
                                                <TextBlock Canvas.Top="24" Canvas.Left="50" Style="{StaticResource ShiftLabel}" Foreground="{ Binding ElementName=QRShiftCircle_3, Path=Stroke}" />
                                                <TextBlock Canvas.Top="39" Canvas.Left="66" Style="{StaticResource ShiftSubscript}" Text="7" Foreground="{ Binding ElementName=QRShiftCircle_3, Path=Stroke}" />
                                            </Canvas>
                                        </Grid>
                                    </Canvas>
                                </Grid>
                            </Canvas>
                        </Canvas>
                    </Viewbox>
                </Grid>
                <!-- #endregion -->

                <!-- #region Addition + Little endian -->

                <!--#region WORKAROUND FOR SCALING ISSUE -->

                <Grid Grid.Column="0" Style="{StaticResource MatrixVisualizationGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" BorderBrush="Black" BorderThickness="0,0,2,2" Margin="20,0,0,0" />
                </Grid>

                <Grid Grid.Column="0" Style="{StaticResource MatrixVisualizationGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.15*" />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" Margin="20,0" RenderTransformOrigin="0.5, 0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform Y="-3" />
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Viewbox Margin="3">
                            <TextBox Style="{StaticResource Text}" Text="{Loc ChaChaHashOriginalStateLabel}" />
                        </Viewbox>
                    </Border>
                </Grid>

                <Grid Grid.Column="2" Style="{StaticResource MatrixVisualizationGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.15*" />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" Margin="20,0" RenderTransformOrigin="0.5, 0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform Y="-3" />
                                <ScaleTransform ScaleX="1.5" ScaleY="1.5" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Viewbox Margin="3">
                            <StackPanel Orientation="Horizontal">
                                <ContentControl Style="{DynamicResource ChaChaHashKeystreamBlockLabel}" />
                            </StackPanel>
                        </Viewbox>
                    </Border>
                </Grid>

                <Grid Grid.Column="1" Grid.ColumnSpan="2" Margin="20" Style="{StaticResource MatrixVisualizationGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />

                        <ColumnDefinition Width="0.33*" />

                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="4" Grid.Row="1" BorderBrush="Black" BorderThickness="0" Margin="5,0">
                        <Viewbox Grid.Column="4" Grid.Row="1" Style="{StaticResource UniformViewbox}">
                            <ContentControl Style="{DynamicResource ReverseBytesStepLabel}" />
                        </Viewbox>
                    </Border>
                </Grid>

                <Grid Grid.Column="1" Style="{StaticResource MatrixVisualizationGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" BorderBrush="Black" BorderThickness="0,0,0,2" Margin="0" />
                </Grid>

                <Grid Grid.Column="2" Style="{StaticResource MatrixVisualizationGrid}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Border Style="{StaticResource MatrixBorder}" Grid.Row="0" BorderBrush="Black" BorderThickness="0,0,0,2" Margin="0,0,20,0" />
                </Grid>

                <!--#endregion-->

                <Border Style="{StaticResource MatrixVisualizationBorder}" Grid.Row="0" Grid.Column="0">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState0" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR0" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState1" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR1" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState2" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR2" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState3" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR3" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState4" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR4" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState5" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR5" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState6" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR6" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState7" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR7" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState8" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR8" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState9" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR9" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState10" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR10" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState11" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR11" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState12" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR12" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState13" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR13" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState14" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR14" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OriginalState[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding OriginalState[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionOriginalState15" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionOriginalStateXOR15" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>

                <Border Style="{StaticResource MatrixVisualizationBorder}" Grid.Row="0" Grid.Column="1">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState0" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR0" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState1" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR1" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState2" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR2" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState3" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR3" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState4" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR4" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState5" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR5" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState6" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR6" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState7" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR7" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState8" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR8" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState9" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR9" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState10" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR10" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState11" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR11" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState12" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR12" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState13" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR13" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState14" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR14" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding AdditionResultState[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding AdditionResultState[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionAdditionResultState15" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionAdditionResultStateXOR15" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>

                <Border Style="{StaticResource MatrixVisualizationBorder}" Grid.Row="0" Grid.Column="2">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource StateText}" />
                            <Style TargetType="{x:Type Viewbox}" BasedOn="{StaticResource StateViewbox}" />
                            <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}" />
                            <Style TargetType="{x:Type RichTextBox}" BasedOn="{StaticResource DiffusionState}" />
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Row="0" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[0].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[0].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState0" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR0" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[1].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[1].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState1" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR1" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[2].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[2].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState2" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR2" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="0" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[3].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[3].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState3" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR3" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[4].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[4].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState4" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR4" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[5].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[5].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState5" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR5" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[6].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[6].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState6" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR6" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="1" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Setter Property="Background" Value="White" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[7].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[7].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState7" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR7" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="2" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[8].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[8].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState8" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR8" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[9].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[9].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState9" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR9" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[10].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[10].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState10" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR10" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="2" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[11].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[11].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState11" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR11" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>

                        <Border Grid.Row="3" Grid.Column="0">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[12].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[12].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState12" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR12" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="1">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[13].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[13].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState13" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR13" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="2">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[14].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[14].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState14" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR14" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                        <Border Grid.Row="3" Grid.Column="3">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}" BasedOn="{StaticResource StateBorder}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LittleEndianState[15].Mark}" Value="True">
                                            <Setter Property="Background" Value="AliceBlue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Viewbox>
                                <StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionNonXOR}">
                                        <TextBox Text="{Binding LittleEndianState[15].Value, Converter={StaticResource UInt32ToHex}}" />
                                        <RichTextBox Name="DiffusionLittleEndianState15" />
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource DiffusionXOR}">
                                        <RichTextBox Name="DiffusionLittleEndianStateXOR15" />
                                    </StackPanel>
                                </StackPanel>
                            </Viewbox>
                        </Border>
                    </Grid>
                </Border>

                <Grid Grid.ColumnSpan="2" Style="{StaticResource MatrixVisualizationGrid}">
                    <Viewbox Style="{StaticResource UniformViewbox}">
                        <Viewbox.Resources>
                            <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultPath}">
                                <Setter Property="StrokeThickness" Value="5" />
                            </Style>
                        </Viewbox.Resources>
                        <Canvas Width="1500" Height="260">
                            <Path Canvas.Left="729" Canvas.Top="100" Style="{StaticResource BigAddCircle}" />
                            <Label Canvas.Top="99" Canvas.Left="734" Style="{StaticResource BigAddLabel}" Foreground="{ Binding ElementName=QRAddCircle_0, Path=Stroke}" />
                        </Canvas>
                    </Viewbox>
                </Grid>
                <!--#endregion-->
            </Grid>

            <!--#endregion -->

            <!--#region Button navigation -->

            <Viewbox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Left">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Orientation" Value="Horizontal" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="5,0" />
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="Label" BasedOn="{StaticResource Text}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="Input" BasedOn="{StaticResource Input}">
                            <Setter Property="Width" Value="40" />
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="ColumnLabel" BasedOn="{StaticResource Label}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type Button}" x:Key="ColumnQRButton" BasedOn="{StaticResource StartButton}">
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type TextBox}" x:Key="DiagonalLabel" BasedOn="{StaticResource Label}">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven Inverted="True" />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type Button}" x:Key="DiagonalQRButton" BasedOn="{StaticResource StartButton}">
                            <Setter Property="Visibility">
                                <Setter.Value>
                                    <Binding Path="CurrentRoundIndex">
                                        <Binding.Converter>
                                            <conv:SequentialValueConverter>
                                                <conv:IsEven Inverted="True" />
                                                <BooleanToVisibilityConverter />
                                            </conv:SequentialValueConverter>
                                        </Binding.Converter>
                                    </Binding>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Grid.Resources>

                    <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Margin="3,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Style="{StaticResource Label}" Text="{Loc ChaChaHashNavigationKeystreamBlockLabel}" />
                        <StackPanel Grid.Row="1">
                            <Button Style="{StaticResource PrevButton}" Command="{Binding PrevKeystreamBlockCommand}" />
                            <TextBox Name="KeystreamBlockInput" Style="{StaticResource Input}" />
                            <TextBox Style="{StaticResource Text}" Text="/" />
                            <TextBox Style="{StaticResource Text}" Text="{Binding ChaCha.TotalKeystreamBlocks, Mode=OneWay}" />
                            <Button Style="{StaticResource NextButton}" Command="{Binding NextKeystreamBlockCommand}" />
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Margin="50,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0" Style="{StaticResource Label}" Text="{Loc ChaChaHashNavigationRoundLabel}" />
                        <StackPanel Grid.Row="1">
                            <Button Style="{StaticResource PrevButton}" Command="{Binding PrevRoundCommand}" />
                            <TextBox Name="RoundInput" Style="{StaticResource Input}" />
                            <TextBox Style="{StaticResource Text}" Text="/" />
                            <TextBox Style="{StaticResource Text}" Text="{Binding Settings.Rounds, Mode=OneWay}" />
                            <Button Style="{StaticResource NextButton}" Command="{Binding NextRoundCommand}" />
                        </StackPanel>
                    </Grid>

                    <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="5" Margin="25,0,75,0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Grid.Row="0" Style="{StaticResource Label}" Text="{Loc ChaChaHashNavigationQrLabel}" />
                        <StackPanel Grid.Column="0" Grid.Row="1">
                            <Button Style="{StaticResource PrevButton}" Command="{Binding PrevQRCommand}" />
                            <TextBox Name="QRInput" Style="{StaticResource Input}" />
                            <TextBox Style="{StaticResource Text}" Text="/" />
                            <TextBox Style="{StaticResource Text}" Text="4" />
                            <Button Style="{StaticResource NextButton}" Command="{Binding NextQRCommand}" />
                        </StackPanel>

                        <!--#region column rounds -->
                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelColumn1}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ColumnLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="0" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <Button Style="{StaticResource ColumnQRButton}" Content="{Loc ButtonLabelStart}" Command="{Binding QuarterroundStartCommand}" CommandParameter="0" />
                            <Button Style="{StaticResource ColumnQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="0" />
                        </StackPanel>
                        <TextBox Grid.Column="2" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelColumn2}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ColumnLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="1" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="2" Grid.Row="1">
                            <Button Style="{StaticResource ColumnQRButton}" Content="{Loc ButtonLabelStart}" Command="{Binding QuarterroundStartCommand}" CommandParameter="1" />
                            <Button Style="{StaticResource ColumnQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="1" />
                        </StackPanel>
                        <TextBox Grid.Column="3" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelColumn3}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ColumnLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="2" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="3" Grid.Row="1">
                            <Button Style="{StaticResource ColumnQRButton}" Content="{Loc ButtonLabelStart}" Command="{Binding QuarterroundStartCommand}" CommandParameter="2" />
                            <Button Style="{StaticResource ColumnQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="2" />
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelColumn4}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ColumnLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="3" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="4" Grid.Row="1">
                            <Button Style="{StaticResource ColumnQRButton}" Command="{Binding QuarterroundStartCommand}" CommandParameter="3" />
                            <Button Style="{StaticResource ColumnQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="3" />
                        </StackPanel>

                        <!--#endregion-->

                        <!--#region  diagonal rounds -->

                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelDiagonal1}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DiagonalLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="0" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="1" Grid.Row="1">
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelStart}" Command="{Binding QuarterroundStartCommand}" CommandParameter="0" />
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="0" />
                        </StackPanel>
                        <TextBox Grid.Column="2" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelDiagonal2}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DiagonalLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="1" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="2" Grid.Row="1">
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelStart}" Command="{Binding QuarterroundStartCommand}" CommandParameter="1" />
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="1" />
                        </StackPanel>
                        <TextBox Grid.Column="3" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelDiagonal3}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DiagonalLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="2" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="3" Grid.Row="1">
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelStart}" Command="{Binding QuarterroundStartCommand}" CommandParameter="2" />
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="2" />
                        </StackPanel>
                        <TextBox Grid.Column="4" Grid.Row="0" Text="{Loc ChaChaHashNavigationQrLabelDiagonal4}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource DiagonalLabel}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentQRIndex}" Value="3" />
                                                <Condition Binding="{Binding RoundsStep}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <StackPanel Grid.Column="4" Grid.Row="1">
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelStart}" Command="{Binding QuarterroundStartCommand}" CommandParameter="3" />
                            <Button Style="{StaticResource DiagonalQRButton}" Content="{Loc ButtonLabelEnd}" Command="{Binding QuarterroundEndCommand}" CommandParameter="3" />
                        </StackPanel>

                        <!--#endregion-->
                    </Grid>

                    <TextBox Grid.Column="7" Grid.Row="0" Text="{Loc ChaChaHashNavigationAdditionReverseBytesLabel}" Margin="3,0">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource Label}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RoundsStep}" Value="False">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <StackPanel Grid.Column="7" Grid.Row="1">
                        <Button Style="{StaticResource StartButton}" Command="{Binding MatrixStartCommand}" />
                        <Button Style="{StaticResource EndButton}" Command="{Binding MatrixEndCommand}" />
                    </StackPanel>
                </Grid>
            </Viewbox>

            <!--#endregion-->
        </Grid>
    </ContentControl>
</UserControl>