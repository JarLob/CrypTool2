//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.Plugins.HomophonicSubstitutionAnalyzer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.Plugins.HomophonicSubstitutionAnalyzer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cryptanalysis algorithm settings ähnelt.
        /// </summary>
        internal static string AlgorithmSettingsGroup {
            get {
                return ResourceManager.GetString("AlgorithmSettingsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatic or semi-automatic mode ähnelt.
        /// </summary>
        internal static string AnalaysisModeTooltip {
            get {
                return ResourceManager.GetString("AnalaysisModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analysis mode ähnelt.
        /// </summary>
        internal static string AnalysisModeCaption {
            get {
                return ResourceManager.GetString("AnalysisModeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyzer ähnelt.
        /// </summary>
        internal static string Analyzer {
            get {
                return ResourceManager.GetString("Analyzer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bestlist ähnelt.
        /// </summary>
        internal static string BestList {
            get {
                return ResourceManager.GetString("BestList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext: ähnelt.
        /// </summary>
        internal static string Ciphertext {
            get {
                return ResourceManager.GetString("Ciphertext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext alphabet: ähnelt.
        /// </summary>
        internal static string CiphertextAlphabet {
            get {
                return ResourceManager.GetString("CiphertextAlphabet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext ähnelt.
        /// </summary>
        internal static string CiphertextCaption {
            get {
                return ResourceManager.GetString("CiphertextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext format ähnelt.
        /// </summary>
        internal static string CiphertextFormatCaption {
            get {
                return ResourceManager.GetString("CiphertextFormatCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This defines the format of the ciphertext (single letters, number groups, or comma-separated) ähnelt.
        /// </summary>
        internal static string CiphertextFormatTooltip {
            get {
                return ResourceManager.GetString("CiphertextFormatTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext to analyze ähnelt.
        /// </summary>
        internal static string CiphertextTooltip {
            get {
                return ResourceManager.GetString("CiphertextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Comma-separated ähnelt.
        /// </summary>
        internal static string CommaSeparated {
            get {
                return ResourceManager.GetString("CommaSeparated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy all lines ähnelt.
        /// </summary>
        internal static string Copy_all {
            get {
                return ResourceManager.GetString("Copy_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy key ähnelt.
        /// </summary>
        internal static string Copy_key {
            get {
                return ResourceManager.GetString("Copy_key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy selected line ähnelt.
        /// </summary>
        internal static string Copy_line {
            get {
                return ResourceManager.GetString("Copy_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy text ähnelt.
        /// </summary>
        internal static string Copy_text {
            get {
                return ResourceManager.GetString("Copy_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy value ähnelt.
        /// </summary>
        internal static string Copy_value {
            get {
                return ResourceManager.GetString("Copy_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cost factor multiplicator ähnelt.
        /// </summary>
        internal static string CostFactorMultiplicatorCaption {
            get {
                return ResourceManager.GetString("CostFactorMultiplicatorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cost value: {0} ähnelt.
        /// </summary>
        internal static string CostValue_0 {
            get {
                return ResourceManager.GetString("CostValue_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cycles ähnelt.
        /// </summary>
        internal static string CyclesCaption {
            get {
                return ResourceManager.GetString("CyclesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum number of analysis cycles to be performed ähnelt.
        /// </summary>
        internal static string CyclesTooltip {
            get {
                return ResourceManager.GetString("CyclesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dictionary ähnelt.
        /// </summary>
        internal static string DictionaryCaption {
            get {
                return ResourceManager.GetString("DictionaryCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The attached dictionary is used during cryptanalysis to find and lock already revealed plaintext words. ähnelt.
        /// </summary>
        internal static string DictionaryTooltip {
            get {
                return ResourceManager.GetString("DictionaryTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ciphertext length is {0} and it contains {1} different homophones ähnelt.
        /// </summary>
        internal static string DifferentHomophones {
            get {
                return ResourceManager.GetString("DifferentHomophones", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find/Lock words ähnelt.
        /// </summary>
        internal static string FindLockWords {
            get {
                return ResourceManager.GetString("FindLockWords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fixed temperature ähnelt.
        /// </summary>
        internal static string FixedTemperatureCaption {
            get {
                return ResourceManager.GetString("FixedTemperatureCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatic ähnelt.
        /// </summary>
        internal static string FullAutomatic {
            get {
                return ResourceManager.GetString("FullAutomatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string KeyHeader {
            get {
                return ResourceManager.GetString("KeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key letter distribution ähnelt.
        /// </summary>
        internal static string KeyLetterDistribution {
            get {
                return ResourceManager.GetString("KeyLetterDistribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        internal static string LanguageCaption {
            get {
                return ResourceManager.GetString("LanguageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language settings ähnelt.
        /// </summary>
        internal static string LanguageSettingsGroup {
            get {
                return ResourceManager.GetString("LanguageSettingsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This language will be used by the cost function ähnelt.
        /// </summary>
        internal static string LanguageTooltip {
            get {
                return ResourceManager.GetString("LanguageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum word length ähnelt.
        /// </summary>
        internal static string MaxWordLengthCaption {
            get {
                return ResourceManager.GetString("MaxWordLengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum length of each word to auto lock ähnelt.
        /// </summary>
        internal static string MaxWordLengthTooltip {
            get {
                return ResourceManager.GetString("MaxWordLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum word length ähnelt.
        /// </summary>
        internal static string MinWordLengthCaption {
            get {
                return ResourceManager.GetString("MinWordLengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The minimum length of each word to auto lock ähnelt.
        /// </summary>
        internal static string MinWordLengthTooltip {
            get {
                return ResourceManager.GetString("MinWordLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number groups ähnelt.
        /// </summary>
        internal static string NumberGroups {
            get {
                return ResourceManager.GetString("NumberGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext: ähnelt.
        /// </summary>
        internal static string Plaintext {
            get {
                return ResourceManager.GetString("Plaintext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext alphabet: ähnelt.
        /// </summary>
        internal static string PlaintextAlphabet {
            get {
                return ResourceManager.GetString("PlaintextAlphabet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        internal static string PlaintextCaption {
            get {
                return ResourceManager.GetString("PlaintextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New plaintext candidates with higher scores are shown here ähnelt.
        /// </summary>
        internal static string PlaintextTooltip {
            get {
                return ResourceManager.GetString("PlaintextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Homophonic Substitution Analyzer ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyzer to cryptanalyze homophonic substitution ciphers ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset locked letters ähnelt.
        /// </summary>
        internal static string ResetLockedLetters {
            get {
                return ResourceManager.GetString("ResetLockedLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restarts ähnelt.
        /// </summary>
        internal static string RestartsCaption {
            get {
                return ResourceManager.GetString("RestartsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die How many times should the analysis algorithm be restarted? ähnelt.
        /// </summary>
        internal static string RestartsTooltip {
            get {
                return ResourceManager.GetString("RestartsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Semi automatic ähnelt.
        /// </summary>
        internal static string SemiAutomatic {
            get {
                return ResourceManager.GetString("SemiAutomatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Single letters ähnelt.
        /// </summary>
        internal static string SingleLetters {
            get {
                return ResourceManager.GetString("SingleLetters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text format ähnelt.
        /// </summary>
        internal static string TextFormatGroup {
            get {
                return ResourceManager.GetString("TextFormatGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Revealed plaintext ähnelt.
        /// </summary>
        internal static string TextHeader {
            get {
                return ResourceManager.GetString("TextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bestlist ähnelt.
        /// </summary>
        internal static string TopTenLabel {
            get {
                return ResourceManager.GetString("TopTenLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use spaces ähnelt.
        /// </summary>
        internal static string UseSpacesCaption {
            get {
                return ResourceManager.GetString("UseSpacesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If activated, the analyzer assumes spaces in the plaintext ähnelt.
        /// </summary>
        internal static string UseSpacesTooltip {
            get {
                return ResourceManager.GetString("UseSpacesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Costvalue ähnelt.
        /// </summary>
        internal static string ValueHeader {
            get {
                return ResourceManager.GetString("ValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Word count to find ähnelt.
        /// </summary>
        internal static string WordCountToFindCaption {
            get {
                return ResourceManager.GetString("WordCountToFindCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the minimum number of words to find in the revealed plaintext, that the auto locker locks the according symbols ähnelt.
        /// </summary>
        internal static string WordCountToFindTooltip {
            get {
                return ResourceManager.GetString("WordCountToFindTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Word locker ähnelt.
        /// </summary>
        internal static string WordLockerGroup {
            get {
                return ResourceManager.GetString("WordLockerGroup", resourceCulture);
            }
        }
    }
}
