<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PluginCaption" xml:space="preserve">
    <value>Частотный тест</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>Вычисляет частоту букв или групп букв в строке</value>
  </data>
  <data name="StringInputCaption" xml:space="preserve">
    <value>Строка, подлежащая анализу</value>
  </data>
  <data name="StringInputTooltip" xml:space="preserve">
    <value>Ввод текста</value>
  </data>
  <data name="StringOutputCaption" xml:space="preserve">
    <value>Вывод текста</value>
  </data>
  <data name="StringOutputTooltip" xml:space="preserve">
    <value>буква: абсолютная частота буквы: относительная частота буквы (в%)</value>
  </data>
  <data name="ArrayOutputCaption" xml:space="preserve">
    <value>Вывести список</value>
  </data>
  <data name="ArrayOutputTooltip" xml:space="preserve">
    <value>абсолютная частота буквы</value>
  </data>
  <data name="DictionaryOutputCaption" xml:space="preserve">
    <value>Выход словаря</value>
  </data>
  <data name="DictionaryOutputTooltip" xml:space="preserve">
    <value>Найденные n-граммы и их количества в разных условиях</value>
  </data>
  <data name="AutozoomCaption" xml:space="preserve">
    <value>Autozoom</value>
  </data>
  <data name="AutozoomTooltip" xml:space="preserve">
    <value>Должна ли диаграмма выполнять автозапуск?</value>
  </data>
  <data name="BoundaryFragmentsCaption" xml:space="preserve">
    <value>Фрагменты границы слова</value>
  </data>
  <data name="BoundaryFragmentsTooltip" xml:space="preserve">
    <value>Включить дополнительные фрагменты с пробелами на границе слова? Только для длины графа &gt;= 2.</value>
  </data>
  <data name="CaseSensitivityCaption" xml:space="preserve">
    <value>Чувствительность к алфавиту</value>
  </data>
  <data name="CaseSensitivityTooltip" xml:space="preserve">
    <value>Следует ли обрабатывать верхний и нижний регистр по-разному? (Если a == A?)</value>
  </data>
  <data name="ChartHeightCaption" xml:space="preserve">
    <value>Высота диаграммы</value>
  </data>
  <data name="ChartHeightTooltip" xml:space="preserve">
    <value>Это высота диаграммы, если autozoom отключен</value>
  </data>
  <data name="GrammLengthCaption" xml:space="preserve">
    <value>Введите длину n-граммов для исследования.</value>
  </data>
  <data name="GrammLengthTooltip" xml:space="preserve">
    <value>Группы из числа символов должны быть проверены?</value>
  </data>
  <data name="ProcessUnknownSymbolsCaption" xml:space="preserve">
    <value>Обработка неизвестных символов</value>
  </data>
  <data name="ProcessUnknownSymbolsTooltip" xml:space="preserve">
    <value>Что нужно делать с встречающимися символами в слове, которые не находятся в алфавите?</value>
  </data>
  <data name="ScaleCaption" xml:space="preserve">
    <value>Увеличить</value>
  </data>
  <data name="ScaleTooltip" xml:space="preserve">
    <value>Увеличить масштаб</value>
  </data>
  <data name="CaseSensitivityList1" xml:space="preserve">
    <value>Без учета регистра</value>
  </data>
  <data name="CaseSensitivityList2" xml:space="preserve">
    <value>Деликатный случай</value>
  </data>
  <data name="ProcessUnknownSymbolsList1" xml:space="preserve">
    <value>Не считайте</value>
  </data>
  <data name="ProcessUnknownSymbolsList2" xml:space="preserve">
    <value>подсчитывать</value>
  </data>
  <data name="PresentationGroup" xml:space="preserve">
    <value>презентация</value>
  </data>
  <data name="BoundaryFragmentsList1" xml:space="preserve">
    <value>Никаких фрагментов на границе</value>
  </data>
  <data name="BoundaryFragmentsList2" xml:space="preserve">
    <value>Включить фрагменты</value>
  </data>
  <data name="No_data_available_yet" xml:space="preserve">
    <value>Пока данных нет!</value>
  </data>
</root>