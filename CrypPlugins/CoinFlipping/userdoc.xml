<?xml version="1.0" encoding="utf-8"?>
<!-- You can edit this file manually or with the Util/CrypDocumentationEditor -->
<documentation>
  <language culture="en" />
  <language culture="zh-CN" />
  <language culture="ru" />
  <language culture="de" />
  <introduction lang="en">
    In cryptography, a commitment scheme is designed so that in the communication of two parties, one party can choose a certain value without revealing it immediately to the other party.
    In order to bind the first party to her choice and prevent her from changing it later, she must commit to her choice and give the second party the chance to check her honesty.
    <newline /><newline />
    The Coin Flipping protocol is an example for a commitment scheme:
    Alice and Bob want to settle an argument by flipping a coin. Alice flips a coin, and if Bob can correctly guess the outcome, he wins. Otherwise, Alice wins. Unfortunately, they are not in the same room and can only
    communicate over the telephone. When Bob tells Alice his guess, she could simply lie and say that her coin showed the other side, making her the winner. But if Alice could somehow be committed to her value, this would
    prevent her from cheating. The Coin Flipping Protocol commits Alice to her coin flip and allows Bob to detect, whether Alice was honest, by following these steps:

    <enum><item>
        Alice flips a coin.
      </item><item>
        Alice chooses a random string as her secret key and appends the result of her coin flip to it. She then applies a cryptographic one-way function (for example SHA) to the concatenated string and sends the resulting hash code to Bob.
        She has now commited to her coin flip result.
      </item><item>
        Bob sends his guess about the result of Alice's coin flip to Alice.
      </item><item>
        Alice receives Bob's guess. If his guess is wrong, Alice can declare herself the winner. If Bob's guess is correct, Alice can either be honest and declare Bob the winner,
        or she can cheat and again declare herself the winner.
      </item><item>
        Alice gives Bob the opportunity to check her honesty by telling him her secret key and her (alleged) coin flip result.
      </item><item>
        Bob applies the same one-way function to Alice's secret key and announced coin flip result and compares it to the hash code Alice sent him before.
        If they are equal, Bob knows that Alice was honest. If they differ, he knows that Alice has cheated by altering the coin flip result to which she has commited herself.
      </item></enum></introduction>
  <introduction lang="zh-CN">在密码术中，设计了一种承诺方案，以便在两方通信中，一方可以选择某个值，而无需立即将其透露给另一方。为了将第一方约束到她的选择并阻止她以后再更改，她必须承诺自己的选择，并给第二方一个检查其诚实性的机会。硬币翻转协议是承诺方案的一个示例：爱丽丝和鲍勃希望通过翻转硬币来解决争论。爱丽丝掷硬币，如果鲍勃能正确猜出结果，他就赢了。否则，爱丽丝获胜。不幸的是，他们不在同一个房间，只能通过电话交流。当鲍勃告诉爱丽丝他的猜测时，她可以撒谎并说她的硬币朝着另一面，使她成为赢家。但是，如果爱丽丝能以某种方式致力于自己的价值，那将防止她作弊。硬币翻转协议将爱丽丝委托给她的硬币翻转，并允许鲍勃通过执行以下步骤来检测爱丽丝是否诚实：爱丽丝翻转硬币。爱丽丝选择一个随机字符串作为她的秘密密钥，并将硬币翻转的结果附加到该字符串上。然后，她将加密的单向函数（例如SHA）应用于串联的字符串，并将生成的哈希码发送给Bob。现在，她致力于投掷硬币的结果。鲍勃将对爱丽丝掷硬币的结果的猜测发送给爱丽丝。爱丽丝得到鲍勃的猜测。如果猜错了，爱丽丝可以宣布自己是赢家。如果鲍勃的猜测是正确的，爱丽丝可以说实话并宣布鲍勃为赢家，也可以作弊并再次宣布自己为赢家。爱丽丝通过告诉鲍勃她的秘密钥匙和她（被指控的）掷硬币的结果，使鲍勃有机会检查自己的诚实。鲍勃将相同的单向功能应用于爱丽丝的秘密密钥，并宣布硬币翻转结果，并将其与爱丽丝之前发送给他的哈希码进行比较。如果他们相等，鲍勃就会知道爱丽丝很诚实。如果他们不同，他就知道爱丽丝通过改变自己承诺的掷硬币结果被骗了。</introduction>
  <introduction lang="ru">В криптографии схема обязательств рассчитана таким образом, что в сообщении двух сторон одна сторона может выбрать определенную ценность, не раскрывая ее немедленно другой стороне. Чтобы связать первую партию с ее выбором и не дать ей изменить ее позже, она должна взять на себя обязательство по ее выбору и дать второй стороне возможность проверить ее честность. Протокол с переводом монет является примером схемы обязательств: Алиса и Боб хотят разрешить спор, переворачивая монету. Алиса переворачивает монету, и если Боб может правильно угадать результат, он побеждает. В противном случае побеждает Алиса. К сожалению, они не находятся в одной комнате и могут общаться только по телефону. Когда Боб расскажет Алисе о своей догадке, она может просто солгать и сказать, что ее монета показала другую сторону, сделав ее победителем. Но если бы Алиса могла как-то быть привязана к своей ценности, это помешало бы ей обмануть. Протокол конвертирования монет обязывает Алису к ее перевороту и позволяет Бобу определить, была ли Алиса честной, выполнив следующие шаги: Алиса переворачивает монету. Алиса выбирает случайную цепочку в качестве своего секретного ключа и добавляет результат ее монеты. Затем она применяет криптографическую одностороннюю функцию (например, SHA) к конкатенированной строке и отправляет полученный хеш-код Бобу. Теперь она приступила к результату ее монеты. Боб посылает свое предположение о результате того, что Алиса перевернула монетку Алисе. Алиса принимает догадки Боба. Если его предположение ошибочно, Алиса может объявить себя победителем. Если догадка Боба верна, Алиса может быть честной и объявить Боб победителем, или она может обмануть и снова объявить себя победителем. Алиса дает Бобу возможность проверить ее честность, сообщив ему свой секретный ключ и ее (предполагаемый) результат перевода монетки. Боб применяет одну и ту же одностороннюю функцию к секретному ключу Алисы и объявляет результат фальсификации монет и сравнивает его с хеш-кодом, который Алиса отправила ему раньше. Если они равны, Боб знает, что Алиса была честна. Если они отличаются друг от друга, он знает, что Алиса обманула, изменив результат переворота монеты, на который она совершила себя.</introduction>
  <introduction lang="de">
    In der Kryptographie bietet ein "Commitment Scheme" bei der Kommunikation zweier Parteien die Möglichkeit, dass sich eine Partei für einen bestimmten Wert entscheiden kann, ohne der
    anderen Partei ihre Wahl gleich mitteilen zu müssen. Um die erste Partei an ihre einmal getroffene Wahl zu binden und zu verhindern, dass sie diese später nochmals, unbemerkt von der anderen Partei,
    verändern kann, muss sie sich auf ihre Wahl verbindlich festlegen und der zweiten Partei die Möglichkeit geben, ihre Ehrlichkeit zu überprüfen.
    <newline /><newline />
    Das Münzwurf-Protokoll (Coin Flipping Protocol) ist ein Beispiel für ein "Commitment Scheme":
    Alice und Bob wollen eine Meinungsverschiedenheit durch einen Münzwurf beilegen. Alice wirft eine Münze, und wenn Bob das Ergebnis korrekt vorhersagen kann, gewinnt er, andernfalls gewinnt Alice. Leider sind die beiden
    nicht im selben Raum und können nur über das Telephon kommunizieren. Wenn Bob Alice seine Vorhersage mitteilt, könnte Alice einfach lügen und behaupten, ihre Münze zeige die andere Seite, wodurch Alice der Gewinner wäre.
    Wenn es eine Möglichkeit gäbe, dass Alice sich auf das Ergebnis ihres Münzwurfes festlegt, bevor sie Bobs Vermutung erfährt, würde dies ein Betrügen verhindern.
    Durch die folgenden Schritte ermöglicht das Münzwurf-Protokoll die verbindliche Festlegung von Alice auf ihren Münzwurf und das Feststellen von Alices Ehrlichkeit durch Bob:

    <enum><item>
        Alice wirft eine Münze.
      </item><item>
        Alice wählt eine beliebige Zeichenkette als geheimen Schlüssel und hängt das Ergebnis ihres Münzwurfes an die Zeichenkette an. Auf diese neue Zeichenkette wendet sie dann eine kryptographische Einwegfunktion an (z.B. SHA)
        und sendet den resultierenden Hashwert an Bob. Damit hat sie sich auf ihren Münzwurf festgelegt.
      </item><item>
        Bob teilt Alice seine Vermutung über den Ausgang ihres Münzwurfes mit.
      </item><item>
        Alice empfängt Bobs Vermutung. Wenn sie falsch ist, kann Alice sich zum Gewinner erklären. Wenn Bob richtig geraten hat, kann Alice entweder ehrlich sein und Bob zum Gewinner erklären,
        oder sie kann betrügen und sich selbst zum Gewinner erklären.
      </item><item>
        Alice gibt Bob die Möglichkeit, ihre Ehrlichkeit zu überprüfen, indem sie ihm ihren geheimen Schlüssel und das (angebliche) Resultat ihres Münzwurfes mitteilt.
      </item><item>
        Bob bildet aus dem Schlüssel und Alices Ergebnis eine Zeichenkette und wendet dieselbe Einwegfunktion darauf an. Er vergleicht den resultierenden Hashcode mit dem Hashcode, den Alice ihm zuvor mitgeteilt hat.
        Wenn sie übereinstimmen weiss Bob, dass Alice ehrlich war. Wenn sie unterschiedlich sind, weiss er, dass Alice ihm einen anderen Wert als den, auf den sie sich festgelegt hat, zugeschickt und somit betrogen hat.
      </item></enum></introduction>
  <usage lang="en">
    This component implements Alice's action in step 4 of the protocol, all other steps can be implemented with regular CrypTool components.
    <newline /><newline />
    It has two inputs: "A's flipped coin", where the result of Alice's coin flip is expected as a boolean value, and "B's guess", which must provide Bob's guess as a boolen value.
    <newline /><newline />
    In the settings, you must select the behaviour of Alice: honest or dishonest. If she is honest, she will compare Bob's guess with her real coin flip result, the one she has committed to.
    If she is dishonest, she will alter the result of her coin flip so, that she is the winner. But of course Bob can then detect this change, as Alice has committed to the real result of her coin flip.
    <newline /><newline />
    The component has two outputs. On the output labeled "Success", Alice declares the winner of the coin toss as a boolean value: if Bob wins, the output is "true", otherwise it is "false". On the output labeled "Flipped coin value", Alice tells
    Bob the (alleged) result of her coin flip. Of course both output values depend on Alice's honesty.
  </usage>
  <usage lang="zh-CN">该组件在协议的第4步中实现了Alice的动作，其他所有步骤都可以通过常规CrypTool组件来实现。它有两个输入：“ A的硬币翻转”，其中Alice的硬币翻转结果应为布尔值；以及“ B的猜测”，其必须提供Bob的猜测为布尔值。在设置中，您必须选择Alice的行为：诚实或不诚实。如果她是诚实的，她会将鲍勃的猜测与她承诺的真实掷硬币结果进行比较。如果她不诚实，她会更改掷硬币的结果，以便她是获胜者。但是当然，Bob可以检测到这种变化，因为Alice一直致力于自己掷硬币的真实结果。该组件有两个输出。在标有“成功”的输出上，爱丽丝将掷硬币的获胜者声明为布尔值：如果鲍勃获胜，则输出为“ true”，否则为“ false”。在标有“翻转硬币值”的输出上，爱丽丝告诉鲍勃她掷硬币的结果（被指控）。当然，两个输出值都取决于爱丽丝的诚实。</usage>
  <usage lang="ru">Этот компонент реализует действие Алисы на шаге 4 протокола, все остальные шаги могут быть реализованы с помощью обычных компонентов CrypTool. Он имеет два входа: «A flipped coin», где результат смены монетки Алисы ожидается как логическое значение, и «догадка B», которая должна предугадать догадки Боба как значения boolen. В настройках вы должны выбрать поведение Алисы: честное или нечестное. Если она честна, она сравнит догадку Боба с ее реальным результатом фальсификации монет, который она обязалась. Если она нечестна, она изменит результат ее монеты, чтобы она стала победителем. Но, разумеется, Боб может обнаружить это изменение, поскольку Алиса взяла на себя обязательство достичь реального результата ее переворота. Компонент имеет два выхода. На выходе с надписью «Успех» Алиса объявляет победителя монеты броском как логическое значение: если Боб победит, результат будет «истинным», иначе он будет «ложным». На выходе с надписью «Flipped coin value» Алиса сообщает Бобу (предположительно) результат ее переворота. Конечно, обе выходные значения зависят от честности Алисы.</usage>
  <usage lang="de">
    Diese Komponente implementiert Alices Vorgehen in Schritt 4 des Protokolls, alle anderen Schritte können mit regulären CrypTool-Komponenten realisiert werden.
    <newline /><newline />
    Sie hat zwei Eingänge: "As Münzwurf", an welchem das Resultat von Alices Münzwurf als ein boolescher Wert erwartet wird, und "Bs Vermutung", an welchem Bobs Vermutung über Alices Münzwurf als boolescher Wert anliegen muss.
    <newline /><newline />
    In den Einstellungen der Komponente können Sie Alices Verhalten bestimmen: ehrlich oder unehrlich. Wenn Alice ehrlich ist, wird sie Bobs Vermutung mit dem tatsächlichen Ergebnis ihres eigenen Münzwurfes vergleichen, dem Wert also, auf den sie
    sich verpflichtend festgelegt hat. Wenn sie unehrlich ist, wird sie das Ergebnis ihres Münzwurfes so abändern, dass sie der Gewinner ist. Aber da sich Alice auf ihren ursprünglichen Wert festgelegt hat, kann Bob diese Änderung feststellen und
    wissen, dass Alice betrogen hat.
    <newline /><newline />
    Die Komponente hat zwei Ausgänge. Am Ausgang mit der Bezeichnung "Erfolg" gibt Alice den Gewinner des Münzwurf-Spiels in Form eines booleschen Wertes aus: wenn Bob gewinnt, liegt am Ausgang "wahr" an, sonst "falsch".
    Am Ausgang mit der Bezeichnung "Ergebnis des Münzwurfes" gibt Alice Bob das (angebliche) Ergebnis ihres Münzwurfes bekannt. Natürlich hängen beide Ausgabewerte von Alices Ehrlichkeit ab.
  </usage>
  <presentation lang="en"></presentation>
  <presentation lang="de"></presentation>
  <references>
    <linkReference>
      <link url="http://dm.ing.unibs.it/giuzzi/corsi/Support/papers-cryptography/Coin_flipping.pdf" lang="en" />
      <caption lang="en">Coin Flipping Protocol (PDF)</caption>
      <link url="http://dm.ing.unibs.it/giuzzi/corsi/Support/papers-cryptography/Coin_flipping.pdf" lang="de" />
      <caption lang="de">Coin Flipping Protocol (PDF, englisch)</caption>
    </linkReference>
    <linkReference>
      <link url="http://en.wikipedia.org/wiki/Commitment_scheme" lang="de" />
      <caption lang="en">Commitment Scheme</caption>
      <link url="http://de.wikipedia.org/wiki/Commitment-Verfahren" lang="de" />
      <caption lang="de">Commitment-Verfahren</caption>
    </linkReference>
  </references>
</documentation>