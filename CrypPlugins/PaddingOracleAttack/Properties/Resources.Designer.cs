//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1008
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PaddingOracleAttack.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PaddingOracleAttack.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blocksize ähnelt.
        /// </summary>
        internal static string BlocksizeCaption {
            get {
                return ResourceManager.GetString("BlocksizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the used block size. ähnelt.
        /// </summary>
        internal static string BlocksizeTooltip {
            get {
                return ResourceManager.GetString("BlocksizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt completely ähnelt.
        /// </summary>
        internal static string btnAll {
            get {
                return ResourceManager.GetString("btnAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto search ähnelt.
        /// </summary>
        internal static string btnAuto {
            get {
                return ResourceManager.GetString("btnAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Byte ähnelt.
        /// </summary>
        internal static string btnLblP1 {
            get {
                return ResourceManager.GetString("btnLblP1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to Phase 2 ähnelt.
        /// </summary>
        internal static string btnLblP1End {
            get {
                return ResourceManager.GetString("btnLblP1End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Send Request ähnelt.
        /// </summary>
        internal static string btnLblP1Init {
            get {
                return ResourceManager.GetString("btnLblP1Init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next byte ähnelt.
        /// </summary>
        internal static string btnLblP2 {
            get {
                return ResourceManager.GetString("btnLblP2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to Phase 3 ähnelt.
        /// </summary>
        internal static string btnLblP2End {
            get {
                return ResourceManager.GetString("btnLblP2End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Search ähnelt.
        /// </summary>
        internal static string btnLblP2Init {
            get {
                return ResourceManager.GetString("btnLblP2Init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt Byte ähnelt.
        /// </summary>
        internal static string btnLblP3Decrypt {
            get {
                return ResourceManager.GetString("btnLblP3Decrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recover Plaintext ähnelt.
        /// </summary>
        internal static string btnLblP3End {
            get {
                return ResourceManager.GetString("btnLblP3End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Current Byte ähnelt.
        /// </summary>
        internal static string btnLblP3Find {
            get {
                return ResourceManager.GetString("btnLblP3Find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Increase Padding ähnelt.
        /// </summary>
        internal static string btnLblP3IncPad {
            get {
                return ResourceManager.GetString("btnLblP3IncPad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        internal static string btnNext {
            get {
                return ResourceManager.GetString("btnNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Input ähnelt.
        /// </summary>
        internal static string CipherInputCaption {
            get {
                return ResourceManager.GetString("CipherInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the cipher text ähnelt.
        /// </summary>
        internal static string CipherInputTooltip {
            get {
                return ResourceManager.GetString("CipherInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext Recovered. Attack completed successfully. ähnelt.
        /// </summary>
        internal static string descDone {
            get {
                return ResourceManager.GetString("descDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait while the message is being decrypted. ähnelt.
        /// </summary>
        internal static string descFinishAll {
            get {
                return ResourceManager.GetString("descFinishAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 1 finished! Valid padding found. ähnelt.
        /// </summary>
        internal static string descP1Done {
            get {
                return ResourceManager.GetString("descP1Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 1: Find a message that decrypts to a valid padding. Send the unchanged message to see if a valid padding already exists. ähnelt.
        /// </summary>
        internal static string descP1Init {
            get {
                return ResourceManager.GetString("descP1Init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Task: Change the last byte until the padding is valid. ähnelt.
        /// </summary>
        internal static string descP1Task {
            get {
                return ResourceManager.GetString("descP1Task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 2 finished! First padding byte found! Padding length: ähnelt.
        /// </summary>
        internal static string descP2Done {
            get {
                return ResourceManager.GetString("descP2Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 2 finished! The first 7 bytes did not affect the padding, so the padding length must be 1! ähnelt.
        /// </summary>
        internal static string descP2DoneSpecial {
            get {
                return ResourceManager.GetString("descP2DoneSpecial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 2: Find first padding byte. Change the bytes from left to right. If the padding turns invalid, a padding byte must have been changed. ähnelt.
        /// </summary>
        internal static string descP2Init {
            get {
                return ResourceManager.GetString("descP2Init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The changed byte does not belong to the padding. Try the next byte! ähnelt.
        /// </summary>
        internal static string descP2Task {
            get {
                return ResourceManager.GetString("descP2Task", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Byte Decrypted! Increase the padding to continue the decryption. ähnelt.
        /// </summary>
        internal static string descP3Dec {
            get {
                return ResourceManager.GetString("descP3Dec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The byte was decrypted. Increase the padding to continue the decryption. ähnelt.
        /// </summary>
        internal static string descP3DecDone {
            get {
                return ResourceManager.GetString("descP3DecDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Padding Bytes Decrypted. Increase the padding to continue the decryption. ähnelt.
        /// </summary>
        internal static string descP3DecPadDone {
            get {
                return ResourceManager.GetString("descP3DecPadDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message was decrypted! Click to see the original plaintext. ähnelt.
        /// </summary>
        internal static string descP3Done {
            get {
                return ResourceManager.GetString("descP3Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Valid padding found! Byte can be decrypted. ähnelt.
        /// </summary>
        internal static string descP3FindDone {
            get {
                return ResourceManager.GetString("descP3FindDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Task: Change the byte until the message decrypts to the desired value! If the correct value is found, the padding will turn valid. ähnelt.
        /// </summary>
        internal static string descP3FindTask {
            get {
                return ResourceManager.GetString("descP3FindTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Phase 3: Decrypt the message. Start with decrypting the padding bytes. ähnelt.
        /// </summary>
        internal static string descP3Init {
            get {
                return ResourceManager.GetString("descP3Init", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Response from the Padding Oracle ähnelt.
        /// </summary>
        internal static string descPadIn {
            get {
                return ResourceManager.GetString("descPadIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        internal static string langCheck {
            get {
                return ResourceManager.GetString("langCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Padding Valid ähnelt.
        /// </summary>
        internal static string PaddingOracleInputCaption {
            get {
                return ResourceManager.GetString("PaddingOracleInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Validity of the padding ähnelt.
        /// </summary>
        internal static string PaddingOracleInputTooltip {
            get {
                return ResourceManager.GetString("PaddingOracleInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Padding Oracle Attack ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attack an encrypted message using a Padding Oracle ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Manipulated Cipher Output ähnelt.
        /// </summary>
        internal static string ResultOutputCaption {
            get {
                return ResourceManager.GetString("ResultOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the manipulated cipher ähnelt.
        /// </summary>
        internal static string ResultOutputTooltip {
            get {
                return ResourceManager.GetString("ResultOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically decrypt the complete message. ähnelt.
        /// </summary>
        internal static string ttBtnAll {
            get {
                return ResourceManager.GetString("ttBtnAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search automatically for the next valid value. ähnelt.
        /// </summary>
        internal static string ttBtnAuto {
            get {
                return ResourceManager.GetString("ttBtnAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Perform the next step. ähnelt.
        /// </summary>
        internal static string ttBtnNext {
            get {
                return ResourceManager.GetString("ttBtnNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undo the last performed action. ähnelt.
        /// </summary>
        internal static string ttBtnReturn {
            get {
                return ResourceManager.GetString("ttBtnReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return to the beginning of the current phase. ähnelt.
        /// </summary>
        internal static string ttBtnReturnPhase {
            get {
                return ResourceManager.GetString("ttBtnReturnPhase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The encrypted informationblock. ähnelt.
        /// </summary>
        internal static string ttCipherBlock {
            get {
                return ResourceManager.GetString("ttCipherBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The corrupted initializationblock (original C1 XOR O). ähnelt.
        /// </summary>
        internal static string ttCorruptedBlock {
            get {
                return ResourceManager.GetString("ttCorruptedBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The decrypted initializationblock (is completely known at the end). XORd with the original initializationblock C1 results in the plaintext P2. ähnelt.
        /// </summary>
        internal static string ttDecBlock {
            get {
                return ResourceManager.GetString("ttDecBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The overlay used to modify the initializationblock. ähnelt.
        /// </summary>
        internal static string ttOverlayBlock {
            get {
                return ResourceManager.GetString("ttOverlayBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The resulting plaintext when XORing D2 with the original initializationblock C1 and O. ähnelt.
        /// </summary>
        internal static string ttPlainBlock {
            get {
                return ResourceManager.GetString("ttPlainBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The encrypted initializationblock. ähnelt.
        /// </summary>
        internal static string ttPrelBlock {
            get {
                return ResourceManager.GetString("ttPrelBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Amount of requests sent to the server ähnelt.
        /// </summary>
        internal static string ttSentRequests {
            get {
                return ResourceManager.GetString("ttSentRequests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The plugin only displays 8 bytes at a time. If the block size exceeds 8 bytes, hidden bytes can be displayed by using the scrollbar. ähnelt.
        /// </summary>
        internal static string ttViewByte {
            get {
                return ResourceManager.GetString("ttViewByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Currently Viewing Bytes ähnelt.
        /// </summary>
        internal static string ttViewByteDesc {
            get {
                return ResourceManager.GetString("ttViewByteDesc", resourceCulture);
            }
        }
    }
}
