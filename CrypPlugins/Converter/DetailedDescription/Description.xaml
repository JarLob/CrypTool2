<FlowDocument PagePadding="5,0,5,0" AllowDrop="True" NumberSubstitution.CultureSource="User" 
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
			  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			  xmlns:misc="clr-namespace:Cryptool.PluginBase.Miscellaneous;assembly=CrypPluginBase"
			  Background="White" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
    
    <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Times New Roman" FontSize="16">
        <Span FontFamily="Georgia" FontWeight="Bold" FontSize="18.6666666666667" Foreground="#FF15428B" xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline" />
            </Span.TextDecorations>
            Converter (Throughput)
        </Span>
    </Paragraph>
       <Paragraph TextAlignment="Justify">
        <Image Source="/Converter;component/icons/icon.png"   Height="100" Width="100"/>
       <Image Source="/Converter;component/icons/tobig.png"  Height="100" Width="100"/>  
        <Image Source="/Converter;component/icons/tobyte.png"  Height="100" Width="100"/>  
        <Image Source="/Converter;component/icons/tobytearray.png"  Height="100" Width="100"/>  
        <Image Source="/Converter;component/icons/tocryptoolstream.png"  Height="100" Width="100"/>  
       <Image Source="/Converter;component/icons/toint.png"  Height="100" Width="100"/>  
       <Image Source="/Converter;component/icons/tointarray.png"  Height="100" Width="100"/>
       <Image Source="/Converter;component/icons/toshort.png"  Height="100" Width="100"/>
       <Image Source="/Converter;component/icons/tostring.png"  Height="100" Width="100"/>
        </Paragraph>
    <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Times New Roman" FontSize="16">
        <Span FontFamily="Georgia" FontWeight="Bold" FontSize="17" Foreground="#FF15428B" xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline" />
            </Span.TextDecorations>
            Introduction
        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run FontSize="16" xml:lang="en-us">
           This plugin provides conversion between data types.

It has exactly one input and one output. It accepts any data type as input and converts it to the data type specified in the 'Converting to' field of the settings tab of the plugin.
        </Run>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run FontSize="16" xml:lang="en-us">
If the input is to be converted to a numeric type, it is first converted to a String and then to the desired type.
           </Run>
    </Paragraph>
        <Paragraph TextAlignment="Justify">
    <Run>
           If the input is of type boolean, conversion is only possible to type Int or String.
        </Run>
    </Paragraph>

 
  
      <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Times New Roman" FontSize="16">
        <Span FontFamily="Georgia" FontWeight="Bold" FontSize="18.6666666666667" Foreground="#FF15428B" xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline" />
            </Span.TextDecorations>
            Converting to a Double
        </Span>
    </Paragraph>
       <Paragraph TextAlignment="Justify">
       
    <Run>
            When converting to a double, it can be chosen to use either German format or American format. When German format is selected, e.g. "123.324,34" will be converted to "123324,34" and on American format "123,324.34" will be converted to the same double. Please be aware that conversion to Double is not safe. Digits may be cut off.
        </Run>
    </Paragraph>
    <Paragraph Margin="0,0,0,0" TextAlignment="Left" FontFamily="Times New Roman" FontSize="16">
        <Span FontFamily="Georgia" FontWeight="Bold" FontSize="17" Foreground="#FF15428B" xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline" />
            </Span.TextDecorations>
            Converting to Byte[]
        </Span>
     
    </Paragraph>
<Paragraph TextAlignment="Justify">
       
    <Run>
           If Byte[] is selected as output type, it can be chosen whether the input is read as a numeric value and store the value in the numeric encoding in the Byte[]. Furthermore the representation of the given input can be changed to Hex or Base64. After this step, the selection of encoding has its effect.
           So if e.g. "Unicode"  is selected as encoding, and Hex as representation (and "Numeric" is set to "no"), the plugin will try to convert the input to hex format and then to UTF-16. 
        </Run>
    </Paragraph>

</FlowDocument>
