//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.296
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.Plugins.Cryptography.Encryption.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.Plugins.Cryptography.Encryption.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action ähnelt.
        /// </summary>
        internal static string ActionCaption {
            get {
                return ResourceManager.GetString("ActionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt ähnelt.
        /// </summary>
        internal static string ActionList1 {
            get {
                return ResourceManager.GetString("ActionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt ähnelt.
        /// </summary>
        internal static string ActionList2 {
            get {
                return ResourceManager.GetString("ActionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want the input data to be encrypted or decrypted? ähnelt.
        /// </summary>
        internal static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die #define GETU32(pt) (((u32)(pt)[0] &lt;&lt; 24) ^ ((u32)(pt)[1] &lt;&lt; 16) ^ ((u32)(pt)[2] &lt;&lt;  8) ^ ((u32)(pt)[3]))
        ///#define PUTU32(ct, st) { (ct)[0] = (u8)((st) &gt;&gt; 24); (ct)[1] = (u8)((st) &gt;&gt; 16); (ct)[2] = (u8)((st) &gt;&gt;  8); (ct)[3] = (u8)(st); }
        ///
        ///typedef unsigned int u32;
        ///typedef unsigned short u16;
        ///typedef unsigned char u8;
        ///
        ///#define MAXKC   (256/32)
        ///#define MAXKB   (256/8)
        ///#define MAXNR   14
        ///
        ///__constant u32 Te0[256] = {
        ///    0xc66363a5U, 0xf87c7c84U, 0xee777799U, 0xf67b7b8dU,
        ///    0xfff2f20dU, 0xd66b6bbdU [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AESOpenCL {
            get {
                return ResourceManager.GetString("AESOpenCL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blocksize ähnelt.
        /// </summary>
        internal static string BlocksizeCaption {
            get {
                return ResourceManager.GetString("BlocksizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 128 Bits ähnelt.
        /// </summary>
        internal static string BlocksizeList1 {
            get {
                return ResourceManager.GetString("BlocksizeList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 192 Bits ähnelt.
        /// </summary>
        internal static string BlocksizeList2 {
            get {
                return ResourceManager.GetString("BlocksizeList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 256 Bits ähnelt.
        /// </summary>
        internal static string BlocksizeList3 {
            get {
                return ResourceManager.GetString("BlocksizeList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the block size (applies only to Rijndael) ähnelt.
        /// </summary>
        internal static string BlocksizeTooltip {
            get {
                return ResourceManager.GetString("BlocksizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES Slave ähnelt.
        /// </summary>
        internal static string ControlSlaveCaption {
            get {
                return ResourceManager.GetString("ControlSlaveCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES Slave ähnelt.
        /// </summary>
        internal static string ControlSlaveTooltip {
            get {
                return ResourceManager.GetString("ControlSlaveTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cryptographic algorithm ähnelt.
        /// </summary>
        internal static string CryptoAlgorithmCaption {
            get {
                return ResourceManager.GetString("CryptoAlgorithmCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Encryption Standard (AES) ähnelt.
        /// </summary>
        internal static string CryptoAlgorithmList1 {
            get {
                return ResourceManager.GetString("CryptoAlgorithmList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rijndael ähnelt.
        /// </summary>
        internal static string CryptoAlgorithmList2 {
            get {
                return ResourceManager.GetString("CryptoAlgorithmList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select which symmetric cipher you want to use ähnelt.
        /// </summary>
        internal static string CryptoAlgorithmTooltip {
            get {
                return ResourceManager.GetString("CryptoAlgorithmTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initialization vector ähnelt.
        /// </summary>
        internal static string InputIVCaption {
            get {
                return ResourceManager.GetString("InputIVCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The initialization vector (IV) which is used in chaining modes. It must be the same as the blocksize. ähnelt.
        /// </summary>
        internal static string InputIVTooltip {
            get {
                return ResourceManager.GetString("InputIVTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string InputKeyCaption {
            get {
                return ResourceManager.GetString("InputKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The provided key should be 16, 24 or 32 bytes, dependig on the settings. Too short/long keys will be extended/truncated! ähnelt.
        /// </summary>
        internal static string InputKeyTooltip {
            get {
                return ResourceManager.GetString("InputKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        internal static string InputStreamCaption {
            get {
                return ResourceManager.GetString("InputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data to be encrypted or decrypted ähnelt.
        /// </summary>
        internal static string InputStreamTooltip {
            get {
                return ResourceManager.GetString("InputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keysize ähnelt.
        /// </summary>
        internal static string KeysizeCaption {
            get {
                return ResourceManager.GetString("KeysizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 128 Bits ähnelt.
        /// </summary>
        internal static string KeysizeList1 {
            get {
                return ResourceManager.GetString("KeysizeList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 192 Bits ähnelt.
        /// </summary>
        internal static string KeysizeList2 {
            get {
                return ResourceManager.GetString("KeysizeList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 256 Bits ähnelt.
        /// </summary>
        internal static string KeysizeList3 {
            get {
                return ResourceManager.GetString("KeysizeList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the key size. Note that providing a longer key will result in cutting the overlapping bytes, providing a shorter key will result in filling up with zeroes. ähnelt.
        /// </summary>
        internal static string KeysizeTooltip {
            get {
                return ResourceManager.GetString("KeysizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chaining mode ähnelt.
        /// </summary>
        internal static string ModeCaption {
            get {
                return ResourceManager.GetString("ModeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Electronic Code Book (ECB) ähnelt.
        /// </summary>
        internal static string ModeList1 {
            get {
                return ResourceManager.GetString("ModeList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Block Chaining (CBC) ähnelt.
        /// </summary>
        internal static string ModeList2 {
            get {
                return ResourceManager.GetString("ModeList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Feedback (CFB) ähnelt.
        /// </summary>
        internal static string ModeList3 {
            get {
                return ResourceManager.GetString("ModeList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output Feedback (OFB) ähnelt.
        /// </summary>
        internal static string ModeList4 {
            get {
                return ResourceManager.GetString("ModeList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the block cipher mode of operation. ähnelt.
        /// </summary>
        internal static string ModeTooltip {
            get {
                return ResourceManager.GetString("ModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output stream ähnelt.
        /// </summary>
        internal static string OutputStreamCaption {
            get {
                return ResourceManager.GetString("OutputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypted or decrypted output data ähnelt.
        /// </summary>
        internal static string OutputStreamTooltip {
            get {
                return ResourceManager.GetString("OutputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Padding mode ähnelt.
        /// </summary>
        internal static string PaddingCaption {
            get {
                return ResourceManager.GetString("PaddingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string PaddingList1 {
            get {
                return ResourceManager.GetString("PaddingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zeros ähnelt.
        /// </summary>
        internal static string PaddingList2 {
            get {
                return ResourceManager.GetString("PaddingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PKCS7 ähnelt.
        /// </summary>
        internal static string PaddingList3 {
            get {
                return ResourceManager.GetString("PaddingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ANSIX923 ähnelt.
        /// </summary>
        internal static string PaddingList4 {
            get {
                return ResourceManager.GetString("PaddingList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ISO10126 ähnelt.
        /// </summary>
        internal static string PaddingList5 {
            get {
                return ResourceManager.GetString("PaddingList5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1-0 padding ähnelt.
        /// </summary>
        internal static string PaddingList6 {
            get {
                return ResourceManager.GetString("PaddingList6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a mode to fill partial data blocks. ähnelt.
        /// </summary>
        internal static string PaddingTooltip {
            get {
                return ResourceManager.GetString("PaddingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced Encryption Standard (Rijndael) ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
    }
}
