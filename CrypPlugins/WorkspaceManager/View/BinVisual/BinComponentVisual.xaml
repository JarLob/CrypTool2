<UserControl x:Class="WorkspaceManager.View.BinVisual.BinComponentVisual"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:state="clr-namespace:WorkspaceManager.View.Base"
             xmlns:local="clr-namespace:WorkspaceManager.View.BinVisual"
             xmlns:ic="clr-namespace:WorkspaceManager.View.BinVisual.IControlVisual"
             xmlns:model="clr-namespace:WorkspaceManager.Model;assembly=WorkspaceManagerModel"
             xmlns:dragdrop="clr-namespace:DragDropListBox"
             xmlns:bin="clr-namespace:WorkspaceManager.View.BinVisual"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             DataContext="{Binding RelativeSource={x:Static RelativeSource.Self}}">
    <UserControl.RenderTransform>
        <TranslateTransform X="{Binding Path=Position.X}" Y="{Binding Path=Position.Y}"></TranslateTransform>
    </UserControl.RenderTransform>
    <UserControl.Resources>
        <local:testconverter x:Key="testconverter"></local:testconverter>
        <local:StateFullscreenConverter x:Key="StateFullscreenConverter"></local:StateFullscreenConverter>
        <local:StateConverter x:Key="StateConverter"></local:StateConverter>
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBoxBase}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="#666"></Setter>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <DockPanel LastChildFill="True">
                            <Rectangle DockPanel.Dock="Left" x:Name="Border" Visibility="Hidden" Fill="#888" Width="2" Height="auto"></Rectangle>
                            <Rectangle DockPanel.Dock="Top" x:Name="Border2" Visibility="Hidden" Fill="#888" Height="2" Width="auto"></Rectangle>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter Property="Visibility" Value="Hidden" TargetName="Border"></Setter>
                                <Setter Property="Visibility" Value="Hidden" TargetName="Border2"></Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="Border"></Setter>
                                <Setter Property="Visibility" Value="Visible" TargetName="Border2"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="Border"></Setter>
                                <Setter Property="Visibility" Value="Visible" TargetName="Border2"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid MinHeight="14" MinWidth="200">
                            <Border
                                Name="PART_Track" 
                                Background="Transparent"
                                BorderBrush="Transparent" />
                            <Border 
                                Name="PART_Indicator" 
                                CornerRadius="2" 
                                Background="{TemplateBinding Foreground}" 
                                BorderBrush="#CCC" 
                                BorderThickness="1" 
                                HorizontalAlignment="Left" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Thumb}" x:Key="InvisibleThumbStyle">
            <Style.Triggers>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource ResourceKey=StateFullscreenConverter}">
                            <Binding Path="State"></Binding>
                            <Binding Path="IsFullscreen"></Binding>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Panel.ZIndex" Value="100"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Panel.ZIndex" Value="-1"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Background="Transparent"></Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Thumb}" x:Key="InvisibleThumbStyleSecond">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Background="Transparent"></Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Thumb}" x:Key="ScaleThumb">
            <Style.Triggers>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource ResourceKey=StateFullscreenConverter}">
                            <Binding Path="State"></Binding>
                            <Binding Path="IsFullscreen"></Binding>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Height" Value="13"></Setter>
            <Setter Property="Width" Value="12"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TemplateBtn" TargetType="Thumb">
                        <Grid Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Rectangle Width="3" Height="3" Fill="WhiteSmoke" Stroke="#777" StrokeThickness="1" Grid.Column="2" Grid.Row="0" RenderOptions.EdgeMode="Unspecified"></Rectangle>
                            <Rectangle Width="3" Height="3" Fill="WhiteSmoke" Stroke="#777" StrokeThickness="1" Grid.Column="1" Grid.Row="1" RenderOptions.EdgeMode="Unspecified"></Rectangle>
                            <Rectangle Width="3" Height="3" Fill="WhiteSmoke" Stroke="#777" StrokeThickness="1" Grid.Column="2" Grid.Row="1" RenderOptions.EdgeMode="Unspecified"></Rectangle>
                            <Rectangle Width="3" Height="3" Fill="WhiteSmoke" Stroke="#777" StrokeThickness="1" Grid.Column="0" Grid.Row="2" RenderOptions.EdgeMode="Unspecified"></Rectangle>
                            <Rectangle Width="3" Height="3" Fill="WhiteSmoke" Stroke="#777" StrokeThickness="1" Grid.Column="1" Grid.Row="2" RenderOptions.EdgeMode="Unspecified"></Rectangle>
                            <Rectangle Width="3" Height="3" Fill="WhiteSmoke" Stroke="#777" StrokeThickness="1" Grid.Column="2" Grid.Row="2" RenderOptions.EdgeMode="Unspecified"></Rectangle>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="templateDrag">
            <TextBlock Text="Drag"></TextBlock>
        </DataTemplate>

        <ControlTemplate x:Key="CtrlTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="Border" BorderThickness="1" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag.Source}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"></Image>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#55222222" TargetName="Border" />
                    <Setter Property="BorderBrush" Value="#aa222222" TargetName="Border" />
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" Value="#77222222" TargetName="Border" />
                    <Setter Property="BorderBrush" Value="#cc222222" TargetName="Border" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type Button}" x:Key="ActionBasicStyle">
            <Setter Property="Height" Value="16"></Setter>
            <Setter Property="Width" Value="16"></Setter>
            <Setter Property="Template" Value="{StaticResource ResourceKey=CtrlTemplate}"></Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="OperationBasicStyle">
            <Setter Property="Height" Value="12"></Setter>
            <Setter Property="Width" Value="12"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Template" Value="{StaticResource ResourceKey=CtrlTemplate}"></Setter>
        </Style>

        <Style x:Key="PresentationBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Height" Value="16"></Setter>
            <Setter Property="Width" Value="16"></Setter>
            <Setter Property="Visibility" Value="Visible"></Setter>
            <Setter Property="Template" Value="{StaticResource ResourceKey=CtrlTemplate}"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=HasComponentPresentation, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="false">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="OperationMaxMinStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=State, Converter={StaticResource ResourceKey=StateConverter}, Mode=OneWay}" Value="False">
                    <Setter Property="ToolTip" Value="Maximize"></Setter>
                    <Setter Property="Content">
                        <Setter.Value>
                            <state:BinComponentAction>LastState</state:BinComponentAction>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Tag">
                        <Setter.Value>
                            <Image Source="/WorkspaceManager;component/View/Image/maxi.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"></Image>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=State, Converter={StaticResource ResourceKey=StateConverter}, Mode=OneWay}" Value="True">
                    <Setter Property="Content">
                        <Setter.Value>
                            <model:BinComponentState>Min</model:BinComponentState>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Tag">
                <Setter.Value>
                    <Image Source="/WorkspaceManager;component/View/Image/minimize.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"></Image>
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Minimize"></Setter>
            <Setter Property="Height" Value="12"></Setter>
            <Setter Property="Width" Value="12"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Template" Value="{StaticResource ResourceKey=CtrlTemplate}"></Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="RepeatableButtonStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsRepeatable, Mode=OneWay}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Setter Property="Content" Value="{x:Null}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Repeat, Mode=OneWay}" Value="False">
                    <Setter Property="Tag">
                        <Setter.Value>
                            <Image Source="/WorkspaceManager;component/View/Image/pause.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Content">
                        <Setter.Value>
                            <sys:Boolean>True</sys:Boolean>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Tag">
                <Setter.Value>
                    <Image Source="/WorkspaceManager;component/View/Image/play.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Content">
                <Setter.Value>
                    <sys:Boolean>False</sys:Boolean>
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="Repeat"></Setter>
            <Setter Property="Height" Value="12"></Setter>
            <Setter Property="Width" Value="12"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Template" Value="{StaticResource ResourceKey=CtrlTemplate}"></Setter>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="ICMButtonStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsICMaster, Mode=OneWay}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                    <Setter Property="Tag" Value="{x:Null}"></Setter>
                    <Setter Property="Content" Value="{x:Null}"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="ToolTip" Value="Show IControls"></Setter>
            <Setter Property="Height" Value="12"></Setter>
            <Setter Property="Width" Value="12"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Template" Value="{StaticResource ResourceKey=CtrlTemplate}"></Setter>
        </Style>

        <Style x:Key="WindowStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource ResourceKey=StateFullscreenConverter}">
                            <Binding Path="State"></Binding>
                            <Binding Path="IsFullscreen"></Binding>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Height" Value="80"></Setter>
                    <Setter Property="Width" Value="80"></Setter>
                </DataTrigger>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource ResourceKey=StateFullscreenConverter}">
                            <Binding Path="State"></Binding>
                            <Binding Path="IsFullscreen"></Binding>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Height" Value="{Binding Path=WindowHeight}"></Setter>
                    <Setter Property="Width" Value="{Binding Path=WindowWidth}"></Setter>
                    <Setter Property="MinHeight" Value="200"></Setter>
                    <Setter Property="MinWidth" Value="300"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ActionBorderStyle" TargetType="{x:Type Border}">
            <Style.Triggers>
                <DataTrigger Value="True">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource ResourceKey=StateFullscreenConverter}">
                            <Binding Path="State"></Binding>
                            <Binding Path="IsFullscreen"></Binding>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <MultiBinding Converter="{StaticResource ResourceKey=StateFullscreenConverter}">
                            <Binding Path="State"></Binding>
                            <Binding Path="IsFullscreen"></Binding>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DragBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="Transparent"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsConnectorDragStarted}" Value="True">
                    <Setter Property="BorderBrush" Value="#99FFFFFF"></Setter>
                    <Setter Property="Background" Value="#55FFFFFF"></Setter>
                    <Setter Property="BorderThickness" Value="1"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="ContentPresenterStyle" TargetType="{x:Type ContentPresenter}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsFullscreen}" Value="True">
                    <Setter Property="Content" Value="{Binding Path=Icon, Mode=OneTime}"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Content" Value="{Binding Path=ActivePresentation, UpdateSourceTrigger=PropertyChanged}"></Setter>
        </Style>

        <x:Array Type="{x:Type Button}" x:Key="Actions">
            <Button ToolTip="Settings" Style="{StaticResource ResourceKey=ActionBasicStyle}" Click="ActionHandler">
                <Button.Tag>
                    <Image Source="/WorkspaceManager;component/View/Image/setting.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"></Image>
                </Button.Tag>
                <model:BinComponentState>Setting</model:BinComponentState>
            </Button>

            <Button ToolTip="Log" Style="{StaticResource ResourceKey=ActionBasicStyle}" Click="ActionHandler">
                <Button.Tag>
                    <Image Source="/WorkspaceManager;component/View/Image/log.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"></Image>
                </Button.Tag>
                <model:BinComponentState>Log</model:BinComponentState>
            </Button>

            <Button ToolTip="Data" Style="{StaticResource ResourceKey=ActionBasicStyle}" Click="ActionHandler" >
                <Button.Tag>
                    <Image Source="/WorkspaceManager;component/View/Image/data.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"></Image>
                </Button.Tag>
                <model:BinComponentState>Data</model:BinComponentState>
            </Button>

            <Button ToolTip="Presentation" Style="{StaticResource ResourceKey=PresentationBtnStyle}" Click="ActionHandler">
                <Button.Tag>
                    <Image Source="/WorkspaceManager;component/View/Image/presentation.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"></Image>
                </Button.Tag>
                <model:BinComponentState>Presentation</model:BinComponentState>
            </Button>
        </x:Array>

        <x:Array Type="{x:Type ButtonBase}" x:Key="Operations">
            <ToggleButton x:Name="IControlButton" Style="{StaticResource ResourceKey=ICMButtonStyle}" IsChecked="{Binding Path=IsICPopUpOpen, Mode=TwoWay}">
                <ToggleButton.Tag>
                    <Image Source="/WorkspaceManager;component/View/Image/icm.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>
                </ToggleButton.Tag>
            </ToggleButton>

            <Button Style="{StaticResource ResourceKey=RepeatableButtonStyle}" Click="RepeatHandler"></Button>

            <Button Style="{StaticResource ResourceKey=OperationMaxMinStyle}" Click="ActionHandler"></Button>

            <Button Style="{StaticResource ResourceKey=OperationBasicStyle}" Click="CloseClick">
                <Button.Tag>
                    <Image Source="/WorkspaceManager;component/View/Image/delete.png" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>
                </Button.Tag>
            </Button>
        </x:Array>

        <Style x:Key="SelectGridStyle" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1" Duration="0:0:0.1" />
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1" Duration="0:0:0.1" />
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleX)"
                                                 To="1.5" Duration="0:0:0.1" />
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)"
                                                 To="1.5" Duration="0:0:0.1" />
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0" Duration="0:0:0.1" />
                                
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Opacity" Value="0"></Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform></ScaleTransform>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ErrorEllStyle" TargetType="Rectangle">
            <Setter Property="Fill" Value="#88ff0100"></Setter>
            <Setter Property="Opacity" Value="0"></Setter>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsErrorDisplayVisible}" Value="True"></Condition>
                    </MultiDataTrigger.Conditions>

                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard Name="ErrorAnimation">
                            <Storyboard RepeatBehavior="5" AutoReverse="True">
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" Duration="0:0:2" />
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <StopStoryboard BeginStoryboardName="ErrorAnimation"></StopStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Timeline.DesiredFrameRate="5"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0" Duration="0:0:2" />

                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <bin:WidthConverter x:Key="WidthConverter"></bin:WidthConverter>
        
    </UserControl.Resources>
    
    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Style="{StaticResource ResourceKey=SelectGridStyle}" RenderTransformOrigin="0.5,0.5" Margin="0" Background="#88FFFFFF" IsHitTestVisible="False">
            <Grid.Effect>
                <DropShadowEffect ShadowDepth="0" BlurRadius="5" Opacity="0.35"></DropShadowEffect>
            </Grid.Effect>
            <Path Data="M 0,0 L 0,5 L 0,0 L 5,0 L 0,0" StrokeThickness="2" Stroke="Black" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="2"></Path>
            <Path Data="M 5,5 L 0,5 L 5,5 L 5,0 L 5,5" StrokeThickness="2" Stroke="Black" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="2"></Path>
            <Path Data="M 0,5 L 0,0 L 0,5 L 5,5 L 0,5" StrokeThickness="2" Stroke="Black" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="2"></Path>
            <Path Data="M 5,0 L 0,0 L 5,0 L 5,5 L 5,0" StrokeThickness="2" Stroke="Black" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="2"></Path>
        </Grid>

        <Grid RenderTransformOrigin="0.5,0.5" Margin="0" IsHitTestVisible="False">
            <Rectangle Style="{StaticResource ResourceKey=ErrorEllStyle}">
                <Rectangle.Effect>
                    <BlurEffect Radius="30"></BlurEffect>
                </Rectangle.Effect>
            </Rectangle>
        </Grid>

        <Grid Grid.Row="0">
            <!--##########Definitions##########-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="18"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="18"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="18"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="18"></RowDefinition>
            </Grid.RowDefinitions>
            <!--##########/Definitions##########-->
        
            <!--##########Docking Panels##########-->
            <Border Style="{StaticResource ResourceKey=DragBorderStyle}" Grid.Column="0" Grid.Row="1">
                <ItemsControl x:Name="West" ItemsSource="{Binding Path=WestConnectorCollection}" 
                              PreviewDrop="PreviewDropHandler">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:NSWEStackPanel Orientation="Vertical" PanelOrientation="West" Background="#01000000"></local:NSWEStackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Border>

            <Border Style="{StaticResource ResourceKey=DragBorderStyle}" Grid.Column="2" Grid.Row="1"> 
                <ItemsControl x:Name="East" ItemsSource="{Binding Path=EastConnectorCollection}" 
                              PreviewDrop="PreviewDropHandler">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:NSWEStackPanel Orientation="Vertical" PanelOrientation="East" Background="#01000000"></local:NSWEStackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Border>

            <Border Style="{StaticResource ResourceKey=DragBorderStyle}" Grid.Column="1" Grid.Row="0">
                <ItemsControl x:Name="North" ItemsSource="{Binding Path=NorthConnectorCollection}" 
                              PreviewDrop="PreviewDropHandler">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:NSWEStackPanel Orientation="Horizontal" PanelOrientation="North" Background="#01000000"></local:NSWEStackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Border>

            <Border Style="{StaticResource ResourceKey=DragBorderStyle}" Grid.Column="1" Grid.Row="2">
                <ItemsControl x:Name="South" ItemsSource="{Binding Path=SouthConnectorCollection}" 
                              PreviewDrop="PreviewDropHandler">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <local:NSWEStackPanel Orientation="Horizontal" PanelOrientation="South" Background="#01000000"></local:NSWEStackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Border>

            <!--##########/Docking Panels##########-->


            <!--##########Window##########-->
            <Border CornerRadius="5" BorderThickness="2" BorderBrush="#444" Grid.Row="1" Grid.Column="1">
                <Border x:Name="Window" Style="{StaticResource ResourceKey=WindowStyle}" CornerRadius="5" BorderThickness="3">
                    <Grid>
                        <!--##########Definitions##########-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="16"></RowDefinition>
                            <!--<RowDefinition Height="16"></RowDefinition>-->
                        </Grid.RowDefinitions>
                        <!--##########/Definitions##########-->

                        <!--##########Window Titlebar##########-->
                        <Rectangle Fill="{Binding ElementName=Window, Path=BorderBrush}" Height="16" VerticalAlignment="Top" Grid.Column="0" Grid.Row="0"></Rectangle>
                    
                        <DockPanel LastChildFill="True" Grid.Column="0" Grid.Row="0">
                    
                            <Border Background="{Binding ElementName=Window, Path=BorderBrush}" Style="{StaticResource ResourceKey=ActionBorderStyle}" Padding="0,0,7,0" CornerRadius="0,0,10,0" DockPanel.Dock="Left">
                                <ItemsControl x:Name="ActionsItemsControl" ItemsSource="{StaticResource ResourceKey=Actions}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Border>

                            <ItemsControl x:Name="OperationsItemsControl" ItemsSource="{StaticResource ResourceKey=Operations}" HorizontalAlignment="Right" VerticalAlignment="Top" DockPanel.Dock="Right">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"></StackPanel>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>

                            <Grid>
                                <TextBlock Text="{Binding Path=FunctionName}" FontFamily="Tahoma" FontWeight="ExtraBold" TextTrimming="CharacterEllipsis" TextAlignment="Center" Foreground="#666"></TextBlock>
                        
                                <Thumb x:Name="TitleThumb" Style="{StaticResource ResourceKey=InvisibleThumbStyleSecond}" Grid.Column="0" Grid.Row="1"
                                    DragDelta="PositionDragDeltaHandler"></Thumb>
                            </Grid>
                    
                        </DockPanel>
                        <!--##########/Window Titlebar##########-->

                        <!--##########Content##########-->
                        <ContentPresenter Style="{StaticResource ResourceKey=ContentPresenterStyle}" Grid.Column="0" Grid.Row="1">
                    
                        </ContentPresenter>
                        <!--##########/Content##########-->

                        <ContentPresenter x:Name="Notifier" Content="{Binding Path=LogNotifier}" Grid.Column="0" Grid.Row="2"></ContentPresenter>
                        
                        <Thumb x:Name="ContentThumb" Style="{StaticResource ResourceKey=InvisibleThumbStyle}" Grid.Column="0" Grid.Row="1"
                               DragDelta="PositionDragDeltaHandler"></Thumb>

                        <Thumb x:Name="ScaleThumb" Style="{StaticResource ResourceKey=ScaleThumb}" Margin="2" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2"
                               Cursor="SizeNWSE" DragDelta="ScaleDragDeltaHandler"></Thumb>
                    </Grid>
                </Border>
            </Border>
            <!--##########/Window##########-->
        </Grid>
        
        <!--##########Name##########-->
        <local:CustomTextBox Style="{StaticResource ResourceKey=TextBoxStyle}" ToolTip="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text}"
                             Text="{Binding Path=CustomName, Mode=TwoWay}" Width="{Binding ElementName=Window, Path=ActualWidth}" IsSelected="{Binding Path=IsSelected}"
                             Grid.Row="2"></local:CustomTextBox>
        <!--##########/Name##########-->
        <ic:BinIControlVisual Connectors="{Binding Path=IControlCollection}" IsOpen="{Binding Path=IsICPopUpOpen, Mode= TwoWay}" 
                              PlacementTarget="{Binding ElementName=OperationsItemsControl}" Placement="Top"></ic:BinIControlVisual>
        <!-- <local:BinLogPopup PlacementTarget="{Binding ElementName=Window}" 
                           Placement="Center" IsOpen="{Binding Path=IsLogPopupOpen, Mode= TwoWay}"></local:BinLogPopup>-->
    </Grid>
</UserControl>
