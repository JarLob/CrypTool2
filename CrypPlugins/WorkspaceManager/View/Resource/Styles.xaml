<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resource/Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}" x:Key="ScalePluginContainerButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Anim">
                            <DoubleAnimation To="1.5" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="1.5" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>
                        <Storyboard x:Key="Anim2">
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border x:Name="Border">
                        <Border.RenderTransform>
                            <ScaleTransform CenterX="10" CenterY="10" x:Name="Scale"></ScaleTransform>
                        </Border.RenderTransform>
                        <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim2}"></BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="BottomBoxBtnStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                    <Border x:Name="Border" BorderThickness="1">
                        <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#55222222" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="#aa222222" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="#77222222" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="#cc222222" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#55ff4d4d" />
                <Setter Property="BorderBrush" Value="#aaff4d4d"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DeletePluginContainerButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Anim">
                            <DoubleAnimation To="2" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="2" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>
                        <Storyboard x:Key="Anim2">
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border x:Name="Border">
                        <Border.RenderTransform>
                            <ScaleTransform CenterX="10" CenterY="10" x:Name="Scale"></ScaleTransform>
                        </Border.RenderTransform>
                        <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim2}"></BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="ImageWrapperThumbStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Thumb">
                    <StackPanel x:Name="Border" Orientation="Vertical" Background="{TemplateBinding Background}">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.LayoutTransform>
                                <RotateTransform Angle="180"></RotateTransform>
                            </StackPanel.LayoutTransform>
                            <Ellipse Width="5" Height="5" Fill="WhiteSmoke" Stroke="#444" StrokeThickness="1"></Ellipse>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.LayoutTransform>
                                <RotateTransform Angle="180"></RotateTransform>
                            </StackPanel.LayoutTransform>
                            <Ellipse Width="5" Height="5" Fill="WhiteSmoke" Stroke="#444" StrokeThickness="1"></Ellipse>
                            <Ellipse Width="5" Height="5" Fill="WhiteSmoke" Stroke="#444" StrokeThickness="1"></Ellipse>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.LayoutTransform>
                                <RotateTransform Angle="180"></RotateTransform>
                            </StackPanel.LayoutTransform>
                            <Ellipse Width="5" Height="5" Fill="WhiteSmoke" Stroke="#444" StrokeThickness="1"></Ellipse>
                            <Ellipse Width="5" Height="5" Fill="WhiteSmoke" Stroke="#444" StrokeThickness="1"></Ellipse>
                            <Ellipse Width="5" Height="5" Fill="WhiteSmoke" Stroke="#444" StrokeThickness="1"></Ellipse>
                        </StackPanel>

                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="NormalThumbStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Thumb">
                    <Grid Background="White" Opacity="0.01">
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProgressbarStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="10" MinWidth="13">
                        <Border 
            Name="PART_Track" 
            CornerRadius="5" 
            Background="{TemplateBinding Background}"
            BorderBrush="Transparent"
            BorderThickness="1" />
                        <Border 
            Name="PART_Indicator" 
            CornerRadius="5" 
            Background="{TemplateBinding Foreground}" 
            BorderBrush="#4eb34e" 
            BorderThickness="1.5" 
            HorizontalAlignment="Left" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="OptionPluginContainerButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Anim">
                            <DoubleAnimation To="1.15" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="1.15" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>
                        <Storyboard x:Key="Anim2">
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border x:Name="Border">
                        <Border.RenderTransform>
                            <ScaleTransform CenterX="15" CenterY="15" x:Name="Scale"></ScaleTransform>
                        </Border.RenderTransform>
                        <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim2}"></BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BasicTextBoxStyle" TargetType="{x:Type TextBoxBase}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#666"></Setter>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                   
                    <DockPanel LastChildFill="True">
                        <Rectangle DockPanel.Dock="Left" x:Name="Border" Visibility="Hidden" Fill="#888" Width="2" Height="auto"></Rectangle>
                        <Rectangle DockPanel.Dock="Top" x:Name="Border2" Visibility="Hidden" Fill="#888" Height="2" Width="auto"></Rectangle>
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Border"></Setter>
                            <Setter Property="Visibility" Value="Hidden" TargetName="Border2"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Border"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="Border2"></Setter>
                        </Trigger>

                        <Trigger Property="CaretBrush" Value="Gray">
                            <Setter Property="Visibility" Value="Visible" TargetName="Border"></Setter>
                            <Setter Property="Visibility" Value="Visible" TargetName="Border2"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SettingsPluginContainerButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Anim">
                            <DoubleAnimation RepeatBehavior="Forever" From="0" To="360" Duration="00:00:2" Storyboard.TargetName="Rotate" Storyboard.TargetProperty="Angle" />
                            <DoubleAnimation To="2" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="2" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>
                        <Storyboard x:Key="Anim2">
                            <DoubleAnimation To="360" Duration="00:00:1" DecelerationRatio="0.2" Storyboard.TargetName="Rotate" Storyboard.TargetProperty="Angle" />
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY" />
                            <DoubleAnimation To="1" Duration="00:00:00.15" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border x:Name="Border">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="10" CenterY="10" x:Name="Scale"></ScaleTransform>
                                <RotateTransform CenterX="10" CenterY="10" x:Name="Rotate"></RotateTransform>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim2}"></BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MinMaxPluginContainerButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Anim" RepeatBehavior="Forever">
                            <DoubleAnimation To="1" Duration="00:00:1.5" Storyboard.TargetName="MouseOverEffect" Storyboard.TargetProperty="Opacity" />
                        </Storyboard>
                        <Storyboard x:Key="Anim2">
                            <DoubleAnimation To="0" Duration="00:00:1.5" Storyboard.TargetName="MouseOverEffect" Storyboard.TargetProperty="Opacity" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Border x:Name="Border">
                        <Border.Effect>
                            <DropShadowEffect x:Name="MouseOverEffect" Color="#c3edff" BlurRadius="10" ShadowDepth="0" RenderingBias="Quality" Opacity="0"></DropShadowEffect>
                        </Border.Effect>
                        <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ResourceKey=Anim2}"></BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Slider-->

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Name="Ellipse" Fill="#444444" Stroke="WhiteSmoke" StrokeThickness="1.5" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Fill" Value="{StaticResource ResourceKey=DarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Name="TrackBackground" Margin="0" CornerRadius="2" Height="4" Grid.Row="1" Background="{StaticResource ResourceKey=LightBrush}" BorderBrush="{StaticResource ResourceKey=NormalBorderBrush}" BorderThickness="1" />
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ResourceKey=SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ResourceKey=SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ResourceKey=SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar Name="BottomTick" SnapsToDevicePixels="True" Grid.Row="2" Fill="WhiteSmoke" Placement="Bottom" Height="4" Visibility="Collapsed" OpacityMask="White"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{DynamicResource HorizontalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Margin" Value="5,5,5,0"></Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="#55FFFFFF"></SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Color="#11555555" Offset="0.0"/>
                            <GradientStop Color="#55444444" Offset="1"/>
                        </GradientStopCollection>
                    </GradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>



    <SolidColorBrush x:Key="StandardBorderBrush2" Color="Transparent" />
    <SolidColorBrush x:Key="StandardBackgroundBrush2" Color="Transparent" />
    <SolidColorBrush x:Key="HoverBorderBrush2" Color="#FFdff0ff" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush2" Color="Transparent" />
    <SolidColorBrush x:Key="SelectedForegroundBrush2" Color="Transparent" />
    <SolidColorBrush x:Key="DisabledForegroundBrush2" Color="#888" />
    <SolidColorBrush x:Key="NormalBrush2" Color="#77dff0ff" />
    <SolidColorBrush x:Key="NormalBorderBrush2" Color="#77dff0ff" />
    <SolidColorBrush x:Key="HorizontalNormalBrush2" Color="#77dff0ff" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush2" Color="#77dff0ff" />

    <LinearGradientBrush x:Key="StandardBrush2" 
			StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#CCC" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush2" Color="#444" />
    <LinearGradientBrush x:Key="PressedBrush2" 
			StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border 
          Name="Border"
          Margin="1" 
          CornerRadius="2" 
          Background="{StaticResource NormalBrush2}"
          BorderBrush="{StaticResource NormalBorderBrush2}"
          BorderThickness="1">
                        <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="#777"
            Data="{Binding Path=Content,
				RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" 
								Value="{StaticResource PressedBrush2}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" 
								Value="{StaticResource DisabledForegroundBrush2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border 
          CornerRadius="2" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" 
			TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>
            <Border
      Grid.RowSpan="3"
      CornerRadius="2" 
      Background="#AA58a6e8" />
            <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track 
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="1,0,1,0"  
          Background="{StaticResource HorizontalNormalBrush2}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush2}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <!-- HorizontalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="HorizontalScrollBar" 
			TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border
      Grid.ColumnSpan="3"
      CornerRadius="2" 
      Background="#AA58a6e8" />
            <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,1,0,1"  
          Background="{StaticResource ResourceKey= NormalBrush2}"
          BorderBrush="{StaticResource ResourceKey= NormalBorderBrush2}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="18"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <!-- Style for overall  ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="10" />
                <Setter Property="Template" 
						Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" 
						Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for overall  ScrollViewer -->
    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="1"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>