<UserControl x:Class="WorkspaceManager.View.Visuals.ConnectorVisual"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:WorkspaceManager.View.Visuals"
             xmlns:base="clr-namespace:WorkspaceManager.View.Base"
             xmlns:model="clr-namespace:WorkspaceManager.Model;assembly=WorkspaceManagerModel"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" IsEnabled="True" Background="#00100000" ClipToBounds="False"
             DataContext="{Binding RelativeSource={x:Static RelativeSource.Self}}">
    <UserControl.Resources>

        <LinearGradientBrush x:Key="BackgroundNormal" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#fff9f5" Offset="0.0"/>
                    <GradientStop Color="#ebe6e2" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundWarning" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#55f9d506" Offset="0.0"/>
                    <GradientStop Color="#55d2a02d" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DescriptionBG" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#71dbe5" Offset="0" />
            <GradientStop Color="#37a1bf" Offset="1" />
            <!--<GradientStop Color="#81c05e" Offset="0" />
            <GradientStop Color="#559e2d" Offset="1" />-->
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundOK" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#557de409" Offset="0.0"/>
                    <GradientStop Color="#55506c30" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundError" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#55e50909" Offset="0.0"/>
                    <GradientStop Color="#556c3030" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style TargetType="{x:Type Border}" x:Key="BorderStyle">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#55ff4d4d" />
                    <Setter Property="BorderBrush" Value="#aaff4d4d"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ConnectorStyle" TargetType="{x:Type Thumb}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsOutgoing}" Value="True">
                    <Setter Property="Grid.Column" Value="1"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Grid.Column" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Path Fill="{Binding Path=FunctionColor}"
                            Data="M18,154.45381 L29.999666,187.66699 40.791059,154.54395 16.89,154.54395 L29.999666,187.66699">
                            <Path.Style>
                                <Style TargetType="{x:Type Path}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMandatory}" Value="true">
                                            <Setter Property="Stroke" Value="Black"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMandatory}" Value="false">
                                            <Setter Property="Stroke" Value="#AAA"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Stroke" Value="#373e43"></Setter>
                                    <Setter Property="Margin" Value="1,1,1,1"></Setter>
                                    <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                    <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                                    <Setter Property="Stretch" Value="Fill"></Setter>
                                    <Setter Property="StrokeThickness" Value="1"></Setter>
                                    <Setter Property="Height" Value="25"></Setter>
                                    <Setter Property="Width" Value="17.5"></Setter>
                                    <Setter Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="270"></RotateTransform>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Path.Style>
                        </Path>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ConversionText" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Yellow</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Foreground" Value="Goldenrod"></Setter>
                    <Setter Property="Text" Value="{Loc ConversionWarning}"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Red</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Foreground" Value="Red"></Setter>
                    <Setter Property="Text" Value="{Loc ConversionStop}"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>NA</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Foreground" Value="Red"></Setter>
                    <Setter Property="Text" Value="{Loc ConversionStop}"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Green</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Foreground" Value="ForestGreen"></Setter>
                    <Setter Property="Text" Value="{Loc ConversionOK}"></Setter>
                </DataTrigger>
            </Style.Triggers>

            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="#555"></Setter>
            <Setter Property="FontSize" Value="21"></Setter>
            <Setter Property="FontFamily" Value="DejaVu Serif"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style>

        <Style x:Key="ConversionTextSec" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Yellow</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Text" Value="{Loc ConversionAmbig}"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Red</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Text" Value="{Loc ConversionNone}"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>NA</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Text" Value="{Loc ConversionSelf}"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Green</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Text" Value="{Loc ConversionSame}"></Setter>
                </DataTrigger>
            </Style.Triggers>

            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Foreground" Value="#333"></Setter>
            <Setter Property="FontSize" Value="11"></Setter>
            <Setter Property="FontFamily" Value="DejaVu Serif"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
        </Style>

        <Border x:Key="NormalTooltipTemplate" BorderBrush="White" BorderThickness="1.5" Width="200" 
                CornerRadius="3" Margin="2" Background="#edf5ff">
            <Border.Effect>
                <DropShadowEffect BlurRadius="5" Opacity="0.5" ShadowDepth="0"></DropShadowEffect>
            </Border.Effect>
            <Grid x:Name="Background" Background="{StaticResource ResourceKey=BackgroundNormal}" Margin="2">
                <Grid HorizontalAlignment="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition>
                                <ColumnDefinition.Style>
                                    <Style TargetType="ColumnDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsOutgoing}" Value="True">
                                                <Setter Property="Width" Value="auto"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Width" Value="50"></Setter>
                                    </Style>
                                </ColumnDefinition.Style>
                            </ColumnDefinition>
                            <ColumnDefinition>
                                <ColumnDefinition.Style>
                                    <Style TargetType="ColumnDefinition">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsOutgoing}" Value="True">
                                                <Setter Property="Width" Value="50"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Width" Value="auto"></Setter>
                                    </Style>
                                </ColumnDefinition.Style>
                            </ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsOutgoing}" Value="True">
                                            <Setter Property="Grid.Column" Value="0"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Grid.Column" Value="1"></Setter>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock FontWeight="Bold" FontSize="12" Foreground="#555" Text="{Binding Path=Caption}" TextTrimming="CharacterEllipsis"></TextBlock>
                            <TextBlock FontSize="11" Foreground="{Binding Path=FunctionColor}" Text="{Binding Path=TypeName}" TextTrimming="CharacterEllipsis"></TextBlock>
                        </StackPanel>
                        <Thumb Style="{StaticResource ResourceKey=ConnectorStyle}"></Thumb>
                    </Grid>
                    <TextBlock Height="100" Width="200" Background="#CCFFFFFF" Text="{Binding Path=Data}" 
                               TextTrimming="CharacterEllipsis" TextWrapping="Wrap" Grid.Row="1">

                    </TextBlock>
                    <Border Background="{StaticResource ResourceKey=DescriptionBG}" Grid.Row="2">
                        <TextBlock Text="{Binding Path=Description}" Foreground="White" FontSize="10" LineHeight="11" 
                                   TextAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"></TextBlock>
                    </Border>
                </Grid>
            </Grid>
        </Border>

        <Style x:Key="LinkingGridBG" TargetType="Grid">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Yellow</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Background" Value="{StaticResource ResourceKey=BackgroundWarning}"></Setter>
                    <Setter Property="Tag" Value="/WorkspaceManager;component/View/Images/WMIcons/warn01.png"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Red</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Background" Value="{StaticResource ResourceKey=BackgroundError}"></Setter>
                    <Setter Property="Tag" Value="/WorkspaceManager;component/View/Images/WMIcons/error01.png"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>NA</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Background" Value="{StaticResource ResourceKey=BackgroundError}"></Setter>
                    <Setter Property="Tag" Value="/WorkspaceManager;component/View/Images/WMIcons/error01.png"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>Green</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Background" Value="{StaticResource ResourceKey=BackgroundOK}"></Setter>
                    <Setter Property="Tag" Value="/WorkspaceManager;component/View/Images/WMIcons/ok01.png"></Setter>
                </DataTrigger>
            </Style.Triggers>
            
        </Style>

        <Style x:Key="LinkingPopupVisibility" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                    <DataTrigger.Value>
                        <model:ConversionLevel>NA</model:ConversionLevel>
                    </DataTrigger.Value>
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Border x:Key="LinkingTooltipTemplate" Style="{StaticResource ResourceKey=LinkingPopupVisibility}" BorderBrush="White" BorderThickness="1.5" Width="200" Height="120" CornerRadius="3" Margin="2" Background="#edf5ff">
            <Border.Effect>
                <DropShadowEffect BlurRadius="5" Opacity="0.5" ShadowDepth="0"></DropShadowEffect>
            </Border.Effect>
            <Grid x:Name="BGRoot" Style="{StaticResource ResourceKey=LinkingGridBG}" Margin="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="60"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                    
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Height="50" Width="50" Margin="5" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid, AncestorLevel=2}, Path=Tag}">
                        <Image.Effect>
                            <DropShadowEffect ShadowDepth="0" BlurRadius="2" Opacity="0.5"></DropShadowEffect>
                        </Image.Effect>
                    </Image>
                    <TextBlock Grid.Column="1" Style="{StaticResource ResourceKey=ConversionText}"></TextBlock>
                </Grid>

                <TextBlock Grid.Row="1" TextWrapping="Wrap" Style="{StaticResource ResourceKey=ConversionTextSec}"></TextBlock>
            </Grid>
        </Border>

        <StackPanel x:Key="Out" Orientation="Horizontal" HorizontalAlignment="Center">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock FontWeight="Bold" FontSize="12" Foreground="#555" Text="{Binding Path=Caption}" TextTrimming="CharacterEllipsis"></TextBlock>
                <TextBlock FontSize="11" Foreground="{Binding Path=FunctionColor}" Text="{Binding Path=TypeName}" TextTrimming="CharacterEllipsis"></TextBlock>
            </StackPanel>
            <Thumb Style="{StaticResource ResourceKey=ConnectorStyle}"></Thumb>
        </StackPanel>

        <StackPanel x:Key="In" Orientation="Horizontal" HorizontalAlignment="Center">
            <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock FontWeight="Bold" FontSize="12" Foreground="#555" Text="{Binding Path=Caption}" TextTrimming="CharacterEllipsis"></TextBlock>
                <TextBlock FontSize="11" Foreground="{Binding Path=FunctionColor}" Text="{Binding Path=TypeName}" TextTrimming="CharacterEllipsis"></TextBlock>
            </StackPanel>
            <Thumb Style="{StaticResource ResourceKey=ConnectorStyle}"></Thumb>
        </StackPanel>

    </UserControl.Resources>
    <Grid>
        <Path RenderTransformOrigin="0.5,0.35" Data="M18,154.45381 L29.999666,187.66699 40.791059,154.54395 16.89,154.54395 L29.999666,187.66699" ClipToBounds="False">
            <Path.Style>
                <Style TargetType="{x:Type Path}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Marked}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="Anim">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation Timeline.DesiredFrameRate="5" To="3"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)"
                                            From="1" Duration="0:0:1" />
                                                        <DoubleAnimation Timeline.DesiredFrameRate="5" To="3"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)"
                                            From="1" Duration="0:0:1" />
                                                        <DoubleAnimation Timeline.DesiredFrameRate="5" From="1"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="Anim"></StopStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Timeline.DesiredFrameRate="5"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)"
                                            To="3" Duration="0:0:1" />
                                                        <DoubleAnimation Timeline.DesiredFrameRate="5"
                                            Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)"
                                            To="3" Duration="0:0:1" />
                                                        <DoubleAnimation Timeline.DesiredFrameRate="5"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0" Duration="0:0:1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                            <DataTrigger.Value>
                                <model:ConversionLevel>Green</model:ConversionLevel>
                            </DataTrigger.Value>
                            <Setter Property="Stroke" Value="Green"></Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=CVLevel.Level}">
                            <DataTrigger.Value>
                                <model:ConversionLevel>Yellow</model:ConversionLevel>
                            </DataTrigger.Value>
                            <Setter Property="Stroke" Value="Yellow"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Opacity" Value="0"></Setter>
                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform></ScaleTransform>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Stroke" Value="Yellow"></Setter>
                    <Setter Property="Height" Value="15"></Setter>
                    <Setter Property="Width" Value="10"></Setter>
                    <Setter Property="Stretch" Value="Fill"></Setter>
                    <Setter Property="StrokeThickness" Value="1"></Setter>
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TransformGroup>
                                <RotateTransform Angle="{Binding RotationAngle}"></RotateTransform>
                            </TransformGroup>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Path.Style>
        </Path>
        <Border x:Name="Root" Style="{StaticResource ResourceKey=BorderStyle}">
            <Path Name="ConnectorGeo" Fill="{Binding Path=FunctionColor}" MouseEnter="MouseEnterHandler" MouseLeave="MouseLeaveHandler"
                Data="M18,154.45381 L29.999666,187.66699 40.791059,154.54395 16.89,154.54395 L29.999666,187.66699">
                <Path.Style>
                    <Style TargetType="{x:Type Path}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsMandatory}" Value="true">
                                <Setter Property="Stroke" Value="Black"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsMandatory}" Value="false">
                                <Setter Property="Stroke" Value="#AAA"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Cursor" Value="Arrow"></Setter>
                        <Setter Property="Stroke" Value="#373e43"></Setter>
                        <Setter Property="Margin" Value="1,1,1,1"></Setter>
                        <Setter Property="VerticalAlignment" Value="Center"></Setter>
                        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
                        <Setter Property="Stretch" Value="Fill"></Setter>
                        <Setter Property="StrokeThickness" Value="1"></Setter>
                        <Setter Property="Height" Value="15"></Setter>
                        <Setter Property="Width" Value="10"></Setter>
                        <Setter Property="LayoutTransform">
                            <Setter.Value>
                                <RotateTransform Angle="{Binding RotationAngle}"></RotateTransform>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Path.Style>
            </Path>
        </Border>
        <Popup x:Name="ToolTip" Placement="Mouse" PopupAnimation="Fade" AllowsTransparency="True">
            <Popup.Style>
                <Style TargetType="Popup">
                    <Style.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLinking}" Value="True"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Child" Value="{StaticResource ResourceKey= LinkingTooltipTemplate}"></Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsLinking}" Value="False"></Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Child" Value="{StaticResource ResourceKey= NormalTooltipTemplate}"></Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Popup.Style>
        </Popup>
    </Grid>
</UserControl>
