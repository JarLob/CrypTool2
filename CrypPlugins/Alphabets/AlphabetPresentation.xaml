<UserControl x:Class="Cryptool.Alphabets.AlphabetPresentation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Cryptool.Alphabets"
    Height="Auto" Width="auto" DataContext="{Binding RelativeSource={x:Static RelativeSource.Self}}">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}" x:Key="ButtonStyleSec">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Editable, Mode=OneWay}" Value="True">
                    <Setter Property="Opacity" Value="1"></Setter>
                    <Setter Property="IsEnabled" Value="true"></Setter>
                    <Setter Property="IsHitTestVisible" Value="true"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Editable, Mode=OneWay}" Value="False">
                    <Setter Property="Opacity" Value="0.5"></Setter>
                    <Setter Property="IsEnabled" Value="false"></Setter>
                    <Setter Property="IsHitTestVisible" Value="false"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Width" Value="35"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                        <Border x:Name="Border" BorderThickness="1">
                            <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#ff9600" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ff9600" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#ffb142" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ffb142" TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Width" Value="35"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                        <Border x:Name="Border" BorderThickness="1">
                            <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#ff9600" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ff9600" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#ffb142" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ffb142" TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        
        <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonStyle">
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Width" Value="35"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TemplateBtn" TargetType="ToggleButton">
                        <Border x:Name="Border" BorderThickness="1">
                            <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#ff9600" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ff9600" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#ffb142" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ffb142" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="#ffb142" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ffb142" TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="BackgroundMouseOver" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#ebf4ff" Offset="0.0"/>
                    <GradientStop Color="#c2dcfd" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundIsFullscreen" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#fff5eb" Offset="0.0"/>
                    <GradientStop Color="#fddfc2" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundNormal" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#fff9f5" Offset="0.0"/>
                    <GradientStop Color="#ebe6e2" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBoxBase}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedAlphabet.Editable, Mode=OneWay}" Value="True">
                    <Setter Property="IsEnabled" Value="true"></Setter>
                    <Setter Property="IsHitTestVisible" Value="true"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedAlphabet.Editable, Mode=OneWay}" Value="False">
                    <Setter Property="IsEnabled" Value="false"></Setter>
                    <Setter Property="IsHitTestVisible" Value="false"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ClipToBounds" Value="False"></Setter>
            <Setter Property="Foreground" Value="#666"></Setter>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <DockPanel LastChildFill="True" ClipToBounds="False">
                            <Rectangle DockPanel.Dock="Left" x:Name="Border" Visibility="Hidden" Fill="#888" Width="2" Height="auto"></Rectangle>
                            <Rectangle DockPanel.Dock="Top" x:Name="Border2" Visibility="Hidden" Fill="#888" Height="2" Width="auto"></Rectangle>
                            <Border Margin="0" x:Name="PART_ContentHost" ClipToBounds="False"/>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="False">
                                <Setter Property="Visibility" Value="Hidden" TargetName="Border"></Setter>
                                <Setter Property="Visibility" Value="Hidden" TargetName="Border2"></Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="Border"></Setter>
                                <Setter Property="Visibility" Value="Visible" TargetName="Border2"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="Border"></Setter>
                                <Setter Property="Visibility" Value="Visible" TargetName="Border2"></Setter>
                                <Setter Property="Fill" Value="#bbb" TargetName="Border"></Setter>
                                <Setter Property="Fill" Value="#bbb" TargetName="Border2"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComponentListStyle" TargetType="{x:Type ListView}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
            </Style.Resources>
            <Setter Property="Margin" Value="5,5,5,5"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Grid.RowDefinitions>
                                <!--<RowDefinition Height="30"/>-->
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" HorizontalContentAlignment="Stretch" Grid.Row="1">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type local:AlphabetItem}">
                        <Border x:Name="Border" BorderBrush="White" BorderThickness="1.5" CornerRadius="3" Margin="2" Background="#edf5ff">
                            <Grid x:Name="Background" Background="{StaticResource ResourceKey=BackgroundNormal}" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <!--<ColumnDefinition Width="40"/>-->
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                
                                <!--<Border BorderThickness="1.5" BorderBrush="#888" CornerRadius="5">
                                    
                                </Border>-->
                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Path=Title}" TextTrimming="WordEllipsis" Foreground="#333333" FontSize="12" Grid.Column="0"
                                               FontFamily="Verdana" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                    <Border Background="#55ffffff" Margin="5" Grid.Column="1">
                                        <Button Style="{StaticResource ResourceKey=ButtonStyleSec}" 
                                                Height="20" Width="20" Click="Button_Click"
                                                 VerticalContentAlignment="Center" VerticalAlignment="Center">
                                            <Image Height="16" Source="del.png"></Image>
                                        </Button>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#7da2ce"></Setter>
                                <Setter TargetName="Background" Property="Background" Value="{StaticResource ResourceKey=BackgroundMouseOver}"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#cea57d"></Setter>
                                <Setter TargetName="Background" Property="Background" Value="{StaticResource ResourceKey=BackgroundIsFullscreen}"></Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="Background" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#eee" Offset="0.0"/>
                    <GradientStop Color="#ccc" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ConfigStyle" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsConfigOpen, Mode=OneWay}" Value="True">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsConfigOpen, Mode=OneWay}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid Width="Auto" Height="Auto" Background="{StaticResource ResourceKey=Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MaxWidth="150"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition MaxWidth="250" Width="auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border Background="#11222222" Grid.ColumnSpan="3">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Alphabets" Padding="5" 
                           FontFamily="pack://application:,,,/CrypPluginBase;component/Miscellaneous/#Yanone Kaffeesatz" FontSize="24"></TextBlock>
                <Border Background="#55ffffff" Margin="5">
                    <ToggleButton Height="25" Width="25"
                              IsChecked="{Binding Path=IsConfigOpen, Mode=TwoWay}" VerticalAlignment="Center"
                              Style="{StaticResource ResourceKey=ToggleButtonStyle}" HorizontalAlignment="Center">
                        <Image Height="20" Source="pluginSetting-small.png"></Image>
                    </ToggleButton>
                </Border>
                <Border Background="#55ffffff" Margin="5">
                    <Button Style="{StaticResource ResourceKey=ButtonStyle}" Height="25" Width="25" Click="Button_Click_1"
                            VerticalContentAlignment="Center" VerticalAlignment="Center">
                        <Image Height="20" Source="add.png"></Image>
                    </Button>
                </Border>
            </StackPanel>
        </Border>

        <Border Grid.Column="0" Grid.Row="1" Background="#bbffffff">
            <ListView  x:Name="AlphabetList" Grid.Row="1" Style="{StaticResource ResourceKey=ComponentListStyle}" ItemsSource="{Binding Path=Alphabets}"
                        SelectionMode="Single"  SelectionChanged="SelectionChanged"></ListView>
        </Border>

        <Border Grid.Column="1" Grid.Row="1" Background="#80ffffff">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBox Text="{Binding Path=SelectedAlphabet.Title, Mode=TwoWay}" Style="{StaticResource ResourceKey=TextBoxStyle}" Foreground="#222"
                         FontFamily="Consolas" FontSize="24" TextAlignment="Center"
                         Background="Transparent">
                </TextBox>
                <TextBox Grid.Row="1" Background="Transparent" VerticalAlignment="Stretch" Style="{StaticResource ResourceKey=TextBoxStyle}"  
                         Text="{Binding Path=SelectedAlphabet.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" FontFamily="Consolas" FontSize="22">
                    
                </TextBox>
            </Grid>
        </Border>

        <Border Grid.Column="2" Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="1" Style="{StaticResource ResourceKey=ConfigStyle}">
                    <Border>
                        <StackPanel Margin="5">
                            <TextBlock Text="Working Alphabet" Padding="7" FontFamily="Verdana" FontSize="13"></TextBlock>
                            <ComboBox SelectedIndex="0" ItemsSource="{Binding Path=Basic}" FontFamily="Verdana" FontSize="12">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=Name}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}},
                                                                Path=DataContext.IsActive}" Value="True">
                                                            <Setter Property="Foreground" Value="Navy"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Add Lowercase" Padding="5" Margin="5"></Button>
                                <Button Content="Add Uppercase" Padding="5" Margin="5"></Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>

                    <StackPanel Orientation="Vertical" Margin="5">

                        <Button Content="To Lowercase" Padding="5" Margin="0,5,0,0"></Button>
                        <Button Content="To Uppercase" Padding="5" Margin="0,5,0,0"></Button>
                    </StackPanel>
                </StackPanel>
            </Grid>
            
        </Border>
    </Grid>
</UserControl>
