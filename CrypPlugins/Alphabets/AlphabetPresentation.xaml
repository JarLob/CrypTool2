<UserControl x:Class="Cryptool.Alphabets.AlphabetPresentation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Cryptool.Alphabets"
    Height="Auto" Width="auto" DataContext="{Binding RelativeSource={x:Static RelativeSource.Self}}">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}" x:Key="ButtonStyleSec">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Editable, Mode=OneWay}" Value="True">
                    <Setter Property="Opacity" Value="1"></Setter>
                    <Setter Property="IsEnabled" Value="true"></Setter>
                    <Setter Property="IsHitTestVisible" Value="true"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Editable, Mode=OneWay}" Value="False">
                    <Setter Property="Opacity" Value="0.5"></Setter>
                    <Setter Property="IsEnabled" Value="false"></Setter>
                    <Setter Property="IsHitTestVisible" Value="false"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Width" Value="35"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                        <Border x:Name="Border" BorderThickness="1">
                            <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#ff9600" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ff9600" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#ffb142" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ffb142" TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="ButtonStyle">
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Width" Value="35"></Setter>
            <Setter Property="Height" Value="35"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TemplateBtn" TargetType="Button">
                        <Border x:Name="Border" BorderThickness="1">
                            <ContentPresenter Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" Content="{TemplateBinding Content}"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#ff9600" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ff9600" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#ffb142" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#ffb142" TargetName="Border" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonStyle">
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="TemplateBtn" TargetType="ToggleButton">
                        <Border x:Name="Border" BorderThickness="1">
                            <Image x:Name="image" Source="unchecked.png"></Image>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#ff9600" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#666" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="#ffb142" TargetName="Border" />
                                <Setter Property="BorderBrush" Value="#aaa" TargetName="Border" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Source" Value="checked.png" TargetName="image" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Source" Value="unchecked.png" TargetName="image" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="BackgroundMouseOver" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#ebf4ff" Offset="0.0"/>
                    <GradientStop Color="#c2dcfd" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundIsFullscreen" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#fff5eb" Offset="0.0"/>
                    <GradientStop Color="#fddfc2" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundNormal" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#fff9f5" Offset="0.0"/>
                    <GradientStop Color="#ebe6e2" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BackgroundNormal2" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#99eeeeee" Offset="0.0"/>
                    <GradientStop Color="#99cccccc" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <DropShadowEffect x:Key="effect" Direction="0" ShadowDepth="0.5" BlurRadius="5"></DropShadowEffect>

        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBoxBase}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedAlphabet.Editable, Mode=OneWay}" Value="True">
                    <Setter Property="IsEnabled" Value="true"></Setter>
                    <Setter Property="IsHitTestVisible" Value="true"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=SelectedAlphabet.Editable, Mode=OneWay}" Value="False">
                    <Setter Property="IsEnabled" Value="false"></Setter>
                    <Setter Property="IsHitTestVisible" Value="false"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ClipToBounds" Value="False"></Setter>
            <Setter Property="Foreground" Value="#666"></Setter>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Background" Value="#ddffffff"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">

                        <Border Margin="5" x:Name="PART_ContentHost" ClipToBounds="False" Background="#eeffffff" Padding="5"
                                CornerRadius="5" BorderBrush="#888" BorderThickness="1">
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="False" >
                                <Setter Property="Effect" Value="{x:Null}" TargetName="PART_ContentHost"></Setter>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Effect" Value="{StaticResource ResourceKey=effect}" TargetName="PART_ContentHost"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Effect" Value="{StaticResource ResourceKey=effect}" TargetName="PART_ContentHost"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="BackgroundIsSelected" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#bbe3b6" Offset="0.0"/>
                    <GradientStop Color="#7fe383" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ComponentListStyle" TargetType="{x:Type ListView}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
            </Style.Resources>
            <Setter Property="Margin" Value="5,5,5,5"></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Grid.RowDefinitions>
                                <!--<RowDefinition Height="30"/>-->
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" HorizontalContentAlignment="Stretch" Grid.Row="1">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type local:AlphabetItem}">
                        <Border x:Name="Border" BorderBrush="White" BorderThickness="1.5" CornerRadius="3" Margin="2" Background="#edf5ff">
                            <Grid x:Name="Background" Background="{StaticResource ResourceKey=BackgroundNormal}" Margin="2">
                                <Grid Grid.Column="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"></RowDefinition>
                                        <RowDefinition Height="auto"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="{Binding Path=Title}" FontWeight="Bold" TextTrimming="WordEllipsis" Foreground="#333333" FontSize="12" Grid.Column="0"
                                                FontFamily="Verdana" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>

                                    <WrapPanel Grid.Row="1" Grid.ColumnSpan="3" Orientation="Horizontal" Background="#aaffffff" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding Path=Upper}" TextTrimming="WordEllipsis" Foreground="#333333" FontSize="9" 
                                                FontFamily="Verdana" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>

                                        <TextBlock Foreground="#111" Text="|" Margin="2,0,2,0"></TextBlock>
                                        
                                        <TextBlock Text="{Binding Path=Lower}" TextTrimming="WordEllipsis" Foreground="#333333" FontSize="9" 
                                                FontFamily="Verdana" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>

                                        <TextBlock Foreground="#111" Text="|" Margin="2,0,2,0"></TextBlock>
                                        
                                        <TextBlock Text="{Binding Path=Numeric}" TextTrimming="WordEllipsis" Foreground="#333333" FontSize="9" 
                                                FontFamily="Verdana" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>

                                        <TextBlock Foreground="#111" Text="|" Margin="2,0,2,0"></TextBlock>
                                        
                                        <TextBlock Text="{Binding Path=Special}" TextTrimming="WordEllipsis" Foreground="#333333" FontSize="9"
                                                FontFamily="Verdana" TextAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                    </WrapPanel>
                                    <Border Background="#55ffffff" Margin="5" Grid.Column="1">
                                        <Button Style="{StaticResource ResourceKey=ButtonStyleSec}" 
                                                Height="20" Width="20" Click="DeleteItemClick" VerticalContentAlignment="Center" VerticalAlignment="Center">
                                            <Image Height="16" Source="del.png"></Image>
                                        </Button>
                                    </Border>
                                    <Border Background="#55ffffff" Margin="5" Grid.Column="2">
                                        <Button Height="20" Width="20" VerticalAlignment="Center" Click="EditItemClick"
                                                Style="{StaticResource ResourceKey=ButtonStyleSec}" HorizontalAlignment="Center">
                                            <Image Height="16" Source="pluginSetting-small.png"></Image>
                                        </Button>
                                    </Border>

                                    <Border Background="#55ffffff" Margin="5" Grid.Column="3">
                                        <Button Height="20" Width="20" VerticalAlignment="Center" Click="DownClick"
                                                Style="{StaticResource ResourceKey=ButtonStyleSec}" HorizontalAlignment="Center">
                                            <Image Height="16" Source="up.png"></Image>
                                        </Button>
                                    </Border>

                                    <Border Background="#55ffffff" Margin="5" Grid.Column="4">
                                        <Button Height="20" Width="20" VerticalAlignment="Center" Click="UpClick"
                                                Style="{StaticResource ResourceKey=ButtonStyleSec}" HorizontalAlignment="Center">
                                            <Image Height="16" Source="down.png"></Image>
                                        </Button>
                                    </Border>

                                    <Grid Grid.Row="2" Grid.ColumnSpan="3">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                        AncestorType={x:Type ListViewItem}}, 
                                                        Path=IsSelected}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                        AncestorType={x:Type ListViewItem}}, 
                                                        Path=IsSelected}" Value="false">
                                                        <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <Grid.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                                <Setter Property="Padding" Value="1"></Setter>
                                                <Setter Property="FontFamily" Value="Verdana"></Setter>
                                                <Setter Property="FontSize" Value="11"></Setter>
                                                <Setter Property="Foreground" Value="#555"></Setter>
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"></Setter>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"></RowDefinition>
                                            <!--<RowDefinition Height="auto"></RowDefinition>
                                            <RowDefinition Height="auto"></RowDefinition>-->
                                        </Grid.RowDefinitions>
                                        <!--<Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>-->
                                        <Border Grid.Row="0" Grid.ColumnSpan="3" Background="#aadddddd"  CornerRadius="3" Height="15" Margin="1.5">
                                            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="3" HorizontalAlignment="Center">
                                                <!--<ToggleButton Style="{StaticResource ResourceKey=ToggleButtonStyle}" 
                                                    IsChecked="{Binding Path=UseNormal}">

                                                </ToggleButton>
                                                <TextBlock Text="Chracters"></TextBlock>-->
                                                <ToggleButton Style="{StaticResource ResourceKey=ToggleButtonStyle}" 
                                                              IsChecked="{Binding Path=UseUpper, Mode=TwoWay}">

                                                </ToggleButton>
                                                <TextBlock Text="Upper Case"></TextBlock>
                                                <ToggleButton Style="{StaticResource ResourceKey=ToggleButtonStyle}" 
                                                              IsChecked="{Binding Path=UseLower, Mode=TwoWay}">

                                                </ToggleButton>
                                                <TextBlock  Text="Lower Case"></TextBlock>

                                                <ToggleButton Style="{StaticResource ResourceKey=ToggleButtonStyle}" 
                                                    IsChecked="{Binding Path=UseNumeric, Mode=TwoWay}">

                                                </ToggleButton>
                                                <TextBlock  Text="Numerics"></TextBlock>
                                                <ToggleButton Style="{StaticResource ResourceKey=ToggleButtonStyle}" 
                                                    IsChecked="{Binding Path=UseSpecial, Mode=TwoWay}">

                                                </ToggleButton>

                                                <TextBlock  Text="Specials"></TextBlock>
                                            </StackPanel>
                                        </Border>

                                        <!--<Border Grid.Row="1" Grid.ColumnSpan="3" Background="#aadddddd"  CornerRadius="3" Height="15" Margin="1.5">
                                            <StackPanel  Orientation="Horizontal">

                                            </StackPanel>
   
                                        </Border>

                                        <Border Grid.Row="2" Grid.ColumnSpan="3" Background="#aadddddd"  CornerRadius="3" Height="15" Margin="1.5">
                                            <StackPanel  Orientation="Horizontal">

                                            </StackPanel>
                                        </Border>-->

                                        <!--<TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Path=Normal, FallbackValue='Not Set'}"></TextBlock>
                                        <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding Path=Numeric, FallbackValue='Not Set'}"></TextBlock>
                                        <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding Path=Special, FallbackValue='Not Set'}"></TextBlock>-->
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#7da2ce"></Setter>
                                <Setter TargetName="Background" Property="Background" Value="{StaticResource ResourceKey=BackgroundMouseOver}"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                        AncestorType={x:Type ListViewItem}}, 
                                                        Path=IsSelected}" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="#7fe383"></Setter>
                                <Setter TargetName="Border" Property="BorderThickness" Value="5"></Setter>
                                <Setter TargetName="Background" Property="Background" Value="{StaticResource ResourceKey=BackgroundIsSelected}"></Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="Background" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#eee" Offset="0.0"/>
                    <GradientStop Color="#ccc" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <!--<Style x:Key="ConfigStyle" TargetType="{x:Type StackPanel}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsConfigOpen, Mode=OneWay}" Value="True">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsConfigOpen, Mode=OneWay}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->

        <Grid x:Key="editAlphabet" Visibility="Visible">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Border Background="#11222222" Grid.ColumnSpan="3">
                    <StackPanel Orientation="Horizontal">
                        <Border Background="#55ffffff" Margin="5">
                            <Button Style="{StaticResource ResourceKey=ButtonStyle}" Height="25" Width="25" Click="ReturnToOverviewClick"
                                    VerticalContentAlignment="Center" VerticalAlignment="Center">
                                <Image Height="20" Source="back.png"></Image>
                            </Button>
                        </Border>
                        <TextBlock Text="Edit Alphabets" Padding="5" FontWeight="Bold"
                                   FontFamily="Verdana" FontSize="24"></TextBlock>

                    </StackPanel>
                </Border>
                <Border Grid.Column="1" Grid.Row="1" Background="#80ffffff">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="70"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>

                            <TextBox Grid.Row="1" Text="{Binding Path=SelectedAlphabet.Title, Mode=TwoWay}" Style="{StaticResource ResourceKey=TextBoxStyle}" Foreground="#222"
                         FontFamily="Verdana" FontSize="19" TextAlignment="Center"
                         Background="Transparent">
                            </TextBox>
                            <TextBlock Grid.Row="0" FontFamily="Verdana" FontSize="11" Margin="5,5,5,0"
                                   FontWeight="Bold" Height="15" TextAlignment="Left" 
                                   Text="Title" Background="#ddd" HorizontalAlignment="Stretch" VerticalAlignment="Top"></TextBlock>
                        </Grid>
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>


                            <TextBox Grid.Row="2" Background="Transparent" VerticalAlignment="Stretch" Style="{StaticResource ResourceKey=TextBoxStyle}"  
                         Text="{Binding Path=SelectedAlphabet.Upper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             FontFamily="Verdana" FontSize="14">
                            </TextBox>
                            <TextBlock Grid.Row="0" FontFamily="Verdana" FontSize="11" Margin="5,5,5,0"
                                   FontWeight="Bold" Height="15" TextAlignment="Left" 
                                   Text="Upper Case Characters" Background="#ddd" HorizontalAlignment="Stretch" VerticalAlignment="Top"></TextBlock>
                        </Grid>

                        <Grid Grid.Row="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>


                            <TextBox Grid.Row="2" Background="Transparent" VerticalAlignment="Stretch" Style="{StaticResource ResourceKey=TextBoxStyle}"  
                         Text="{Binding Path=SelectedAlphabet.Lower, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             FontFamily="Verdana" FontSize="14">
                            </TextBox>
                            <TextBlock Grid.Row="0" FontFamily="Verdana" FontSize="11" Margin="5,5,5,0"
                                   FontWeight="Bold" Height="15" TextAlignment="Left" 
                                   Text="Lower Case Characters" Background="#ddd" HorizontalAlignment="Stretch" VerticalAlignment="Top"></TextBlock>
                        </Grid>
                        <Grid Grid.Row="3">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>

                            <TextBox Grid.Row="1" Background="Transparent" VerticalAlignment="Stretch" Style="{StaticResource ResourceKey=TextBoxStyle}"  
                         Text="{Binding Path=SelectedAlphabet.Numeric, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             TextWrapping="Wrap" FontFamily="Verdana" FontSize="14">
                            </TextBox>
                            <TextBlock Grid.Row="0" FontFamily="Verdana" FontSize="11" Margin="5,5,5,0"
                                   FontWeight="Bold" Height="15" TextAlignment="Left" 
                                   Text="Numeric Characters" Background="#ddd" HorizontalAlignment="Stretch" VerticalAlignment="Top"></TextBlock>
                        </Grid>
                        <Grid Grid.Row="4">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" FontFamily="Verdana" FontSize="11" Margin="5,5,5,0"
                                   FontWeight="Bold" Height="15" TextAlignment="Left" 
                                   Text="Special Characters" Background="#ddd" HorizontalAlignment="Stretch" VerticalAlignment="Top"></TextBlock>
                            <TextBox Grid.Row="1" Background="Transparent" VerticalAlignment="Stretch" Style="{StaticResource ResourceKey=TextBoxStyle}"  
                         Text="{Binding Path=SelectedAlphabet.Special, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             TextWrapping="Wrap" FontFamily="Verdana" FontSize="14">
                            </TextBox>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
            

            <!--<Border Grid.Column="2" Grid.Row="1" Visibility="Collapsed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="1" Style="{StaticResource ResourceKey=ConfigStyle}">
                        <Border>
                            <StackPanel Margin="5">
                                <TextBlock Text="Working Alphabet" Padding="7" FontFamily="Verdana" FontSize="13"></TextBlock>
                                <ComboBox SelectedIndex="0" ItemsSource="{Binding Path=Basic}" FontFamily="Verdana" FontSize="12">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Name}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ComboBox}},
                                                                Path=DataContext.IsActive}" Value="True">
                                                            <Setter Property="Foreground" Value="Navy"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="Add Lowercase" Padding="5" Margin="5"></Button>
                                    <Button Content="Add Uppercase" Padding="5" Margin="5"></Button>
                                </StackPanel>
                            </StackPanel>
                        </Border>

                        <StackPanel Orientation="Vertical" Margin="5">

                            <Button Content="To Lowercase" Padding="5" Margin="0,5,0,0"></Button>
                            <Button Content="To Uppercase" Padding="5" Margin="0,5,0,0"></Button>
                        </StackPanel>
                    </StackPanel>
                </Grid>

            </Border>-->
        </Grid>


        <Grid x:Key="selectAlphabet">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Border Background="#11222222" Grid.ColumnSpan="3">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Alphabets" Padding="5" FontWeight="Bold"
                               FontFamily="Verdana" FontSize="24"></TextBlock>
                    <Border Background="#55ffffff" Margin="5">
                        <Button Style="{StaticResource ResourceKey=ButtonStyle}" Height="25" Width="25" Click="AddItemClick"
                                VerticalContentAlignment="Center" VerticalAlignment="Center">
                            <Image Height="20" Source="add.png"></Image>
                        </Button>
                    </Border>
                </StackPanel>
            </Border>

            <Border Grid.Column="0" Grid.Row="1" Background="#bbffffff">
                <ListView  x:Name="AlphabetList" Grid.Row="1" Style="{StaticResource ResourceKey=ComponentListStyle}" ItemsSource="{Binding Path=Alphabets}"
                            SelectionMode="Single"  SelectionChanged="SelectionChanged" SelectedIndex="0" SelectedItem="{Binding Path=ActiveAlphabet, Mode=TwoWay}"></ListView>
            </Border>
        </Grid>

        <Style x:Key="contentSelectorStyle" TargetType="ContentControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=SelectedAlphabet}" Value="{x:Null}">
                    <Setter Property="Content" Value="{StaticResource ResourceKey=selectAlphabet}"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Content" Value="{StaticResource ResourceKey=editAlphabet}"></Setter>
        </Style>
    </UserControl.Resources>

    <Border Width="Auto" Height="Auto" Background="{StaticResource ResourceKey=Background}" x:Name="root">
        <ContentControl Style="{StaticResource ResourceKey=contentSelectorStyle}" DataContext="{Binding Path=DataContext, ElementName=root}"></ContentControl>
    </Border>
</UserControl>
