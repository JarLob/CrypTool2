<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PluginCaption" xml:space="preserve">
    <value>字母</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>字母插件</value>
  </data>
  <data name="AlphabetOutputCaption" xml:space="preserve">
    <value>字母输出</value>
  </data>
  <data name="AlphabetOutputTooltip" xml:space="preserve">
    <value>字母输出用作经典密码的字母输入</value>
  </data>
  <data name="NumeralsCaption" xml:space="preserve">
    <value>数词</value>
  </data>
  <data name="NumeralsTooltip" xml:space="preserve">
    <value>使用数字</value>
  </data>
  <data name="OpenFilenameCaption" xml:space="preserve">
    <value>文件名</value>
  </data>
  <data name="OpenFilenameTooltip" xml:space="preserve">
    <value>选择一个带有字母的文件。</value>
  </data>
  <data name="PunctuationCaption" xml:space="preserve">
    <value>标点</value>
  </data>
  <data name="PunctuationTooltip" xml:space="preserve">
    <value>使用标点符号</value>
  </data>
  <data name="SpaceSensitivityCaption" xml:space="preserve">
    <value>空间</value>
  </data>
  <data name="SpaceSensitivityTooltip" xml:space="preserve">
    <value>使用空间</value>
  </data>
  <data name="TargetFilenameCaption" xml:space="preserve">
    <value>目标文件名</value>
  </data>
  <data name="TargetFilenameTooltip" xml:space="preserve">
    <value>要写入字母的文件。</value>
  </data>
  <data name="UpperLowerCaseLettersCaption" xml:space="preserve">
    <value>大写小写</value>
  </data>
  <data name="UpperLowerCaseLettersTooltip" xml:space="preserve">
    <value>使用大写，小写字母</value>
  </data>
  <data name="NumeralsList1" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="NumeralsList2" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="PunctuationList1" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="PunctuationList2" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="SpaceSensitivityList1" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="SpaceSensitivityList2" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="UpperLowerCaseLettersList1" xml:space="preserve">
    <value>大写</value>
  </data>
  <data name="UpperLowerCaseLettersList2" xml:space="preserve">
    <value>小写</value>
  </data>
  <data name="UpperLowerCaseLettersList3" xml:space="preserve">
    <value>都</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>加</value>
  </data>
  <data name="Alphabet" xml:space="preserve">
    <value>字母</value>
  </data>
  <data name="Available_Alphabets" xml:space="preserve">
    <value>可用字母</value>
  </data>
  <data name="Current_Selected_Alphabet" xml:space="preserve">
    <value>当前选择的字母</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>默认</value>
  </data>
  <data name="Manage_Alphabet" xml:space="preserve">
    <value>管理字母</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Alphabets" xml:space="preserve">
    <value>字母</value>
  </data>
  <data name="BasicLatin" xml:space="preserve">
    <value>基本拉丁语</value>
  </data>
  <data name="Cyrillic" xml:space="preserve">
    <value>西里尔</value>
  </data>
  <data name="EditAlphabets" xml:space="preserve">
    <value>编辑字母</value>
  </data>
  <data name="Greek" xml:space="preserve">
    <value>希腊语</value>
  </data>
  <data name="Lower" xml:space="preserve">
    <value>降低</value>
  </data>
  <data name="LowerCaseCharacters" xml:space="preserve">
    <value>小写字母</value>
  </data>
  <data name="NewTitle" xml:space="preserve">
    <value>新标题</value>
  </data>
  <data name="Numeric" xml:space="preserve">
    <value>数字</value>
  </data>
  <data name="NumericCharacters" xml:space="preserve">
    <value>数字字符</value>
  </data>
  <data name="Special" xml:space="preserve">
    <value>特别</value>
  </data>
  <data name="SpecialCharacters" xml:space="preserve">
    <value>特殊字符</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="Upper" xml:space="preserve">
    <value>上</value>
  </data>
  <data name="UpperCaseCharacters" xml:space="preserve">
    <value>大写字符</value>
  </data>
  <data name="DeleteAlphabetMessageBoxText" xml:space="preserve">
    <value>您是否真的要删除字母“ {0}”？</value>
  </data>
  <data name="DeleteAlphabetMessageBoxTitle" xml:space="preserve">
    <value>删除字母？</value>
  </data>
</root>