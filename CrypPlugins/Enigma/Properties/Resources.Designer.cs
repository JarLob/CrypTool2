//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrypTool.Enigma.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CrypTool.Enigma.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case handling ähnelt.
        /// </summary>
        public static string CaseHandlingCaption {
            get {
                return ResourceManager.GetString("CaseHandlingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preserve case ähnelt.
        /// </summary>
        public static string CaseHandlingList1 {
            get {
                return ResourceManager.GetString("CaseHandlingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert to upper ähnelt.
        /// </summary>
        public static string CaseHandlingList2 {
            get {
                return ResourceManager.GetString("CaseHandlingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert to lower ähnelt.
        /// </summary>
        public static string CaseHandlingList3 {
            get {
                return ResourceManager.GetString("CaseHandlingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What should be done with upper and lower case letters? ähnelt.
        /// </summary>
        public static string CaseHandlingTooltip {
            get {
                return ResourceManager.GetString("CaseHandlingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Workspace active, Presentation turned off ähnelt.
        /// </summary>
        public static string EnigmaPresentationFrame_ChangeStatus {
            get {
                return ResourceManager.GetString("EnigmaPresentationFrame_ChangeStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Presentation turned off ähnelt.
        /// </summary>
        public static string EnigmaPresentationFrame_ChangeStatus_Präsentation_turned_off {
            get {
                return ResourceManager.GetString("EnigmaPresentationFrame_ChangeStatus_Präsentation_turned_off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Presentation active ähnelt.
        /// </summary>
        public static string EnigmaPresentationFrame_ChangeStatus_Presentation_aktive {
            get {
                return ResourceManager.GetString("EnigmaPresentationFrame_ChangeStatus_Presentation_aktive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Presentation ready ähnelt.
        /// </summary>
        public static string EnigmaPresentationFrame_ChangeStatus_Presentation_ready {
            get {
                return ResourceManager.GetString("EnigmaPresentationFrame_ChangeStatus_Presentation_ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restart Workspace ähnelt.
        /// </summary>
        public static string EnigmaPresentationFrame_visbileCheckbox_Checked_Restart_Workspace {
            get {
                return ResourceManager.GetString("EnigmaPresentationFrame_visbileCheckbox_Checked_Restart_Workspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial rotor setting ähnelt.
        /// </summary>
        public static string InitialRotorPosCaption {
            get {
                return ResourceManager.GetString("InitialRotorPosCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the initial position of the rotors (for example AAAA). ähnelt.
        /// </summary>
        public static string InitialRotorPosTooltip {
            get {
                return ResourceManager.GetString("InitialRotorPosTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die n-gram dictionary ähnelt.
        /// </summary>
        public static string InputGramsCaption {
            get {
                return ResourceManager.GetString("InputGramsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dictionary with gram counts (string -&gt; [absolute, percentaged, log2]) ähnelt.
        /// </summary>
        public static string InputGramsTooltip {
            get {
                return ResourceManager.GetString("InputGramsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key input ähnelt.
        /// </summary>
        public static string KeyInputCaption {
            get {
                return ResourceManager.GetString("KeyInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input an Enigma key containing the rotors to use, the rings to use, and the plugboard connections. ähnelt.
        /// </summary>
        public static string KeyInputTooltip {
            get {
                return ResourceManager.GetString("KeyInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please provide the initial rotor setting for each rotor, e.g. ABCD. Note that the slowest rotor is on the left and the fastest rotor is on the right. Only the Enigma M4 (&quot;Shark&quot;) uses four rotors. ähnelt.
        /// </summary>
        public static string KeyTooltip {
            get {
                return ResourceManager.GetString("KeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enigma model ähnelt.
        /// </summary>
        public static string ModelCaption {
            get {
                return ResourceManager.GetString("ModelCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commercial Enigma A/B - since 1924 ähnelt.
        /// </summary>
        public static string ModelList1 {
            get {
                return ResourceManager.GetString("ModelList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commercial Enigma D ähnelt.
        /// </summary>
        public static string ModelList2 {
            get {
                return ResourceManager.GetString("ModelList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reichsbahn (Rocket) - since 1941 ähnelt.
        /// </summary>
        public static string ModelList3 {
            get {
                return ResourceManager.GetString("ModelList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enigma I / M3 ähnelt.
        /// </summary>
        public static string ModelList4 {
            get {
                return ResourceManager.GetString("ModelList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M4 (Shark) ähnelt.
        /// </summary>
        public static string ModelList5 {
            get {
                return ResourceManager.GetString("ModelList5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die K-Model ähnelt.
        /// </summary>
        public static string ModelList6 {
            get {
                return ResourceManager.GetString("ModelList6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die G (Defense model) ähnelt.
        /// </summary>
        public static string ModelList7 {
            get {
                return ResourceManager.GetString("ModelList7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select which Enigma model you want to use. This setting influences the available rotors and their inner wiring. ähnelt.
        /// </summary>
        public static string ModelTooltip {
            get {
                return ResourceManager.GetString("ModelTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enigma model ähnelt.
        /// </summary>
        public static string ModelTPCaption {
            get {
                return ResourceManager.GetString("ModelTPCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select which Enigma model you want to use. This setting influences the available rotors and their inner wiring. ähnelt.
        /// </summary>
        public static string ModelTPTooltip {
            get {
                return ResourceManager.GetString("ModelTPTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please stop the Workspace for Presentation! ähnelt.
        /// </summary>
        public static string Please_stop_the_Workspace_for_Presentation {
            get {
                return ResourceManager.GetString("Please_stop_the_Workspace_for_Presentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Substitution: ähnelt.
        /// </summary>
        public static string PlugBoardCaption {
            get {
                return ResourceManager.GetString("PlugBoardCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plugboard ähnelt.
        /// </summary>
        public static string PlugboardGroup {
            get {
                return ResourceManager.GetString("PlugboardGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the letter for connecting this plug. ähnelt.
        /// </summary>
        public static string PlugBoardLetterTooltip {
            get {
                return ResourceManager.GetString("PlugBoardLetterTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the current substitution ähnelt.
        /// </summary>
        public static string PlugBoardTooltip {
            get {
                return ResourceManager.GetString("PlugBoardTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enigma ähnelt.
        /// </summary>
        public static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Polyalphabetic rotor-cipher machine ähnelt.
        /// </summary>
        public static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Activate Presentation ähnelt.
        /// </summary>
        public static string PresentationActivation {
            get {
                return ResourceManager.GetString("PresentationActivation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Presentation ähnelt.
        /// </summary>
        public static string PresentationGroup {
            get {
                return ResourceManager.GetString("PresentationGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Presentation speed ähnelt.
        /// </summary>
        public static string PresentationSpeedCaption {
            get {
                return ResourceManager.GetString("PresentationSpeedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change the pace of the presentation ähnelt.
        /// </summary>
        public static string PresentationSpeedTooltip {
            get {
                return ResourceManager.GetString("PresentationSpeedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW A ähnelt.
        /// </summary>
        public static string Reflector1 {
            get {
                return ResourceManager.GetString("Reflector1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not available for this model. ähnelt.
        /// </summary>
        public static string Reflector10 {
            get {
                return ResourceManager.GetString("Reflector10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW B (2. November 1937) ähnelt.
        /// </summary>
        public static string Reflector2 {
            get {
                return ResourceManager.GetString("Reflector2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW C (since 1940/41) ähnelt.
        /// </summary>
        public static string Reflector3 {
            get {
                return ResourceManager.GetString("Reflector3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW (D) ähnelt.
        /// </summary>
        public static string Reflector4 {
            get {
                return ResourceManager.GetString("Reflector4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW (Rocket) -- since 7th Feb. 1941 ähnelt.
        /// </summary>
        public static string Reflector5 {
            get {
                return ResourceManager.GetString("Reflector5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW B &quot;thin&quot; -- since 1st Feb. 1942 ähnelt.
        /// </summary>
        public static string Reflector6 {
            get {
                return ResourceManager.GetString("Reflector6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW C &quot;thin&quot; -- since 1st July 1943 ähnelt.
        /// </summary>
        public static string Reflector7 {
            get {
                return ResourceManager.GetString("Reflector7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW (K) -- since Feb. 1939 ähnelt.
        /// </summary>
        public static string Reflector8 {
            get {
                return ResourceManager.GetString("Reflector8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UKW (G) ähnelt.
        /// </summary>
        public static string Reflector9 {
            get {
                return ResourceManager.GetString("Reflector9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reflector ähnelt.
        /// </summary>
        public static string ReflectorCaption {
            get {
                return ResourceManager.GetString("ReflectorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the used reflector. If you don&apos;t want to use a reflector, select none here. ähnelt.
        /// </summary>
        public static string ReflectorTooltip {
            get {
                return ResourceManager.GetString("ReflectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove all plugs ähnelt.
        /// </summary>
        public static string ResetPlugboardCaption {
            get {
                return ResourceManager.GetString("ResetPlugboardCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By pressing this button the plugboard is reset to its empty state, i.e. all plugs are removed ähnelt.
        /// </summary>
        public static string ResetPlugboardTooltip {
            get {
                return ResourceManager.GetString("ResetPlugboardTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ring 1 (right) ähnelt.
        /// </summary>
        public static string Ring1Caption {
            get {
                return ResourceManager.GetString("Ring1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the the offset for ring 1 ähnelt.
        /// </summary>
        public static string Ring1Tooltip {
            get {
                return ResourceManager.GetString("Ring1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ring 2 ähnelt.
        /// </summary>
        public static string Ring2Caption {
            get {
                return ResourceManager.GetString("Ring2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the the offset for ring 2 ähnelt.
        /// </summary>
        public static string Ring2Tooltip {
            get {
                return ResourceManager.GetString("Ring2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ring 3 ähnelt.
        /// </summary>
        public static string Ring3Caption {
            get {
                return ResourceManager.GetString("Ring3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the the offset for ring 3 ähnelt.
        /// </summary>
        public static string Ring3Tooltip {
            get {
                return ResourceManager.GetString("Ring3Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ring 4 (left) ähnelt.
        /// </summary>
        public static string Ring4Caption {
            get {
                return ResourceManager.GetString("Ring4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the the offset for ring 4 ähnelt.
        /// </summary>
        public static string Ring4Tooltip {
            get {
                return ResourceManager.GetString("Ring4Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ring settings ähnelt.
        /// </summary>
        public static string RingSettingsGroup {
            get {
                return ResourceManager.GetString("RingSettingsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ring settings: ähnelt.
        /// </summary>
        public static string Ringstellung_ {
            get {
                return ResourceManager.GetString("Ringstellung_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor 1 (fastest/right) ähnelt.
        /// </summary>
        public static string Rotor1Caption {
            get {
                return ResourceManager.GetString("Rotor1Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the rotor used on the right (fastest) position. ähnelt.
        /// </summary>
        public static string Rotor1Tooltip {
            get {
                return ResourceManager.GetString("Rotor1Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor 2 ähnelt.
        /// </summary>
        public static string Rotor2Caption {
            get {
                return ResourceManager.GetString("Rotor2Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the rotor used on the second position. ähnelt.
        /// </summary>
        public static string Rotor2Tooltip {
            get {
                return ResourceManager.GetString("Rotor2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor 3 ähnelt.
        /// </summary>
        public static string Rotor3Caption {
            get {
                return ResourceManager.GetString("Rotor3Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the rotor used on the third position. ähnelt.
        /// </summary>
        public static string Rotor3Tooltip {
            get {
                return ResourceManager.GetString("Rotor3Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor 4 (slowest/left) ähnelt.
        /// </summary>
        public static string Rotor4Caption {
            get {
                return ResourceManager.GetString("Rotor4Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the rotor used on the fourth position. If you want to use only three rotors, select none here. ähnelt.
        /// </summary>
        public static string Rotor4Tooltip {
            get {
                return ResourceManager.GetString("Rotor4Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I (since 1930) ähnelt.
        /// </summary>
        public static string RotorA1 {
            get {
                return ResourceManager.GetString("RotorA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die II (C) -- since 1924 ähnelt.
        /// </summary>
        public static string RotorA10 {
            get {
                return ResourceManager.GetString("RotorA10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die III (C) -- since 1924 ähnelt.
        /// </summary>
        public static string RotorA11 {
            get {
                return ResourceManager.GetString("RotorA11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I (D) ähnelt.
        /// </summary>
        public static string RotorA12 {
            get {
                return ResourceManager.GetString("RotorA12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die II (D) ähnelt.
        /// </summary>
        public static string RotorA13 {
            get {
                return ResourceManager.GetString("RotorA13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die III (D) ähnelt.
        /// </summary>
        public static string RotorA14 {
            get {
                return ResourceManager.GetString("RotorA14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I (Rocket) -- since 7th Feb. 1941 ähnelt.
        /// </summary>
        public static string RotorA15 {
            get {
                return ResourceManager.GetString("RotorA15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die II (Rocket) -- since 7th Feb. 1941 ähnelt.
        /// </summary>
        public static string RotorA16 {
            get {
                return ResourceManager.GetString("RotorA16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die III (Rocket) -- since 7th Feb. 1941 ähnelt.
        /// </summary>
        public static string RotorA17 {
            get {
                return ResourceManager.GetString("RotorA17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I (K) -- since Feb. 1939 ähnelt.
        /// </summary>
        public static string RotorA18 {
            get {
                return ResourceManager.GetString("RotorA18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die II (K) -- since Feb. 1939 ähnelt.
        /// </summary>
        public static string RotorA19 {
            get {
                return ResourceManager.GetString("RotorA19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die II (since 1930) ähnelt.
        /// </summary>
        public static string RotorA2 {
            get {
                return ResourceManager.GetString("RotorA2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die III (K) -- since Feb. 1939 ähnelt.
        /// </summary>
        public static string RotorA20 {
            get {
                return ResourceManager.GetString("RotorA20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I (G) ähnelt.
        /// </summary>
        public static string RotorA21 {
            get {
                return ResourceManager.GetString("RotorA21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die II (G) ähnelt.
        /// </summary>
        public static string RotorA22 {
            get {
                return ResourceManager.GetString("RotorA22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die III (G) ähnelt.
        /// </summary>
        public static string RotorA23 {
            get {
                return ResourceManager.GetString("RotorA23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die III (since 1930) ähnelt.
        /// </summary>
        public static string RotorA3 {
            get {
                return ResourceManager.GetString("RotorA3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IV (since 1938, M3 &quot;Heer&quot;) ähnelt.
        /// </summary>
        public static string RotorA4 {
            get {
                return ResourceManager.GetString("RotorA4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die V (since 1938, M3 &quot;Heer&quot;) ähnelt.
        /// </summary>
        public static string RotorA5 {
            get {
                return ResourceManager.GetString("RotorA5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VI (since 1939, M3/M4) ähnelt.
        /// </summary>
        public static string RotorA6 {
            get {
                return ResourceManager.GetString("RotorA6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VII (since 1939, M3/M4) ähnelt.
        /// </summary>
        public static string RotorA7 {
            get {
                return ResourceManager.GetString("RotorA7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VIII (since 1939, M3/M4) ähnelt.
        /// </summary>
        public static string RotorA8 {
            get {
                return ResourceManager.GetString("RotorA8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die I (C) -- since 1924 ähnelt.
        /// </summary>
        public static string RotorA9 {
            get {
                return ResourceManager.GetString("RotorA9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not available for this model. ähnelt.
        /// </summary>
        public static string RotorB1 {
            get {
                return ResourceManager.GetString("RotorB1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beta -- since 1st Feb. 1942 ähnelt.
        /// </summary>
        public static string RotorB2 {
            get {
                return ResourceManager.GetString("RotorB2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gamma -- since 1st July 1943 ähnelt.
        /// </summary>
        public static string RotorB3 {
            get {
                return ResourceManager.GetString("RotorB3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotor position: ähnelt.
        /// </summary>
        public static string Rotorlage_ {
            get {
                return ResourceManager.GetString("Rotorlage_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text input ähnelt.
        /// </summary>
        public static string TextInputCaption {
            get {
                return ResourceManager.GetString("TextInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input a text to be encrypted or decrypted by the Enigma machine ähnelt.
        /// </summary>
        public static string TextInputTooltip {
            get {
                return ResourceManager.GetString("TextInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text options ähnelt.
        /// </summary>
        public static string TextOptionsGroup {
            get {
                return ResourceManager.GetString("TextOptionsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text output ähnelt.
        /// </summary>
        public static string TextOutputCaption {
            get {
                return ResourceManager.GetString("TextOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The processed text, encrypted or decrypted by the Enigma machine ähnelt.
        /// </summary>
        public static string TextOutputTooltip {
            get {
                return ResourceManager.GetString("TextOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown symbol handling ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingCaption {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore (leave unmodified) ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList1 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList2 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace with &apos;X&apos; ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingList3 {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What should be done with characters in the input that are not included in the alphabet? ähnelt.
        /// </summary>
        public static string UnknownSymbolHandlingTooltip {
            get {
                return ResourceManager.GetString("UnknownSymbolHandlingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotors used ähnelt.
        /// </summary>
        public static string UsedRotorsGroup {
            get {
                return ResourceManager.GetString("UsedRotorsGroup", resourceCulture);
            }
        }
    }
}
