//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.Plugins.Blowfish.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.Plugins.Blowfish.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action ähnelt.
        /// </summary>
        internal static string ActionCaption {
            get {
                return ResourceManager.GetString("ActionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt ähnelt.
        /// </summary>
        internal static string ActionList1 {
            get {
                return ResourceManager.GetString("ActionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt ähnelt.
        /// </summary>
        internal static string ActionList2 {
            get {
                return ResourceManager.GetString("ActionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want the input data to be encrypted or decrypted? ähnelt.
        /// </summary>
        internal static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Algorithm type ähnelt.
        /// </summary>
        internal static string AlgorithmTypeCaption {
            get {
                return ResourceManager.GetString("AlgorithmTypeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sets the type of the Blowfish algorithm. ähnelt.
        /// </summary>
        internal static string AlgorithmTypeTooltip {
            get {
                return ResourceManager.GetString("AlgorithmTypeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chaining mode ähnelt.
        /// </summary>
        internal static string BlockModeCaption {
            get {
                return ResourceManager.GetString("BlockModeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Electronic Code Book (ECB) ähnelt.
        /// </summary>
        internal static string BlockModeList1 {
            get {
                return ResourceManager.GetString("BlockModeList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Block Chaining (CBC) ähnelt.
        /// </summary>
        internal static string BlockModeList2 {
            get {
                return ResourceManager.GetString("BlockModeList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Feedback (CFB) ähnelt.
        /// </summary>
        internal static string BlockModeList3 {
            get {
                return ResourceManager.GetString("BlockModeList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output Feedback (OFB) ähnelt.
        /// </summary>
        internal static string BlockModeList4 {
            get {
                return ResourceManager.GetString("BlockModeList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selects the block cipher mode of operation. ähnelt.
        /// </summary>
        internal static string BlockModeTooltip {
            get {
                return ResourceManager.GetString("BlockModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IV length = {0} is too long. Cut it to IV length = {1} ähnelt.
        /// </summary>
        internal static string Blowfish_CheckIV_IV_too_long {
            get {
                return ResourceManager.GetString("Blowfish_CheckIV_IV_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IV length = {0} is too short. Fill it with zeros to IV length = {1} ähnelt.
        /// </summary>
        internal static string Blowfish_CheckIV_IV_too_short {
            get {
                return ResourceManager.GetString("Blowfish_CheckIV_IV_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tweak length = {0} is too long. Cut it to tweak length = {1} ähnelt.
        /// </summary>
        internal static string Blowfish_CheckTweak_Tweak_too_long {
            get {
                return ResourceManager.GetString("Blowfish_CheckTweak_Tweak_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tweak length = {0} is too short. Fill it with zeros to tweak length = {1} ähnelt.
        /// </summary>
        internal static string Blowfish_CheckTweak_Tweak_too_short {
            get {
                return ResourceManager.GetString("Blowfish_CheckTweak_Tweak_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key length = {0} is too long. Cut it to key length = {1} ähnelt.
        /// </summary>
        internal static string Blowfish_Execute_Key_too_long {
            get {
                return ResourceManager.GetString("Blowfish_Execute_Key_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key length = {0} is too short. Fill it with zeros to key length = {1} ähnelt.
        /// </summary>
        internal static string Blowfish_Execute_Key_too_short {
            get {
                return ResourceManager.GetString("Blowfish_Execute_Key_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable key parity bits ähnelt.
        /// </summary>
        internal static string EnableKeyParityBitsCaption {
            get {
                return ResourceManager.GetString("EnableKeyParityBitsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If parity bits are enabled, each 8th bit in the key is set to zero. ähnelt.
        /// </summary>
        internal static string EnableKeyParityBitsTooltio {
            get {
                return ResourceManager.GetString("EnableKeyParityBitsTooltio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initialization vector ähnelt.
        /// </summary>
        internal static string InputIVCaption {
            get {
                return ResourceManager.GetString("InputIVCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The initialization vector (IV) which is used in chaining modes. It must be the same as the blocksize. ähnelt.
        /// </summary>
        internal static string InputIVTooltip {
            get {
                return ResourceManager.GetString("InputIVTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string InputKeyCaption {
            get {
                return ResourceManager.GetString("InputKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der eingegebene Schlüssel. Zu kurze oder zu lange Schlüssel werden verlängert oder abgeschnitten. ähnelt.
        /// </summary>
        internal static string InputKeyTooltip {
            get {
                return ResourceManager.GetString("InputKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input stream ähnelt.
        /// </summary>
        internal static string InputStreamCaption {
            get {
                return ResourceManager.GetString("InputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data to be encrypted or decrypted. ähnelt.
        /// </summary>
        internal static string InputStreamTooltip {
            get {
                return ResourceManager.GetString("InputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output stream ähnelt.
        /// </summary>
        internal static string OutputStreamCaption {
            get {
                return ResourceManager.GetString("OutputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This connector outputs encrypted or decrypted data. ähnelt.
        /// </summary>
        internal static string OutputStreamTooltip {
            get {
                return ResourceManager.GetString("OutputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Padding mode ähnelt.
        /// </summary>
        internal static string PaddingCaption {
            get {
                return ResourceManager.GetString("PaddingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string PaddingList1 {
            get {
                return ResourceManager.GetString("PaddingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zeros ähnelt.
        /// </summary>
        internal static string PaddingList2 {
            get {
                return ResourceManager.GetString("PaddingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PKCS7 ähnelt.
        /// </summary>
        internal static string PaddingList3 {
            get {
                return ResourceManager.GetString("PaddingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ANSIX923 ähnelt.
        /// </summary>
        internal static string PaddingList4 {
            get {
                return ResourceManager.GetString("PaddingList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ISO10126 ähnelt.
        /// </summary>
        internal static string PaddingList5 {
            get {
                return ResourceManager.GetString("PaddingList5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1-0 padding ähnelt.
        /// </summary>
        internal static string PaddingList6 {
            get {
                return ResourceManager.GetString("PaddingList6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selects a mode to fill partial data blocks. ähnelt.
        /// </summary>
        internal static string PaddingTooltip {
            get {
                return ResourceManager.GetString("PaddingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blowfish ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Implementations of Blowfish, Twofish, and Threefish. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 1 ähnelt.
        /// </summary>
        internal static string Round1 {
            get {
                return ResourceManager.GetString("Round1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 2 ähnelt.
        /// </summary>
        internal static string Round2 {
            get {
                return ResourceManager.GetString("Round2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 3 ähnelt.
        /// </summary>
        internal static string Round3 {
            get {
                return ResourceManager.GetString("Round3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 4 ähnelt.
        /// </summary>
        internal static string Round4 {
            get {
                return ResourceManager.GetString("Round4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 5 ähnelt.
        /// </summary>
        internal static string Round5 {
            get {
                return ResourceManager.GetString("Round5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 6 ähnelt.
        /// </summary>
        internal static string Round6 {
            get {
                return ResourceManager.GetString("Round6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 7 ähnelt.
        /// </summary>
        internal static string Round7 {
            get {
                return ResourceManager.GetString("Round7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 8 ähnelt.
        /// </summary>
        internal static string Round8 {
            get {
                return ResourceManager.GetString("Round8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tweak ähnelt.
        /// </summary>
        internal static string TweakCaption {
            get {
                return ResourceManager.GetString("TweakCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a tweak. Only used by Threefish ähnelt.
        /// </summary>
        internal static string TweakTooltip {
            get {
                return ResourceManager.GetString("TweakTooltip", resourceCulture);
            }
        }
    }
}
