<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PluginCaption" xml:space="preserve">
    <value>图像哈希</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>计算图像的鲁棒哈希</value>
  </data>
  <data name="OutputHashCaption" xml:space="preserve">
    <value>输出哈希</value>
  </data>
  <data name="InputImageTooltip" xml:space="preserve">
    <value>这是用于哈希的标准图像。</value>
  </data>
  <data name="OutputImageCaption" xml:space="preserve">
    <value>OutputImage</value>
  </data>
  <data name="NoImageError" xml:space="preserve">
    <value>请使用文件输入组件选择有效的图像</value>
  </data>
  <data name="InputImageCaption" xml:space="preserve">
    <value>InputImage</value>
  </data>
  <data name="OutputHashTooltip" xml:space="preserve">
    <value>计算得出的哈希为字节数组</value>
  </data>
  <data name="OutputImageTooltip" xml:space="preserve">
    <value>这是经过处理的OutputImage。</value>
  </data>
  <data name="ToSmallWarning" xml:space="preserve">
    <value>选择的尺寸太小。将大小更改为4x4。</value>
  </data>
  <data name="ToBigWarning" xml:space="preserve">
    <value>选择的尺寸太大。将大小更改为128x128。</value>
  </data>
  <data name="OutputFileFormatCaption" xml:space="preserve">
    <value>OutputFileFormat</value>
  </data>
  <data name="OutputFileFormatTooltip" xml:space="preserve">
    <value>选择所需的输出格式</value>
  </data>
  <data name="PowerOfTwoWarning" xml:space="preserve">
    <value>请选择2的幂。大小更改为</value>
  </data>
  <data name="PresentationStepTooltip" xml:space="preserve">
    <value>选择要显示的步骤</value>
  </data>
  <data name="SizeCaption" xml:space="preserve">
    <value>尺寸（标准：16x16）</value>
  </data>
  <data name="SizeTooltip" xml:space="preserve">
    <value>输入4到128的水平和垂直像素值，只能是2的幂</value>
  </data>
  <data name="SliderGroup" xml:space="preserve">
    <value>滑杆</value>
  </data>
  <data name="Step0Caption" xml:space="preserve">
    <value>原始图片</value>
  </data>
  <data name="Step1Caption" xml:space="preserve">
    <value>步骤1：灰度</value>
  </data>
  <data name="Step2Caption" xml:space="preserve">
    <value>步骤2：调整大小</value>
  </data>
  <data name="Step3Caption" xml:space="preserve">
    <value>步骤3：翻转</value>
  </data>
  <data name="Step4Caption" xml:space="preserve">
    <value>步骤4：黑白</value>
  </data>
  <data name="StepsCaption" xml:space="preserve">
    <value>显示每一步</value>
  </data>
  <data name="StepsTooltip" xml:space="preserve">
    <value>显示过程中已经显示的每个步骤</value>
  </data>
</root>