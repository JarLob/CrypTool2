//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.235
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.Plugins.CLK.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.Plugins.CLK.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set clock to true ähnelt.
        /// </summary>
        internal static string CLKTimeoutCaption {
            get {
                return ResourceManager.GetString("CLKTimeoutCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  yes / no  ähnelt.
        /// </summary>
        internal static string CLKTimeoutTooltip {
            get {
                return ResourceManager.GetString("CLKTimeoutTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set CLK timeout in milliseconds ähnelt.
        /// </summary>
        internal static string CLKTimeoutTPCaption {
            get {
                return ResourceManager.GetString("CLKTimeoutTPCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die How long should it last until next CLK event? ähnelt.
        /// </summary>
        internal static string CLKTimeoutTPTooltip {
            get {
                return ResourceManager.GetString("CLKTimeoutTPTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EventInput ähnelt.
        /// </summary>
        internal static string EventInputCaption {
            get {
                return ResourceManager.GetString("EventInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die EventInput ähnelt.
        /// </summary>
        internal static string EventInputTooltip {
            get {
                return ResourceManager.GetString("EventInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output ähnelt.
        /// </summary>
        internal static string OutputCaption {
            get {
                return ResourceManager.GetString("OutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output. ähnelt.
        /// </summary>
        internal static string OutputTooltip {
            get {
                return ResourceManager.GetString("OutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clock ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simple clock for clock-based plugins. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of rounds ähnelt.
        /// </summary>
        internal static string RoundOutputCaption {
            get {
                return ResourceManager.GetString("RoundOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output. ähnelt.
        /// </summary>
        internal static string RoundOutputTooltip {
            get {
                return ResourceManager.GetString("RoundOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rounds ähnelt.
        /// </summary>
        internal static string RoundsCaption {
            get {
                return ResourceManager.GetString("RoundsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die How many clock cycles shall be generated? ähnelt.
        /// </summary>
        internal static string RoundsTooltip {
            get {
                return ResourceManager.GetString("RoundsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set clock to... ähnelt.
        /// </summary>
        internal static string SetClockToTrueCaption {
            get {
                return ResourceManager.GetString("SetClockToTrueCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die false ähnelt.
        /// </summary>
        internal static string SetClockToTrueList1 {
            get {
                return ResourceManager.GetString("SetClockToTrueList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die true ähnelt.
        /// </summary>
        internal static string SetClockToTrueList2 {
            get {
                return ResourceManager.GetString("SetClockToTrueList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  true / false  ähnelt.
        /// </summary>
        internal static string SetClockToTrueTooltip {
            get {
                return ResourceManager.GetString("SetClockToTrueTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set clock output to ähnelt.
        /// </summary>
        internal static string SetClockToTrueTPCaption {
            get {
                return ResourceManager.GetString("SetClockToTrueTPCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  true / false  ähnelt.
        /// </summary>
        internal static string SetClockToTrueTPTooltip {
            get {
                return ResourceManager.GetString("SetClockToTrueTPTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use input event instead of clock ähnelt.
        /// </summary>
        internal static string UseEventCaption {
            get {
                return ResourceManager.GetString("UseEventCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use input event instead of clock ähnelt.
        /// </summary>
        internal static string UseEventList1 {
            get {
                return ResourceManager.GetString("UseEventList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  yes / no  ähnelt.
        /// </summary>
        internal static string UseEventTooltip {
            get {
                return ResourceManager.GetString("UseEventTooltip", resourceCulture);
            }
        }
    }
}
