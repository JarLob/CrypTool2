<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AmountLabel" xml:space="preserve">
    <value>Transmitted Packages:</value>
  </data>
  <data name="IPFromHeader" xml:space="preserve">
    <value>Receiver IP</value>
  </data>
  <data name="MetaLabel" xml:space="preserve">
    <value>Info</value>
  </data>
  <data name="PaylodHeader" xml:space="preserve">
    <value>Transmitted Data</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>Network Sender</value>
  </data>
  <data name="PluginToolTip" xml:space="preserve">
    <value>Component is able to send muliple UDP packets</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="PortToolTip" xml:space="preserve">
    <value>Port on which the data packets are sended</value>
  </data>
  <data name="SendPackagesLabel" xml:space="preserve">
    <value>Send Packages</value>
  </data>
  <data name="StartLabel" xml:space="preserve">
    <value>Start Time:</value>
  </data>
  <data name="StreamInput" xml:space="preserve">
    <value>Package Data</value>
  </data>
  <data name="StreamInputTooltip" xml:space="preserve">
    <value>Data to be sent over the network.</value>
  </data>
  <data name="TOSHeader" xml:space="preserve">
    <value>Transmitted at</value>
  </data>
  <data name="DeviceIpCaption" xml:space="preserve">
    <value>Networkdevice IP:</value>
  </data>
  <data name="DeviceIpCaptionTooltip" xml:space="preserve">
    <value>Type in the Ip of the reciever, to send to this device</value>
  </data>
  <data name="LisPort" xml:space="preserve">
    <value>Port:</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="ByteAsciiSwitchCaption" xml:space="preserve">
    <value>show bytes as ASCII</value>
  </data>
  <data name="ByteAsciiSwitchCaptionTooltip" xml:space="preserve">
    <value>show bytes as ASCII</value>
  </data>
  <data name="IpInput" xml:space="preserve">
    <value>Destination IP</value>
  </data>
  <data name="IpInputTooltip" xml:space="preserve">
    <value>Set the Ip of your destination here or in the settings of the component.</value>
  </data>
  <data name="Protocol" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="ProtocolToolTip" xml:space="preserve">
    <value>Changes the protocol type</value>
  </data>
  <data name="SpeedrateLabel" xml:space="preserve">
    <value>Transmission Rate:</value>
  </data>
  <data name="ConnectIntervallCaption" xml:space="preserve">
    <value>Connection-establishment interval</value>
  </data>
  <data name="ConnectIntervallCaptionToolTip" xml:space="preserve">
    <value>Determines the time interval in the attempt to establish the connection to the server</value>
  </data>
  <data name="TryConnectCaption" xml:space="preserve">
    <value>Repeat connection establishment</value>
  </data>
  <data name="TryConnectCaptionToolTip" xml:space="preserve">
    <value>Tries to connect to the server in a given time interval</value>
  </data>
  <data name="NetworkConditions" xml:space="preserve">
    <value>Network Conditions</value>
  </data>
  <data name="PresentationSettings" xml:space="preserve">
    <value>Presentation Settings</value>
  </data>
  <data name="TCPIPSettings" xml:space="preserve">
    <value>TCP/IP Settings</value>
  </data>
</root>