//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.M138Analyzer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.M138Analyzer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculated key ähnelt.
        /// </summary>
        internal static string CalculatedKeyCaption {
            get {
                return ResourceManager.GetString("CalculatedKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Best key found ähnelt.
        /// </summary>
        internal static string CalculatedKeyTooltip {
            get {
                return ResourceManager.GetString("CalculatedKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext ähnelt.
        /// </summary>
        internal static string CiphertextCaption {
            get {
                return ResourceManager.GetString("CiphertextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext to be used ähnelt.
        /// </summary>
        internal static string CiphertextTooltip {
            get {
                return ResourceManager.GetString("CiphertextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy all lines ähnelt.
        /// </summary>
        internal static string Copy_all {
            get {
                return ResourceManager.GetString("Copy_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy key ähnelt.
        /// </summary>
        internal static string Copy_key {
            get {
                return ResourceManager.GetString("Copy_key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy key phrase ähnelt.
        /// </summary>
        internal static string Copy_keyphrase {
            get {
                return ResourceManager.GetString("Copy_keyphrase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy selected line ähnelt.
        /// </summary>
        internal static string Copy_line {
            get {
                return ResourceManager.GetString("Copy_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy text ähnelt.
        /// </summary>
        internal static string Copy_text {
            get {
                return ResourceManager.GetString("Copy_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy value ähnelt.
        /// </summary>
        internal static string Copy_value {
            get {
                return ResourceManager.GetString("Copy_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current analyzed offset: ähnelt.
        /// </summary>
        internal static string CurrentAnalysedKeylengthLabel {
            get {
                return ResourceManager.GetString("CurrentAnalysedKeylengthLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elapsed time: ähnelt.
        /// </summary>
        internal static string ElapsedLabel {
            get {
                return ResourceManager.GetString("ElapsedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Estimated end time: ähnelt.
        /// </summary>
        internal static string EndLabel {
            get {
                return ResourceManager.GetString("EndLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fast converge ähnelt.
        /// </summary>
        internal static string FastConvergeCaption {
            get {
                return ResourceManager.GetString("FastConvergeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select whether &quot;Fast converge&quot; should be used. Explanation can be found in the online help. ähnelt.
        /// </summary>
        internal static string FastConvergeTooltip {
            get {
                return ResourceManager.GetString("FastConvergeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Highscore Beep ähnelt.
        /// </summary>
        internal static string HighscoreBeepCaption {
            get {
                return ResourceManager.GetString("HighscoreBeepCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Make a sound if a new highscore has been found. Highscores in the first 10 seconds are ignored. ähnelt.
        /// </summary>
        internal static string HighscoreBeepTooltip {
            get {
                return ResourceManager.GetString("HighscoreBeepTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of restarts ähnelt.
        /// </summary>
        internal static string HillClimbRestartsCaption {
            get {
                return ResourceManager.GetString("HillClimbRestartsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the number of restarts for each offset. ähnelt.
        /// </summary>
        internal static string HillClimbRestartsTooltip {
            get {
                return ResourceManager.GetString("HillClimbRestartsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string KeyHeader {
            get {
                return ResourceManager.GetString("KeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keylength ähnelt.
        /// </summary>
        internal static string KeyLengthCaption {
            get {
                return ResourceManager.GetString("KeyLengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        internal static string KeyLengthHeader {
            get {
                return ResourceManager.GetString("KeyLengthHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the keylength to be used for analysis. ähnelt.
        /// </summary>
        internal static string KeyLengthTooltip {
            get {
                return ResourceManager.GetString("KeyLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Average keys / sec: ähnelt.
        /// </summary>
        internal static string KeysPerSecondAverageLabel {
            get {
                return ResourceManager.GetString("KeysPerSecondAverageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current keys / sec: ähnelt.
        /// </summary>
        internal static string KeysPerSecondCurrentLabel {
            get {
                return ResourceManager.GetString("KeysPerSecondCurrentLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kill counter ähnelt.
        /// </summary>
        internal static string KillCounterCaption {
            get {
                return ResourceManager.GetString("KillCounterCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After how many iterations without finding a better value should the search be abandoned? ähnelt.
        /// </summary>
        internal static string KillCounterTooltip {
            get {
                return ResourceManager.GetString("KillCounterTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        internal static string LanguageCaption {
            get {
                return ResourceManager.GetString("LanguageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        internal static string LanguageList1 {
            get {
                return ResourceManager.GetString("LanguageList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die German ähnelt.
        /// </summary>
        internal static string LanguageList2 {
            get {
                return ResourceManager.GetString("LanguageList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Spanish ähnelt.
        /// </summary>
        internal static string LanguageList3 {
            get {
                return ResourceManager.GetString("LanguageList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the language the plaintext is most likely written in. ähnelt.
        /// </summary>
        internal static string LanguageTooltip {
            get {
                return ResourceManager.GetString("LanguageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Facts ähnelt.
        /// </summary>
        internal static string LocalLabel {
            get {
                return ResourceManager.GetString("LocalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum offset ähnelt.
        /// </summary>
        internal static string MaxOffsetCaption {
            get {
                return ResourceManager.GetString("MaxOffsetCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the maximum offset to be analyzed. ähnelt.
        /// </summary>
        internal static string MaxOffsetTooltip {
            get {
                return ResourceManager.GetString("MaxOffsetTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method ähnelt.
        /// </summary>
        internal static string MethodCaption {
            get {
                return ResourceManager.GetString("MethodCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Known plaintext ähnelt.
        /// </summary>
        internal static string MethodList1 {
            get {
                return ResourceManager.GetString("MethodList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Partially known plaintext ähnelt.
        /// </summary>
        internal static string MethodList2 {
            get {
                return ResourceManager.GetString("MethodList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hill climbing ähnelt.
        /// </summary>
        internal static string MethodList3 {
            get {
                return ResourceManager.GetString("MethodList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simulated Annealing ähnelt.
        /// </summary>
        internal static string MethodList4 {
            get {
                return ResourceManager.GetString("MethodList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the method that should be used to attack the cipher. ähnelt.
        /// </summary>
        internal static string MethodTooltip {
            get {
                return ResourceManager.GetString("MethodTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum offset ähnelt.
        /// </summary>
        internal static string MinOffsetCaption {
            get {
                return ResourceManager.GetString("MinOffsetCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the minimum offset to be analyzed ähnelt.
        /// </summary>
        internal static string MinOffsetTooltip {
            get {
                return ResourceManager.GetString("MinOffsetTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        internal static string OffsetHeader {
            get {
                return ResourceManager.GetString("OffsetHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        internal static string PlaintextCaption {
            get {
                return ResourceManager.GetString("PlaintextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Known plaintext to be used ähnelt.
        /// </summary>
        internal static string PlaintextTooltip {
            get {
                return ResourceManager.GetString("PlaintextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M-138 Analyzer ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A selection of attacks on the M-138 explaining the used hillclimbing in detail ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remaining: ähnelt.
        /// </summary>
        internal static string RemainingLabel {
            get {
                return ResourceManager.GetString("RemainingLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resulting plaintext ähnelt.
        /// </summary>
        internal static string ResultTextCaption {
            get {
                return ResourceManager.GetString("ResultTextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resulting plaintext using the best found key ähnelt.
        /// </summary>
        internal static string ResultTextTooltip {
            get {
                return ResourceManager.GetString("ResultTextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start time: ähnelt.
        /// </summary>
        internal static string StartLabel {
            get {
                return ResourceManager.GetString("StartLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Strips ähnelt.
        /// </summary>
        internal static string StripsCaption {
            get {
                return ResourceManager.GetString("StripsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter the strips as string, where each line defines one strip. ähnelt.
        /// </summary>
        internal static string StripsTooltip {
            get {
                return ResourceManager.GetString("StripsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        internal static string TextHeader {
            get {
                return ResourceManager.GetString("TextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Top ranking keys ähnelt.
        /// </summary>
        internal static string TopTenL {
            get {
                return ResourceManager.GetString("TopTenL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value ähnelt.
        /// </summary>
        internal static string ValueHeader {
            get {
                return ResourceManager.GetString("ValueHeader", resourceCulture);
            }
        }
    }
}
