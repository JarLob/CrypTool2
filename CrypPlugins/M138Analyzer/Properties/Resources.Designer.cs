//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.34209
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.M138Analyzer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.M138Analyzer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext ähnelt.
        /// </summary>
        internal static string CiphertextInputDes {
            get {
                return ResourceManager.GetString("CiphertextInputDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext to be used. ähnelt.
        /// </summary>
        internal static string CiphertextInputDescription {
            get {
                return ResourceManager.GetString("CiphertextInputDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current analyzed offset ähnelt.
        /// </summary>
        internal static string CurrentAnalysedKeylengthLabel {
            get {
                return ResourceManager.GetString("CurrentAnalysedKeylengthLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elapsed time ähnelt.
        /// </summary>
        internal static string ElapsedLabel {
            get {
                return ResourceManager.GetString("ElapsedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Estimated end time ähnelt.
        /// </summary>
        internal static string EndLabel {
            get {
                return ResourceManager.GetString("EndLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        internal static string EnglishDes {
            get {
                return ResourceManager.GetString("EnglishDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fast converge ähnelt.
        /// </summary>
        internal static string FastConvergeCap {
            get {
                return ResourceManager.GetString("FastConvergeCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select whether &quot;Fast converge&quot; should be used. Explanation can be found in the online help. ähnelt.
        /// </summary>
        internal static string FastConvergeDes {
            get {
                return ResourceManager.GetString("FastConvergeDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die German ähnelt.
        /// </summary>
        internal static string GermanDes {
            get {
                return ResourceManager.GetString("GermanDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hill climbing ähnelt.
        /// </summary>
        internal static string HillClimbingDes {
            get {
                return ResourceManager.GetString("HillClimbingDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of restarts for hill climbing ähnelt.
        /// </summary>
        internal static string HillClimbRestartsCap {
            get {
                return ResourceManager.GetString("HillClimbRestartsCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the number of restarts hill climbing should do for each offset. ähnelt.
        /// </summary>
        internal static string HillClimbRestartsDes {
            get {
                return ResourceManager.GetString("HillClimbRestartsDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string KeyHeader {
            get {
                return ResourceManager.GetString("KeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keylength ähnelt.
        /// </summary>
        internal static string KeyLengthCap {
            get {
                return ResourceManager.GetString("KeyLengthCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the keylength to be used for analysis. ähnelt.
        /// </summary>
        internal static string KeyLengthDes {
            get {
                return ResourceManager.GetString("KeyLengthDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offset ähnelt.
        /// </summary>
        internal static string KeyLengthHeader {
            get {
                return ResourceManager.GetString("KeyLengthHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculated key ähnelt.
        /// </summary>
        internal static string KeyOutputDes {
            get {
                return ResourceManager.GetString("KeyOutputDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Best key found. ähnelt.
        /// </summary>
        internal static string KeyOutputDescription {
            get {
                return ResourceManager.GetString("KeyOutputDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Average keys/sec ähnelt.
        /// </summary>
        internal static string KeysPerSecondAverageLabel {
            get {
                return ResourceManager.GetString("KeysPerSecondAverageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current keys/sec ähnelt.
        /// </summary>
        internal static string KeysPerSecondCurrentLabel {
            get {
                return ResourceManager.GetString("KeysPerSecondCurrentLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Known plaintext ähnelt.
        /// </summary>
        internal static string KnownPlaintextDes {
            get {
                return ResourceManager.GetString("KnownPlaintextDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        internal static string LanguageCap {
            get {
                return ResourceManager.GetString("LanguageCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the language the plaintext is most likely written in. ähnelt.
        /// </summary>
        internal static string LanguageDes {
            get {
                return ResourceManager.GetString("LanguageDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Facts ähnelt.
        /// </summary>
        internal static string LocalLabel {
            get {
                return ResourceManager.GetString("LocalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum offset ähnelt.
        /// </summary>
        internal static string MaxOffsetCap {
            get {
                return ResourceManager.GetString("MaxOffsetCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the maximum offset to be analyzed. ähnelt.
        /// </summary>
        internal static string MaxOffsetDes {
            get {
                return ResourceManager.GetString("MaxOffsetDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method ähnelt.
        /// </summary>
        internal static string MethodCap {
            get {
                return ResourceManager.GetString("MethodCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the method that should be used to attack the cipher. ähnelt.
        /// </summary>
        internal static string MethodDes {
            get {
                return ResourceManager.GetString("MethodDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum offset ähnelt.
        /// </summary>
        internal static string MinOffsetCap {
            get {
                return ResourceManager.GetString("MinOffsetCap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set the minimum offset to be analyzed ähnelt.
        /// </summary>
        internal static string MinOffsetDes {
            get {
                return ResourceManager.GetString("MinOffsetDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Partially Known Plaintext ähnelt.
        /// </summary>
        internal static string PartKnowPlainDes {
            get {
                return ResourceManager.GetString("PartKnowPlainDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        internal static string PlaintextInputDes {
            get {
                return ResourceManager.GetString("PlaintextInputDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Known plaintext to be used. ähnelt.
        /// </summary>
        internal static string PlaintextInputDescription {
            get {
                return ResourceManager.GetString("PlaintextInputDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die M-138 Analyzer ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A selection of attacks on the M-138 ähnelt.
        /// </summary>
        internal static string PluginTooltoip {
            get {
                return ResourceManager.GetString("PluginTooltoip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resulting plaintext ähnelt.
        /// </summary>
        internal static string ResultTextDes {
            get {
                return ResourceManager.GetString("ResultTextDes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resulting plaintext using the best found key. ähnelt.
        /// </summary>
        internal static string ResultTextDescription {
            get {
                return ResourceManager.GetString("ResultTextDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start time ähnelt.
        /// </summary>
        internal static string StartLabel {
            get {
                return ResourceManager.GetString("StartLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext ähnelt.
        /// </summary>
        internal static string TextHeader {
            get {
                return ResourceManager.GetString("TextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Top ranking keys ähnelt.
        /// </summary>
        internal static string TopTenL {
            get {
                return ResourceManager.GetString("TopTenL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value ähnelt.
        /// </summary>
        internal static string ValueHeader {
            get {
                return ResourceManager.GetString("ValueHeader", resourceCulture);
            }
        }
    }
}
