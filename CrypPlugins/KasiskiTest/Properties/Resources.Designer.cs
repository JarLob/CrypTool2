//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.235
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KasiskiTest.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KasiskiTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Case Sensitivity  ähnelt.
        /// </summary>
        internal static string CaseSensitivityCaption {
            get {
                return ResourceManager.GetString("CaseSensitivityCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Yes &apos;a&apos; should equal &apos;A&apos; ähnelt.
        /// </summary>
        internal static string CaseSensitivityList1 {
            get {
                return ResourceManager.GetString("CaseSensitivityList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No &apos;a&apos; should not equal &apos;A&apos; ähnelt.
        /// </summary>
        internal static string CaseSensitivityList2 {
            get {
                return ResourceManager.GetString("CaseSensitivityList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Is a==A? Please pay attention to the alphabet used in the given ciphertext as well as the &apos;Case Sensitivity&apos; of the applied Vigenère cipher. ähnelt.
        /// </summary>
        internal static string CaseSensitivityTooltip {
            get {
                return ResourceManager.GetString("CaseSensitivityTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum Factor Size ähnelt.
        /// </summary>
        internal static string FactorSizeCaption {
            get {
                return ResourceManager.GetString("FactorSizeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter maximum factor/key size to be examined. default = 20 ähnelt.
        /// </summary>
        internal static string FactorSizeTooltip {
            get {
                return ResourceManager.GetString("FactorSizeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gram length ähnelt.
        /// </summary>
        internal static string GrammLengthCaption {
            get {
                return ResourceManager.GetString("GrammLengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter maximum gram length to be examined. Minimum/default = 3 ähnelt.
        /// </summary>
        internal static string GrammLengthTooltip {
            get {
                return ResourceManager.GetString("GrammLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Integer Array ähnelt.
        /// </summary>
        internal static string IntegerArrayCaption {
            get {
                return ResourceManager.GetString("IntegerArrayCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die An array containing proposed keylengths as integers. Used by the VigenèreAnalyser. ähnelt.
        /// </summary>
        internal static string IntegerArrayTooltip {
            get {
                return ResourceManager.GetString("IntegerArrayTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frequency of factors composing the distances ähnelt.
        /// </summary>
        internal static string Label1Desc {
            get {
                return ResourceManager.GetString("Label1Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die between identical strings in the ciphertext ähnelt.
        /// </summary>
        internal static string Label2Desc {
            get {
                return ResourceManager.GetString("Label2Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of hits for the corresponding factor ähnelt.
        /// </summary>
        internal static string Number_of_hits_for_the_corresponding_factor {
            get {
                return ResourceManager.GetString("Number_of_hits_for_the_corresponding_factor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Kasiski&apos;s Test ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die KasiskiTest/DetailedDescription/Description.xaml ähnelt.
        /// </summary>
        internal static string PluginDescriptionURL {
            get {
                return ResourceManager.GetString("PluginDescriptionURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Calculates possible key lengths of a polyalphabetic substitution cipher. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Handling of unknown characters ähnelt.
        /// </summary>
        internal static string RemoveUnknownSymbolsCaption {
            get {
                return ResourceManager.GetString("RemoveUnknownSymbolsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore (leave unmodified) ähnelt.
        /// </summary>
        internal static string RemoveUnknownSymbolsList1 {
            get {
                return ResourceManager.GetString("RemoveUnknownSymbolsList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        internal static string RemoveUnknownSymbolsList2 {
            get {
                return ResourceManager.GetString("RemoveUnknownSymbolsList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die What should be done with encountered characters at the input which are not in the alphabet? ähnelt.
        /// </summary>
        internal static string RemoveUnknownSymbolsTooltip {
            get {
                return ResourceManager.GetString("RemoveUnknownSymbolsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The string to be analyzed ähnelt.
        /// </summary>
        internal static string StringInputCaption {
            get {
                return ResourceManager.GetString("StringInputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input string should be a cipher text encrypted with the Vigenère cipher. ähnelt.
        /// </summary>
        internal static string StringInputTooltip {
            get {
                return ResourceManager.GetString("StringInputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multiples of the keylength and the amount of times they are encountered. ähnelt.
        /// </summary>
        internal static string StringOutputCaption {
            get {
                return ResourceManager.GetString("StringOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keylength is either the most common factor, or a multiple of it. ähnelt.
        /// </summary>
        internal static string StringOutputTooltip {
            get {
                return ResourceManager.GetString("StringOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tip: The keylength could be one of the most frequent factors or a multiple ähnelt.
        /// </summary>
        internal static string TooltipDesc {
            get {
                return ResourceManager.GetString("TooltipDesc", resourceCulture);
            }
        }
    }
}
