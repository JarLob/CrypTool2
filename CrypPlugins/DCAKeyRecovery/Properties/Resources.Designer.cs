//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DCAKeyRecovery.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DCAKeyRecovery.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die key candidate ähnelt.
        /// </summary>
        internal static string AnyRoundAttackDataColHeader1 {
            get {
                return ResourceManager.GetString("AnyRoundAttackDataColHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of hits ähnelt.
        /// </summary>
        internal static string AnyRoundAttackDataColHeader2 {
            get {
                return ResourceManager.GetString("AnyRoundAttackDataColHeader2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probability ähnelt.
        /// </summary>
        internal static string AnyRoundAttackDataColHeader3 {
            get {
                return ResourceManager.GetString("AnyRoundAttackDataColHeader3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End: ähnelt.
        /// </summary>
        internal static string AnyRoundAttackEnd {
            get {
                return ResourceManager.GetString("AnyRoundAttackEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attacked encryption round: ähnelt.
        /// </summary>
        internal static string AnyRoundAttackRound {
            get {
                return ResourceManager.GetString("AnyRoundAttackRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        internal static string AnyRoundAttackRoundResults {
            get {
                return ResourceManager.GetString("AnyRoundAttackRoundResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start: ähnelt.
        /// </summary>
        internal static string AnyRoundAttackStart {
            get {
                return ResourceManager.GetString("AnyRoundAttackStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        internal static string AnyRoundAttackStatus {
            get {
                return ResourceManager.GetString("AnyRoundAttackStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected number of hits: ähnelt.
        /// </summary>
        internal static string AnyRoundExpectedHitCount {
            get {
                return ResourceManager.GetString("AnyRoundExpectedHitCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected probability: ähnelt.
        /// </summary>
        internal static string AnyRoundExpectedProbability {
            get {
                return ResourceManager.GetString("AnyRoundExpectedProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Count of message pairs (unfiltered/filtered): ähnelt.
        /// </summary>
        internal static string AnyRoundMessagePairCount {
            get {
                return ResourceManager.GetString("AnyRoundMessagePairCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Recovered round key: ähnelt.
        /// </summary>
        internal static string AnyRoundRecoveredRoundKey {
            get {
                return ResourceManager.GetString("AnyRoundRecoveredRoundKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} key recovery ähnelt.
        /// </summary>
        internal static string AttackLastRoundHeader {
            get {
                return ResourceManager.GetString("AttackLastRoundHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatic mode ähnelt.
        /// </summary>
        internal static string AutomaticMode {
            get {
                return ResourceManager.GetString("AutomaticMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No user input required in automatic mode ähnelt.
        /// </summary>
        internal static string AutomaticModeToolTip {
            get {
                return ResourceManager.GetString("AutomaticModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip key ähnelt.
        /// </summary>
        internal static string BtnNextKey {
            get {
                return ResourceManager.GetString("BtnNextKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip message pair ähnelt.
        /// </summary>
        internal static string BtnNextMessage {
            get {
                return ResourceManager.GetString("BtnNextMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip ähnelt.
        /// </summary>
        internal static string BtnSkip {
            get {
                return ResourceManager.GetString("BtnSkip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start ähnelt.
        /// </summary>
        internal static string BtnStart {
            get {
                return ResourceManager.GetString("BtnStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choice of cipher ähnelt.
        /// </summary>
        internal static string ChoiceOfAlgorithm {
            get {
                return ResourceManager.GetString("ChoiceOfAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At this point, you can select one of the ciphers contained in the list. This can be examined by differential cryptanalysis. ähnelt.
        /// </summary>
        internal static string ChoiceOfAlgorithmToolTop {
            get {
                return ResourceManager.GetString("ChoiceOfAlgorithmToolTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher 1 (16 bit block size, 2 round keys, 32 bit key length) ähnelt.
        /// </summary>
        internal static string Cipher1 {
            get {
                return ResourceManager.GetString("Cipher1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die key candidate ähnelt.
        /// </summary>
        internal static string Cipher1CipherViewCol {
            get {
                return ResourceManager.GetString("Cipher1CipherViewCol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total ähnelt.
        /// </summary>
        internal static string Cipher1SummaryResultViewTotalSummary {
            get {
                return ResourceManager.GetString("Cipher1SummaryResultViewTotalSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher 2 (16 bit block size, 4 round keys, 64 bit key length) ähnelt.
        /// </summary>
        internal static string Cipher2 {
            get {
                return ResourceManager.GetString("Cipher2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 1 ähnelt.
        /// </summary>
        internal static string Cipher2SummaryResultViewRound1 {
            get {
                return ResourceManager.GetString("Cipher2SummaryResultViewRound1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 2 ähnelt.
        /// </summary>
        internal static string Cipher2SummaryResultViewRound2 {
            get {
                return ResourceManager.GetString("Cipher2SummaryResultViewRound2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 3 ähnelt.
        /// </summary>
        internal static string Cipher2SummaryResultViewRound3 {
            get {
                return ResourceManager.GetString("Cipher2SummaryResultViewRound3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total ähnelt.
        /// </summary>
        internal static string Cipher2SummaryResultViewTotalSummary {
            get {
                return ResourceManager.GetString("Cipher2SummaryResultViewTotalSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher 3 (16 bit block size, 6 round keys, 96 bit key length) ähnelt.
        /// </summary>
        internal static string Cipher3 {
            get {
                return ResourceManager.GetString("Cipher3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 1 ähnelt.
        /// </summary>
        internal static string Cipher3SummaryResultViewRound1 {
            get {
                return ResourceManager.GetString("Cipher3SummaryResultViewRound1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 2 ähnelt.
        /// </summary>
        internal static string Cipher3SummaryResultViewRound2 {
            get {
                return ResourceManager.GetString("Cipher3SummaryResultViewRound2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 3 ähnelt.
        /// </summary>
        internal static string Cipher3SummaryResultViewRound3 {
            get {
                return ResourceManager.GetString("Cipher3SummaryResultViewRound3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 4 ähnelt.
        /// </summary>
        internal static string Cipher3SummaryResultViewRound4 {
            get {
                return ResourceManager.GetString("Cipher3SummaryResultViewRound4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 5 ähnelt.
        /// </summary>
        internal static string Cipher3SummaryResultViewRound5 {
            get {
                return ResourceManager.GetString("Cipher3SummaryResultViewRound5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total ähnelt.
        /// </summary>
        internal static string Cipher3SummaryResultViewTotalSummary {
            get {
                return ResourceManager.GetString("Cipher3SummaryResultViewTotalSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Differential ähnelt.
        /// </summary>
        internal static string DifferentialInput {
            get {
                return ResourceManager.GetString("DifferentialInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input for the differential ähnelt.
        /// </summary>
        internal static string DifferentialInputToolTip {
            get {
                return ResourceManager.GetString("DifferentialInputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ciphertext message pairs ähnelt.
        /// </summary>
        internal static string EncryptedMessagePairsInput {
            get {
                return ResourceManager.GetString("EncryptedMessagePairsInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input for the ciphertext message pairs ähnelt.
        /// </summary>
        internal static string EncryptedMessagePairsInputToolTip {
            get {
                return ResourceManager.GetString("EncryptedMessagePairsInputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected difference ähnelt.
        /// </summary>
        internal static string ExpectedDifferential {
            get {
                return ResourceManager.GetString("ExpectedDifferential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output for the expected difference ähnelt.
        /// </summary>
        internal static string ExpectedDifferentialToolTip {
            get {
                return ResourceManager.GetString("ExpectedDifferentialToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finished ähnelt.
        /// </summary>
        internal static string FinishedOutput {
            get {
                return ResourceManager.GetString("FinishedOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The output indicates to the DCA PathFinder component that the calculation has been completed. ähnelt.
        /// </summary>
        internal static string FinishedOutputToolTip {
            get {
                return ResourceManager.GetString("FinishedOutputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GER ähnelt.
        /// </summary>
        internal static string Lang {
            get {
                return ResourceManager.GetString("Lang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current ciphertext: ähnelt.
        /// </summary>
        internal static string LastRoundAttackCurrentCiphertext {
            get {
                return ResourceManager.GetString("LastRoundAttackCurrentCiphertext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current key candidate: ähnelt.
        /// </summary>
        internal static string LastRoundAttackCurrentKeyCandidate {
            get {
                return ResourceManager.GetString("LastRoundAttackCurrentKeyCandidate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of keys to be tested: ähnelt.
        /// </summary>
        internal static string LastRoundAttackCurrentKeyOfAll {
            get {
                return ResourceManager.GetString("LastRoundAttackCurrentKeyOfAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current plaintext: ähnelt.
        /// </summary>
        internal static string LastRoundAttackCurrentPlaintext {
            get {
                return ResourceManager.GetString("LastRoundAttackCurrentPlaintext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Iteration ähnelt.
        /// </summary>
        internal static string LastRoundAttackDataColHeader1 {
            get {
                return ResourceManager.GetString("LastRoundAttackDataColHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remaining key candidates ähnelt.
        /// </summary>
        internal static string LastRoundAttackDataColHeader2 {
            get {
                return ResourceManager.GetString("LastRoundAttackDataColHeader2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End: ähnelt.
        /// </summary>
        internal static string LastRoundAttackEnd {
            get {
                return ResourceManager.GetString("LastRoundAttackEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected difference: ähnelt.
        /// </summary>
        internal static string LastRoundAttackExpectedDifference {
            get {
                return ResourceManager.GetString("LastRoundAttackExpectedDifference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Examined plaintext/ciphertext pairs: ähnelt.
        /// </summary>
        internal static string LastRoundAttackNumberOfExaminedPairs {
            get {
                return ResourceManager.GetString("LastRoundAttackNumberOfExaminedPairs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remaining key candidates: ähnelt.
        /// </summary>
        internal static string LastRoundAttackRemainingKeyCandidates {
            get {
                return ResourceManager.GetString("LastRoundAttackRemainingKeyCandidates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attacked encryption round: ähnelt.
        /// </summary>
        internal static string LastRoundAttackRound {
            get {
                return ResourceManager.GetString("LastRoundAttackRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Iterations ähnelt.
        /// </summary>
        internal static string LastRoundAttackRoundResults {
            get {
                return ResourceManager.GetString("LastRoundAttackRoundResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start: ähnelt.
        /// </summary>
        internal static string LastRoundAttackStart {
            get {
                return ResourceManager.GetString("LastRoundAttackStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        internal static string LastRoundAttackStatus {
            get {
                return ResourceManager.GetString("LastRoundAttackStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected difference: ähnelt.
        /// </summary>
        internal static string MessageDifferenceOutput {
            get {
                return ResourceManager.GetString("MessageDifferenceOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output for the expected difference ähnelt.
        /// </summary>
        internal static string MessageDifferenceOutputToolTip {
            get {
                return ResourceManager.GetString("MessageDifferenceOutputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The last round keys could not be restored. This can happen if one of the previous round keys was incorrectly calculated. Possibly the parameters in the DCA PathFinder component should be selected again. ähnelt.
        /// </summary>
        internal static string MessageNoResult {
            get {
                return ResourceManager.GetString("MessageNoResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of message pairs ähnelt.
        /// </summary>
        internal static string NeededMessageCountOutput {
            get {
                return ResourceManager.GetString("NeededMessageCountOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output for the number of requested message pairs ähnelt.
        /// </summary>
        internal static string NeededMessageCountOutputToolTip {
            get {
                return ResourceManager.GetString("NeededMessageCountOutputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Differential cryptanalysis is continued in the ähnelt.
        /// </summary>
        internal static string nextStepTextRun1 {
            get {
                return ResourceManager.GetString("nextStepTextRun1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DCA PathFinder componend ähnelt.
        /// </summary>
        internal static string nextStepTextRun2 {
            get {
                return ResourceManager.GetString("nextStepTextRun2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die speed options ähnelt.
        /// </summary>
        internal static string PerformanceSettingsGroup {
            get {
                return ResourceManager.GetString("PerformanceSettingsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DCA KeyRecovery ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This component performs the recovery of key bits from round keys. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round keys ähnelt.
        /// </summary>
        internal static string RoundKeysOutput {
            get {
                return ResourceManager.GetString("RoundKeysOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the round keys ähnelt.
        /// </summary>
        internal static string RoundKeysOutputToolTip {
            get {
                return ResourceManager.GetString("RoundKeysOutputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of decryptions: ähnelt.
        /// </summary>
        internal static string SummaryResultViewCountOfDecryptions {
            get {
                return ResourceManager.GetString("SummaryResultViewCountOfDecryptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of messages: ähnelt.
        /// </summary>
        internal static string SummaryResultViewCountOfMessages {
            get {
                return ResourceManager.GetString("SummaryResultViewCountOfMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attacked encryption round: ähnelt.
        /// </summary>
        internal static string SummaryResultViewCurrentRound {
            get {
                return ResourceManager.GetString("SummaryResultViewCurrentRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End: ähnelt.
        /// </summary>
        internal static string SummaryResultViewEndTime {
            get {
                return ResourceManager.GetString("SummaryResultViewEndTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restored round key k0: ähnelt.
        /// </summary>
        internal static string SummaryResultViewRecoveredK0 {
            get {
                return ResourceManager.GetString("SummaryResultViewRecoveredK0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restored round key k1: ähnelt.
        /// </summary>
        internal static string SummaryResultViewRecoveredK1 {
            get {
                return ResourceManager.GetString("SummaryResultViewRecoveredK1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restored round key k2: ähnelt.
        /// </summary>
        internal static string SummaryResultViewRecoveredK2 {
            get {
                return ResourceManager.GetString("SummaryResultViewRecoveredK2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restored round key k3: ähnelt.
        /// </summary>
        internal static string SummaryResultViewRecoveredK3 {
            get {
                return ResourceManager.GetString("SummaryResultViewRecoveredK3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restored round key k4: ähnelt.
        /// </summary>
        internal static string SummaryResultViewRecoveredK4 {
            get {
                return ResourceManager.GetString("SummaryResultViewRecoveredK4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restored round key k5: ähnelt.
        /// </summary>
        internal static string SummaryResultViewRecoveredK5 {
            get {
                return ResourceManager.GetString("SummaryResultViewRecoveredK5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start: ähnelt.
        /// </summary>
        internal static string SummaryResultViewStartTime {
            get {
                return ResourceManager.GetString("SummaryResultViewStartTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tested keys: ähnelt.
        /// </summary>
        internal static string SummaryResultViewTestedKeys {
            get {
                return ResourceManager.GetString("SummaryResultViewTestedKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detailed view ähnelt.
        /// </summary>
        internal static string TabItemHeaderCipher {
            get {
                return ResourceManager.GetString("TabItemHeaderCipher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round status ähnelt.
        /// </summary>
        internal static string TabItemHeaderRoundSummary {
            get {
                return ResourceManager.GetString("TabItemHeaderRoundSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overall status ähnelt.
        /// </summary>
        internal static string TabItemHeaderSummary {
            get {
                return ResourceManager.GetString("TabItemHeaderSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Threads to be used ähnelt.
        /// </summary>
        internal static string ThreadCount {
            get {
                return ResourceManager.GetString("ThreadCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specifies the number of threads to use for the calculation. ähnelt.
        /// </summary>
        internal static string ThreadCountToolTip {
            get {
                return ResourceManager.GetString("ThreadCountToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The maximum number of threads for your system is {0} threads. This number is limited by your processor. ähnelt.
        /// </summary>
        internal static string ThreadSettingError {
            get {
                return ResourceManager.GetString("ThreadSettingError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tutorial options ähnelt.
        /// </summary>
        internal static string TutorialSettingsGroup {
            get {
                return ResourceManager.GetString("TutorialSettingsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update of the user interface during calculations ähnelt.
        /// </summary>
        internal static string UIUpdateWhileExecution {
            get {
                return ResourceManager.GetString("UIUpdateWhileExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Determines whether the user interface is updated during calculations or only after the calculation has been completed. This setting affects the execution speed of the component. ähnelt.
        /// </summary>
        internal static string UIUpdateWhileExecutionToolTip {
            get {
                return ResourceManager.GetString("UIUpdateWhileExecutionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Plaintext message pairs ähnelt.
        /// </summary>
        internal static string UnencryptedMessagePairsInput {
            get {
                return ResourceManager.GetString("UnencryptedMessagePairsInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input for the plaintext message pairs ähnelt.
        /// </summary>
        internal static string UnencryptedMessagePairsInputToolTip {
            get {
                return ResourceManager.GetString("UnencryptedMessagePairsInputToolTip", resourceCulture);
            }
        }
    }
}
