<?xml version="1.0" encoding="utf-8"?>
<documentation>
  <language culture="en" />
  <language culture="zh-CN" />
  <language culture="ru" />
  <language culture="de-DE" />
  <introduction lang="en">
    There are two millionaires, Alice and Bob. They want to know who is richer, but they don´t want to disclose to each other how much money they own.
    This problem is solved by Yao´s millionaire protocol. It was proposed by the computer scientist Andrew Yao in 1982.
    <newline /><newline />
    CrypTool implements the protocol with the three components Yao1, Yao2 and Yao3.
    Yao1 and Yao2 represent actions that are executed by Alice, Yao3 is executed by Bob.
  </introduction>
  <introduction lang="zh-CN">有两个百万富翁，爱丽丝和鲍勃。他们想知道谁更富有，但他们不想彼此透露自己拥有多少钱。姚明的百万富翁协议解决了这个问题。它是由计算机科学家Andrew Yao在1982年提出的。CrypTool使用Yao1，Yao2和Yao3这三个组件来实现该协议。 Yao1和Yao2表示由Alice执行的动作，Yao3由Bob执行。</introduction>
  <introduction lang="ru">Есть два миллионера, Алиса и Боб. Они хотят знать, кто богаче, но они не хотят раскрывать друг другу, сколько денег у них есть. Эта проблема решена протоколом миллионеров Яо. Это было предложено компьютерным ученым Эндрю Яо в ​​1982 году. CrypTool реализует протокол с тремя компонентами Yao1, Yao2 и Yao3. Yao1 и Yao2 представляют действия, которые выполняются Алисой, Yao3 исполняется Бобом.</introduction>
  <introduction lang="de-DE">
    Die beiden Millionäre Alice und Bob wollen herausfinden, wer von ihnen reicher ist, ohne dem anderen dabei mitteilen zu müssen, wie reich sie genau sind.
    Dieses Problem wird auch "Yaos Millionärsproblem" genannt. Der Informatiker Andrew Yao schlug 1982 ein Protokoll zur Lösung des Problems dar.
    <newline /><newline />
    Das Protokoll wird in CrypTool durch die drei Komponenten Yao1, Yao2 und Yao3 implementiert.
    Yao1 und Yao2 stellen Aktionen dar, die von Alice ausgeführt werden, Yao3 wird von Bob ausgeführt.
  </introduction>
  <usage lang="en">
    This component implements the second step of the protocol on Alice's side.
    <newline /><newline />
    Alice and Bob must agree on an upper limit m, that is bigger than the amount of money that each of them owns.
    The value of m must be entered to the component on the input 'Maximal money'.
    Enter the amount of Alices money on the input 'A' and the list $Y(i)$, that was created using Yao1, on the input 'Y'.
    On the input 'p', a random prime number generated by Alice must be entered. p must also be made known to Bob by sending it to the component Yao3.
    The output of this component is the list Z, where $Z(i) = Y(i) &amp; p$ for $i&lt;=A$, and $Z(i) = (Y(i)+1) &amp; p$ for $i&gt;A$.
  </usage>
  <usage lang="zh-CN">该组件在爱丽丝方面实现了协议的第二步。爱丽丝和鲍勃必须商定一个上限m，该上限大于他们各自拥有的金额。 m的值必须输入到“最大金额”输入中的组件中。在输入“ A”上输入爱丽丝货币的金额，并在输入“ Y”上输入使用Yao1创建的清单$ Y（i）$。在输入“ p”上，必须输入由Alice生成的随机素数。还必须通过将Bob发送给组件Yao3来使p知道p。此组件的输出是列表Z，其中$ i &amp;lt;= A $的$ Z（i）= Y（i）＆p $，而$ Z（i）=（Y（i）+1）和p $ $ i&amp;gt; A $。</usage>
  <usage lang="ru">Этот компонент реализует второй этап протокола по Алисе. Алиса и Боб должны договориться о верхнем пределе m, который больше, чем сумма денег, которую каждый из них владеет. Значение m должно быть введено в компонент на вкладке «Максимальные деньги». Введите сумму денег Alices на вход «A» и список $ Y (i) $, который был создан с использованием Yao1, на входе «Y». На входе &amp;#39;p&amp;#39; должно быть введено случайное простое число, генерируемое Алисой. p также должен быть известен Бобу, отправив его компоненту Yao3. Результатом этого компонента является список Z, где $ Z (i) = Y (i) &amp;amp; p $ для $ i &amp;lt;= A $ и $ Z (i) = (Y (i) +1) &amp;amp; p $ для $ i&amp;gt; A $.</usage>
  <usage lang="de-DE">
    Diese Komponente implementiert den zweiten Schritt des Protokolls auf Alices Seite.
    <newline /><newline />
    Alice und Bob müssen vorab eine obere Schranke m vereinbaren, unterhalb derer das Vermögen der beiden liegt.
    Geben Sie die obere Schranke am Eingang 'Maximaler Betrag' an.
    Am Eingang 'A' muss das Vermögen von Alice eingegeben werden und am Eingang 'Y' die mit Hilfe der Komponente Yao1 erzeugte Liste der $Y(i)$.
    Außerdem wird am Eingang 'p' eine von Alice erzeugte zufällige Primzahl erwartet, die durch die Eingabe in die Komponente Yao3 auch Bob mitgeteilt wird.
    Als Ausgabe erzeugt die Komponente die Liste Z, wobei $Z(i) = Y(i) &amp; p$ für $i&lt;=A$, und $Z(i) = (Y(i)+1) &amp; p$ für $i&gt;A$.
  </usage>
  <presentation lang="en"></presentation>
  <presentation lang="de-DE"></presentation>
  <references>
    <linkReference>
      <link url="http://en.wikipedia.org/wiki/Yao's_Millionaires'_Problem" lang="en" />
      <caption lang="en">Yao's Millionaires' Problem (Wikipedia)</caption>
      <link url="http://de.wikipedia.org/wiki/Yaos_Millionärsproblem" lang="de-DE" />
      <caption lang="de-DE">Yaos Millionärsproblem (Wikipedia)</caption>
    </linkReference>
    <linkReference>
      <link url="http://www.proproco.co.uk/million.pdf" lang="en" />
      <caption lang="en">Yao´s Millionaires' problem (PDF)</caption>
      <link url="http://www.proproco.co.uk/million.pdf" lang="de-DE" />
      <caption lang="de-DE">Yaos Millionärsproblem (PDF, englisch)</caption>
    </linkReference>
  </references>
</documentation>