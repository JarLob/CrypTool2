<?xml version="1.0" encoding="utf-8" ?>

<documentation>

  <language culture="en"/>
  <language culture="de-DE"/>

  <introduction lang="en">
    There are two millionaires, Alice and Bob. They want to know who is richer, but they don´t want to disclose to each other how much money they own.
    This problem is solved by Yao´s millionaire protocol. It was proposed by the computer scientist Andrew Yao in 1982.
    <newline/>
    <newline/>
    CrypTool implements the protocol with the three components Yao1, Yao2 and Yao3.
    Yao1 and Yao2 represent actions that are executed by Alice, Yao3 is executed by Bob.
  </introduction>

  <introduction lang="de-DE">
    Die beiden Millionäre Alice und Bob wollen herausfinden, wer von ihnen reicher ist, ohne dem anderen dabei mitteilen zu müssen, wie reich sie genau sind.
    Dieses Problem wird auch "Yaos Millionärsproblem" genannt. Der Informatiker Andrew Yao schlug 1982 ein Protokoll zur Lösung des Problems dar.
    <newline/>
    <newline/>
    Das Protokoll wird in CrypTool durch die drei Komponenten Yao1, Yao2 und Yao3 implementiert.
    Yao1 und Yao2 stellen Aktionen dar, die von Alice ausgeführt werden, Yao3 wird von Bob ausgeführt.
  </introduction>

  <usage lang="en">
    This component implements the second step of the protocol on Alice's side.
    <newline/>
    <newline/>
    Alice and Bob must agree on an upper limit m, that is bigger than the amount of money that each of them owns.
    The value of m must be entered to the component on the input 'Maximal money'.
    Enter the amount of Alices money on the input 'A' and the list $Y(i)$, that was created using Yao1, on the input 'Y'.
    On the input 'p', a random prime number generated by Alice must be entered. p must also be made known to Bob by sending it to the component Yao3.
    The output of this component is the list Z, where $Z(i) = Y(i) &amp; p$ for $i&lt;=A$, and $Z(i) = (Y(i)+1) &amp; p$ for $i&gt;A$.
  </usage>

  <usage lang="de-DE">
    Diese Komponente implementiert den zweiten Schritt des Protokolls auf Alices Seite.
    <newline/>
    <newline/>
    Alice und Bob müssen vorab eine obere Schranke m vereinbaren, unterhalb derer das Vermögen der beiden liegt.
    Geben Sie die obere Schranke am Eingang 'Maximaler Betrag' an.
    Am Eingang 'A' muss das Vermögen von Alice eingegeben werden und am Eingang 'Y' die mit Hilfe der Komponente Yao1 erzeugte Liste der $Y(i)$.
    Außerdem wird am Eingang 'p' eine von Alice erzeugte zufällige Primzahl erwartet, die durch die Eingabe in die Komponente Yao3 auch Bob mitgeteilt wird.
    Als Ausgabe erzeugt die Komponente die Liste Z, wobei $Z(i) = Y(i) &amp; p$ für $i&lt;=A$, und $Z(i) = (Y(i)+1) &amp; p$ für $i&gt;A$.
  </usage>

  <presentation lang="en">
  </presentation>

  <presentation lang="de-DE">
  </presentation>

  <references>
    <linkReference>
      <link url="http://en.wikipedia.org/wiki/Yao's_Millionaires'_Problem" lang="en" />
      <caption lang="en">Yao's Millionaires' Problem (Wikipedia)</caption>
      <link url="http://de.wikipedia.org/wiki/Yaos_Millionärsproblem" lang="de-DE" />
      <caption lang="de-DE">Yaos Millionärsproblem (Wikipedia)</caption>
    </linkReference>
    <linkReference>
      <link url="http://www.proproco.co.uk/million.pdf" lang="en" />
      <caption lang="en">Yao´s Millionaires' problem (PDF)</caption>
      <link url="http://www.proproco.co.uk/million.pdf" lang="de-DE" />
      <caption lang="de-DE">Yaos Millionärsproblem (PDF, englisch)</caption>
    </linkReference>
  </references>

</documentation>