//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PKCS1.OnlineHelp.HelpFiles {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Help {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Help() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PKCS1.OnlineHelp.HelpFiles.Help", typeof(Help).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back ähnelt.
        /// </summary>
        public static string btnBack {
            get {
                return ResourceManager.GetString("btnBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Close ähnelt.
        /// </summary>
        public static string btnClose {
            get {
                return ResourceManager.GetString("btnClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forward ähnelt.
        /// </summary>
        public static string btnForward {
            get {
                return ResourceManager.GetString("btnForward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Bit position of the data block&lt;/h2&gt;
        ///
        ///In the &lt;a href=&quot;help://Gen_Bleichenb_Sig_Tab&quot;&gt;Bleichenbacher attack&lt;/a&gt; the &lt;a href=&quot;help://Gen_Datablock_Tab&quot;&gt;data block&lt;/a&gt; is being pushed to a certain position.
        ///Here you can choose the bit position to which the start of the data block is moved.
        /// ähnelt.
        /// </summary>
        public static string Gen_Bleichenb_BitPos {
            get {
                return ResourceManager.GetString("Gen_Bleichenb_BitPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Modify message with a character&lt;/h2&gt;
        ///
        ///During the &lt;a href=&quot;help://Gen_Bleichenb_Sig_Tab&quot;&gt;signature generation&lt;/a&gt; process the original message may have to be modified.
        ///In this implementation this is done by appending a single character.
        ///Here you can specify which character to append.
        /// ähnelt.
        /// </summary>
        public static string Gen_Bleichenb_ChangeSign {
            get {
                return ResourceManager.GetString("Gen_Bleichenb_ChangeSign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Generate Bleichenbacher signature&lt;/h2&gt;
        ///
        ///In this tab you can generate a faked signature. It is displayed in encrypted and in decrypted form.
        ///A signature that is accepted by faulty implementations has the following structure:
        ///&apos;00&apos; &apos;01&apos; PS &apos;00&apos; HI HD GG. &lt;/br&gt;
        ///
        ///In detail, this means:
        ///&lt;ul&gt;
        ///&lt;li&gt;
        ///&lt;strong&gt;&apos;00&apos;&lt;/strong&gt; 
        ///Leading zero block (8 bit). This guarantees that the numerical value of the signature is less than the
        ///&lt;a href=&quot;help://KeyGen_ModulusSize&quot;&gt;RSA modulus.&lt;/a&gt;
        ///&lt;/li&gt;
        ///&lt;li&gt;
        ///&lt;strong&gt;&apos;01&apos; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Gen_Bleichenb_Sig_Tab {
            get {
                return ResourceManager.GetString("Gen_Bleichenb_Sig_Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Generate data block&lt;/h2&gt;
        ///
        ///In this tab you can generate the data block of a signature. It consists of two parts: the hash function identifier and the hash digest.
        ///
        ///&lt;ul&gt;
        ///&lt;li&gt;
        ///&lt;strong&gt;Hash function identifier&lt;/strong&gt;&lt;br /&gt;
        ///The hash function identifier is an ASN.1 encoded data block.
        ///Amongst other informations it includes the name of the used hash function (algorithm identifier), the total length of the data block and the length of the hash value.&lt;/br&gt;
        ///The length and the value of the hash function [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Gen_Datablock_Tab {
            get {
                return ResourceManager.GetString("Gen_Datablock_Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Maximum number of iterations&lt;/h2&gt;
        ///
        ///In this field you can specify the maximum number of iterations for the algorithm before it is interrupted.
        ///If it finds a result the algorithm stops and the result is displayed.&lt;/br&gt;
        ///The algorithm should find a solution after 131.072 iterations on average (if SHA-1 is selected as hash algorithm).
        /// ähnelt.
        /// </summary>
        public static string Gen_Kuehn_Iterations {
            get {
                return ResourceManager.GetString("Gen_Kuehn_Iterations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Generate the Kuehn signature&lt;/h2&gt;
        ///
        ///In this tab you can generate a faked signature using the method described by Ulrich Kuehn.
        ///The structure of the signatures is similar to that of the &lt;a href=&quot;help://Gen_Bleichenb_Sig_Tab&quot;&gt;Bleichenbacher attack&lt;/a&gt;. 
        ///It is also applicable to signatures with a length of 1024 bits. The signatures have the following structure: &apos;00&apos; &apos;01&apos; PS &apos;00&apos; HI HD GG. &lt;/br&gt;
        ///
        ///The differences to the Bleichenbacher signatures are the following:
        ///&lt;ul&gt;
        ///  &lt;li&gt;
        ///  The padding string has [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Gen_Kuehn_Sig_Tab {
            get {
                return ResourceManager.GetString("Gen_Kuehn_Sig_Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Generate signature&lt;/h2&gt;
        ///
        ///In this tab the complete PKCS#1 signature is generated.&lt;/br&gt;
        ///It has the following structure: &apos;00&apos; &apos;01&apos; PS &apos;00&apos; HI HD.&lt;/br&gt;
        ///
        ///In detail, this means:
        ///&lt;ul&gt;
        ///&lt;li&gt;
        ///&lt;strong&gt;&apos;00&apos;&lt;/strong&gt; 
        ///Leading zero block (8 bit). This guarantees that the numerical value of the signature is less than the &lt;a href=&quot;help://KeyGen_ModulusSize&quot;&gt;RSA modulus.&lt;/a&gt;
        ///&lt;/li&gt;
        ///&lt;li&gt;
        ///&lt;strong&gt;&apos;01&apos;&lt;/strong&gt;
        ///This block indicates whether we have an operation with a public or a private key.
        ///As we use the priv [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Gen_PKCS1_Sig_Tab {
            get {
                return ResourceManager.GetString("Gen_PKCS1_Sig_Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;RSA key generation&lt;/h2&gt;
        ///
        ///An RSA key pair is required in order to generate a PKCS#1 signature. It consists of a private and a public key. The modulus is part of both the public and the private key.&lt;/br&gt;
        ///You can either &lt;a href=&quot;help://KeyGen_Tab&quot;&gt;generate&lt;/a&gt; or &lt;a href=&quot;help://KeyInput_Tab&quot;&gt;enter&lt;/a&gt; the RSA key.
        ///&lt;/br&gt;&lt;/br&gt;
        ///&lt;strong&gt;Please notice that you have to generate a key before you can generate the signatures!&lt;/strong&gt;
        /// ähnelt.
        /// </summary>
        public static string KeyGen {
            get {
                return ResourceManager.GetString("KeyGen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;RSA modulus&lt;/h2&gt;
        ///
        ///The modulus is part of the public and the private RSA keys.&lt;/br&gt;
        ///
        ///For the present attacks on the PKCS#1 signatures only the bit size of the modulus is required, not the value of the modulus itself. You can enter the bit size in this tab.
        ///The default bit size of the modulus for the Bleichenbacher attack is 3072 bits. For attacks that use shorter keys the key size can be adapted in this tab.
        /// ähnelt.
        /// </summary>
        public static string KeyGen_ModulusSize {
            get {
                return ResourceManager.GetString("KeyGen_ModulusSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Public RSA key&lt;/h2&gt;
        ///
        ///The public key of the RSA key pair is used to validate a signature that was generated with the private RSA key.
        ///
        ///The validation can be performed very efficiently if the Hamming weight of the public key is low. This is the case if the public key is for example 3, 17 or 65537.
        ///A prerequisite for the Bleichenbacher attack is that the public key equals 3.
        /// ähnelt.
        /// </summary>
        public static string KeyGen_PubExponent {
            get {
                return ResourceManager.GetString("KeyGen_PubExponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;RSA key generation&lt;/h2&gt;
        ///
        ///An RSA key pair is required in order to generate a PKCS#1 signature. It consists of a private and a public key. The modulus is part of both the public and the private key.&lt;/br&gt;
        ///For the presented attack on the PKCS#1 signatures the value of the public key and the bit size of the modulus are required. These parameters can be entered in this tab. The private key and the modulus are then generated from these parameters.
        ///&lt;/br&gt;&lt;/br&gt;
        ///&lt;strong&gt;Please notice that you have to generate [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string KeyGen_Tab {
            get {
                return ResourceManager.GetString("KeyGen_Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;RSA key input&lt;/h2&gt;
        ///
        ///An RSA key pair is required in order to generate a PKCS#1 signature. It consists of a private and a public key. The modulus is part of both the public and the private key.&lt;/br&gt;
        ///You can enter these parameters in this tab.
        ///&lt;/br&gt;&lt;/br&gt;
        ///&lt;strong&gt;Please notice that you have to generate a key before you can generate the signatures!&lt;/strong&gt;
        /// ähnelt.
        /// </summary>
        public static string KeyInput_Tab {
            get {
                return ResourceManager.GetString("KeyInput_Tab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;PKCS#1 signature generation&lt;/h2&gt;
        ///
        ///PKCS#1 signatures are based on the asymmetric encryption algorithm RSA. Therefore we need to generate an RSA key.&lt;/br&gt;
        ///In order to generate a PKCS#1 signature we first create a &lt;a href=&quot;help://Gen_Datablock_Tab&quot;&gt;data block&lt;/a&gt; and a padding string, which helps to &lt;a href=&quot;help://Gen_PKCS1_Sig_Tab&quot;&gt;format&lt;/a&gt; the signature in a specific way. The resulting data block is then signed with the private RSA key.
        ///&lt;/br&gt;&lt;/br&gt;
        ///&lt;strong&gt;Please notice that you first have to gene [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string SigGen {
            get {
                return ResourceManager.GetString("SigGen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Bleichenbacher attack&lt;/h2&gt;
        ///
        ///To generate a faked signature we first create the &lt;a href=&quot;help://Gen_Datablock_Tab&quot;&gt;data block&lt;/a&gt; as we would for a regular PKCS#1 signature. The &lt;a href=&quot;help://Gen_Bleichenb_Sig_Tab&quot;&gt;structure&lt;/a&gt; of the faked signature differs from the regular signature in the following points:
        /// &lt;ul&gt;
        /// &lt;li&gt;The padding string is shortened. Thus the &lt;a href=&quot;help://Gen_Datablock_Tab&quot;&gt;data block&lt;/a&gt; is shifted further to the left in the signature. This is not recognized by faulty impleme [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string SigGenFakeBleichenbacher {
            get {
                return ResourceManager.GetString("SigGenFakeBleichenbacher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Attack with shorter keys (Kuehn)&lt;/h2&gt;
        ///
        ///To generate a faked signature with the Kuehn method we first create the &lt;a href=&quot;help://Gen_Datablock_Tab&quot;&gt;data block&lt;/a&gt; as we would for a regular PKCS#1 signature. The &lt;a href=&quot;help://Gen_Bleichenb_Sig_Tab&quot;&gt;structure&lt;/a&gt; of the faked signature differs from the regular signature in the following points:
        ///&lt;ul&gt;
        ///	 &lt;li&gt;The padding string is shortened. Thus the &lt;a href=&quot;help://Gen_Datablock_Tab&quot;&gt;data block&lt;/a&gt; is shifted further to the left in the signature. This is [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string SigGenFakeKuehn {
            get {
                return ResourceManager.GetString("SigGenFakeKuehn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;Signature validation&lt;/h2&gt;
        ///
        ///The validation of a PKCS#1 signature starts with the decryption of the signature with the public key. The resulting data should be structured as described &lt;a href=&quot;help://Gen_PKCS1_Sig_Tab&quot;&gt;here&lt;/a&gt;.
        ///In the next step the &lt;a href=&quot;help://Gen_Datablock_Tab&quot;&gt;data block&lt;/a&gt; is extracted.&lt;/br&gt;
        ///This can be done in a correct and in an incorrect way. Until the discovery of the possible attack (2006) the extraction was implemented in an incorrect way in many implementations of the  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string SigVal {
            get {
                return ResourceManager.GetString("SigVal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;
        ///&lt;html&gt;
        ///	&lt;head&gt;
        ///		&lt;title&gt;&lt;/title&gt;
        ///		&lt;style type=&quot;text/css&quot;&gt;
        ///		  body
        ///		  {
        ///		  	font-family:Arial,Verdana,Georgia;
        ///		  	font-size:smaller;
        ///		  }
        ///		&lt;/style&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///	&lt;h2&gt;Attacks on PKCS#1 signatures (Bleichenbacher and Kuehn)&lt;/h2&gt;
        ///	&lt;p align=&quot;justify&quot;&gt;
        ///	PKCS#1 signatures are based on the RSA encryption scheme.
        ///	The attack devised by Daniel Bleichenbacher does not attack the encryption scheme, but flawed implementations of t [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        public static string Start {
            get {
                return ResourceManager.GetString("Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &lt;h2&gt;PKCS#1 / Bleichenbacher attack - Help&lt;/h2&gt;
        ///
        ///Welcome to the online help of the Crypto Tutorial &quot;PKCS#1 / Bleichenbacher attack&quot;.&lt;/br&gt;
        ///Here you can find detailed informations about PKCS#1 signatures and the Bleichenbacher attack.&lt;/br&gt;&lt;/br&gt;
        ///You can reach the different pages of this Crypto Tutorial via the navigation tab on the left side.
        ///More information about a topic is provided when you click on the help icon that is located near the corresponding item.
        /// ähnelt.
        /// </summary>
        public static string StartControl {
            get {
                return ResourceManager.GetString("StartControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online Help Bleichenbacher attack ähnelt.
        /// </summary>
        public static string title {
            get {
                return ResourceManager.GetString("title", resourceCulture);
            }
        }
    }
}
