//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.LFSR.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.LFSR.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always create output.
        /// </summary>
        public static string AlwaysCreateOutputCaption {
            get {
                return ResourceManager.GetString("AlwaysCreateOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always generate output?.
        /// </summary>
        public static string AlwaysCreateOutputList1 {
            get {
                return ResourceManager.GetString("AlwaysCreateOutputList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this checkbox enabled, an output will be generated, even though the clock is set to false. The output bit will be the bit from the last clock cycle..
        /// </summary>
        public static string AlwaysCreateOutputTooltip {
            get {
                return ResourceManager.GetString("AlwaysCreateOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clock Properties.
        /// </summary>
        public static string ClockGroup {
            get {
                return ResourceManager.GetString("ClockGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional output bit #.
        /// </summary>
        public static string ClockingBitCaption {
            get {
                return ResourceManager.GetString("ClockingBitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Output Bit.
        /// </summary>
        public static string ClockingBitGroup {
            get {
                return ResourceManager.GetString("ClockingBitGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Which bit shall be generated as an additional output? For example as a clocking bit..
        /// </summary>
        public static string ClockingBitTooltip {
            get {
                return ResourceManager.GetString("ClockingBitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feedback polynomial.
        /// </summary>
        public static string Feedback_polynomial {
            get {
                return ResourceManager.GetString("Feedback_polynomial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw LFSR.
        /// </summary>
        public static string initLFSRCaption {
            get {
                return ResourceManager.GetString("initLFSRCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draws the presentation of the LFSR, if the polynomial fits to the seed..
        /// </summary>
        public static string initLFSRTooltip {
            get {
                return ResourceManager.GetString("initLFSRTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clock.
        /// </summary>
        public static string InputClockBoolCaption {
            get {
                return ResourceManager.GetString("InputClockBoolCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional external clock signal (through CLK plugin)..
        /// </summary>
        public static string InputClockBoolTooltip {
            get {
                return ResourceManager.GetString("InputClockBoolTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seed.
        /// </summary>
        public static string InputSeedCaption {
            get {
                return ResourceManager.GetString("InputSeedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The initial binary value of all states (E.g.: 1001)..
        /// </summary>
        public static string InputSeedTooltip {
            get {
                return ResourceManager.GetString("InputSeedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TapSequence.
        /// </summary>
        public static string InputTapSequenceCaption {
            get {
                return ResourceManager.GetString("InputTapSequenceCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A string containing the taps as a sequence of the c_i or as a polynomial (e.g.: 1011, which is equal to the string x^4 + x^2 + x + 1. Note, that the last 1, which is x^0, is implicitly set to 1 inside the plugin)..
        /// </summary>
        public static string InputTapSequenceTooltip {
            get {
                return ResourceManager.GetString("InputTapSequenceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max. intermediate results recorded.
        /// </summary>
        public static string MaxRecordedRoundsCaption {
            get {
                return ResourceManager.GetString("MaxRecordedRoundsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum number of intermediate states (shifts) to keep in memory.
        /// </summary>
        public static string MaxRecordedRoundsTooltip {
            get {
                return ResourceManager.GetString("MaxRecordedRoundsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No data to present right now..
        /// </summary>
        public static string No_Quickwatch_data_right_now_ {
            get {
                return ResourceManager.GetString("No_Quickwatch_data_right_now_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not display presentation.
        /// </summary>
        public static string NoQuickwatchCaption {
            get {
                return ResourceManager.GetString("NoQuickwatchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display presentation?.
        /// </summary>
        public static string NoQuickwatchList1 {
            get {
                return ResourceManager.GetString("NoQuickwatchList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this checkbox enabled, no presentation will be shown and performance will be better..
        /// </summary>
        public static string NoQuickwatchTooltip {
            get {
                return ResourceManager.GetString("NoQuickwatchTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boolean Array Output of Stages.
        /// </summary>
        public static string OutputBoolArrayCaption {
            get {
                return ResourceManager.GetString("OutputBoolArrayCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outputs all stages of the LFSR..
        /// </summary>
        public static string OutputBoolArrayTooltip {
            get {
                return ResourceManager.GetString("OutputBoolArrayTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boolean Output.
        /// </summary>
        public static string OutputBoolCaption {
            get {
                return ResourceManager.GetString("OutputBoolCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contains the current output bit as a boolean value..
        /// </summary>
        public static string OutputBoolTooltip {
            get {
                return ResourceManager.GetString("OutputBoolTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional Output Bit.
        /// </summary>
        public static string OutputClockingBitCaption {
            get {
                return ResourceManager.GetString("OutputClockingBitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Outputs a specific stage of the LFSR as a boolean value..
        /// </summary>
        public static string OutputClockingBitTooltip {
            get {
                return ResourceManager.GetString("OutputClockingBitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output stages.
        /// </summary>
        public static string OutputStagesCaption {
            get {
                return ResourceManager.GetString("OutputStagesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this checkbox enabled, the current state will be output..
        /// </summary>
        public static string OutputStagesTooltip {
            get {
                return ResourceManager.GetString("OutputStagesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String Output.
        /// </summary>
        public static string OutputStringCaption {
            get {
                return ResourceManager.GetString("OutputStringCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string containing the output stream with a length of the rounds (e.g.: 1001001, assuming that seven rounds have been performed)..
        /// </summary>
        public static string OutputStringTooltip {
            get {
                return ResourceManager.GetString("OutputStringTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Period of LFSR.
        /// </summary>
        public static string Period_of_LFSR {
            get {
                return ResourceManager.GetString("Period_of_LFSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Period of LFSR: .
        /// </summary>
        public static string PeriodCaption {
            get {
                return ResourceManager.GetString("PeriodCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the period depending on feedback polynomial and seed..
        /// </summary>
        public static string PeriodTooltip {
            get {
                return ResourceManager.GetString("PeriodTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LFSR.
        /// </summary>
        public static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Linear Feedback Shift Register.
        /// </summary>
        public static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feedback polynomial.
        /// </summary>
        public static string PolynomialCaption {
            get {
                return ResourceManager.GetString("PolynomialCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define the feedback polynomial either in a textual or a numeric way. For example x^5 + x^2 + 1 which is equal to 10010..
        /// </summary>
        public static string PolynomialTooltip {
            get {
                return ResourceManager.GetString("PolynomialTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rewind count of rounds in presentation.
        /// </summary>
        public static string PresentationShiftCaption {
            get {
                return ResourceManager.GetString("PresentationShiftCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The presentation shows the round that is this many rounds behind the current one.
        /// </summary>
        public static string PresentationShiftTooltip {
            get {
                return ResourceManager.GetString("PresentationShiftTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Round:.
        /// </summary>
        public static string RoundNumber {
            get {
                return ResourceManager.GetString("RoundNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rounds.
        /// </summary>
        public static string RoundsCaption {
            get {
                return ResourceManager.GetString("RoundsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many bits shall be generated? Note: This only applies if no external clock is used..
        /// </summary>
        public static string RoundsTooltip {
            get {
                return ResourceManager.GetString("RoundsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the state of the LFSR.
        /// </summary>
        public static string SaveCurrentStateCaption {
            get {
                return ResourceManager.GetString("SaveCurrentStateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save current state?.
        /// </summary>
        public static string SaveCurrentStateList1 {
            get {
                return ResourceManager.GetString("SaveCurrentStateList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saves the current state when stopping and restarting the plugin or saving the workspace..
        /// </summary>
        public static string SaveCurrentStateTooltip {
            get {
                return ResourceManager.GetString("SaveCurrentStateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seed.
        /// </summary>
        public static string SeedCaption {
            get {
                return ResourceManager.GetString("SeedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seed: left bit first in.
        /// </summary>
        public static string SeedFlippedCaption {
            get {
                return ResourceManager.GetString("SeedFlippedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The seed is initially shifted into the register with the leftmost bit first (so that it appears in the register in flipped order compared to the input).
        /// </summary>
        public static string SeedFlippedTooltip {
            get {
                return ResourceManager.GetString("SeedFlippedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Define the seed (initial state) of the LFSR. For example 11100..
        /// </summary>
        public static string SeedTooltip {
            get {
                return ResourceManager.GetString("SeedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate add. output bit.
        /// </summary>
        public static string UseAdditionalOutputBitCaption {
            get {
                return ResourceManager.GetString("UseAdditionalOutputBitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate additional output bit?.
        /// </summary>
        public static string UseAdditionalOutputBitList1 {
            get {
                return ResourceManager.GetString("UseAdditionalOutputBitList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this checkbox enabled, the additional output bit will be generated..
        /// </summary>
        public static string UseAdditionalOutputBitTooltip {
            get {
                return ResourceManager.GetString("UseAdditionalOutputBitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use external clock.
        /// </summary>
        public static string UseBoolClockCaption {
            get {
                return ResourceManager.GetString("UseBoolClockCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use external clock?.
        /// </summary>
        public static string UseBoolClockList1 {
            get {
                return ResourceManager.GetString("UseBoolClockList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this checkbox enabled, an external clock will be used..
        /// </summary>
        public static string UseBoolClockTooltip {
            get {
                return ResourceManager.GetString("UseBoolClockTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use external clock.
        /// </summary>
        public static string UseBoolClockTPCaption {
            get {
                return ResourceManager.GetString("UseBoolClockTPCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to With this checkbox enabled, an external clock will be used (e.g. the CLK component)..
        /// </summary>
        public static string UseBoolClockTPTooltip {
            get {
                return ResourceManager.GetString("UseBoolClockTPTooltip", resourceCulture);
            }
        }
    }
}
