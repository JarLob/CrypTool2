//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LFSR.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LFSR.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always create output ähnelt.
        /// </summary>
        internal static string AlwaysCreateOutputCaption {
            get {
                return ResourceManager.GetString("AlwaysCreateOutputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always generate output? ähnelt.
        /// </summary>
        internal static string AlwaysCreateOutputList1 {
            get {
                return ResourceManager.GetString("AlwaysCreateOutputList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, an output will be generated, even though the clock is set to false. The output bit will be the bit from the last clock cycle. ähnelt.
        /// </summary>
        internal static string AlwaysCreateOutputTooltip {
            get {
                return ResourceManager.GetString("AlwaysCreateOutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clock Properties ähnelt.
        /// </summary>
        internal static string ClockGroup {
            get {
                return ResourceManager.GetString("ClockGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional output bit # ähnelt.
        /// </summary>
        internal static string ClockingBitCaption {
            get {
                return ResourceManager.GetString("ClockingBitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Output Bit ähnelt.
        /// </summary>
        internal static string ClockingBitGroup {
            get {
                return ResourceManager.GetString("ClockingBitGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Which bit shall be generated as an additional output? For example as a clocking bit. ähnelt.
        /// </summary>
        internal static string ClockingBitTooltip {
            get {
                return ResourceManager.GetString("ClockingBitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Feedback polynomial ähnelt.
        /// </summary>
        internal static string Feedback_polynomial {
            get {
                return ResourceManager.GetString("Feedback_polynomial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Draw LFSR ähnelt.
        /// </summary>
        internal static string initLFSRCaption {
            get {
                return ResourceManager.GetString("initLFSRCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Draws the presentation of the LFSR, if the polynomial fits to the seed. ähnelt.
        /// </summary>
        internal static string initLFSRTooltip {
            get {
                return ResourceManager.GetString("initLFSRTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clock ähnelt.
        /// </summary>
        internal static string InputClockBoolCaption {
            get {
                return ResourceManager.GetString("InputClockBoolCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optional external clock signal (through CLK plugin). ähnelt.
        /// </summary>
        internal static string InputClockBoolTooltip {
            get {
                return ResourceManager.GetString("InputClockBoolTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seed ähnelt.
        /// </summary>
        internal static string InputSeedCaption {
            get {
                return ResourceManager.GetString("InputSeedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The initial binary value of all states (E.g.: 1001). ähnelt.
        /// </summary>
        internal static string InputSeedTooltip {
            get {
                return ResourceManager.GetString("InputSeedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TapSequence ähnelt.
        /// </summary>
        internal static string InputTapSequenceCaption {
            get {
                return ResourceManager.GetString("InputTapSequenceCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A string containing the taps as a sequence of the c_i or as a polynomial (e.g.: 1011, which is equal to the string x^4 + x^2 + x + 1. Note, that the last 1, which is x^0, is implicitly set to 1 inside the plugin). ähnelt.
        /// </summary>
        internal static string InputTapSequenceTooltip {
            get {
                return ResourceManager.GetString("InputTapSequenceTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No data to present right now. ähnelt.
        /// </summary>
        internal static string No_Quickwatch_data_right_now_ {
            get {
                return ResourceManager.GetString("No_Quickwatch_data_right_now_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do not display presentation ähnelt.
        /// </summary>
        internal static string NoQuickwatchCaption {
            get {
                return ResourceManager.GetString("NoQuickwatchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display presentation? ähnelt.
        /// </summary>
        internal static string NoQuickwatchList1 {
            get {
                return ResourceManager.GetString("NoQuickwatchList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, no presentation will be shown and performance will be better. ähnelt.
        /// </summary>
        internal static string NoQuickwatchTooltip {
            get {
                return ResourceManager.GetString("NoQuickwatchTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boolean Array Output of Stages ähnelt.
        /// </summary>
        internal static string OutputBoolArrayCaption {
            get {
                return ResourceManager.GetString("OutputBoolArrayCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outputs all stages of the LFSR. ähnelt.
        /// </summary>
        internal static string OutputBoolArrayTooltip {
            get {
                return ResourceManager.GetString("OutputBoolArrayTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boolean Output ähnelt.
        /// </summary>
        internal static string OutputBoolCaption {
            get {
                return ResourceManager.GetString("OutputBoolCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contains the current output bit as a boolean value. ähnelt.
        /// </summary>
        internal static string OutputBoolTooltip {
            get {
                return ResourceManager.GetString("OutputBoolTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Additional Output Bit ähnelt.
        /// </summary>
        internal static string OutputClockingBitCaption {
            get {
                return ResourceManager.GetString("OutputClockingBitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outputs a specific stage of the LFSR as a boolean value. ähnelt.
        /// </summary>
        internal static string OutputClockingBitTooltip {
            get {
                return ResourceManager.GetString("OutputClockingBitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output stages ähnelt.
        /// </summary>
        internal static string OutputStagesCaption {
            get {
                return ResourceManager.GetString("OutputStagesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, the current state will be output. ähnelt.
        /// </summary>
        internal static string OutputStagesTooltip {
            get {
                return ResourceManager.GetString("OutputStagesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die String Output ähnelt.
        /// </summary>
        internal static string OutputStringCaption {
            get {
                return ResourceManager.GetString("OutputStringCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The string containing the output stream with a length of the rounds (e.g.: 1001001, assuming that seven rounds have been performed). ähnelt.
        /// </summary>
        internal static string OutputStringTooltip {
            get {
                return ResourceManager.GetString("OutputStringTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Period of LFSR ähnelt.
        /// </summary>
        internal static string Period_of_LFSR {
            get {
                return ResourceManager.GetString("Period_of_LFSR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Period ähnelt.
        /// </summary>
        internal static string PeriodCaption {
            get {
                return ResourceManager.GetString("PeriodCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates the period depending on feedback polynomial and seed. ähnelt.
        /// </summary>
        internal static string PeriodTooltip {
            get {
                return ResourceManager.GetString("PeriodTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die LFSR ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Linear Feedback Shift Register ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Feedback polynomial ähnelt.
        /// </summary>
        internal static string PolynomialCaption {
            get {
                return ResourceManager.GetString("PolynomialCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Define the feedback polynomial either in a textual or a numeric way. For example x^5 + x^2 + 1 which is equal to 10010. ähnelt.
        /// </summary>
        internal static string PolynomialTooltip {
            get {
                return ResourceManager.GetString("PolynomialTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rounds ähnelt.
        /// </summary>
        internal static string RoundsCaption {
            get {
                return ResourceManager.GetString("RoundsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die How many bits shall be generated? Note: This only applies if no external clock is used. ähnelt.
        /// </summary>
        internal static string RoundsTooltip {
            get {
                return ResourceManager.GetString("RoundsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save the state of the LFSR ähnelt.
        /// </summary>
        internal static string SaveCurrentStateCaption {
            get {
                return ResourceManager.GetString("SaveCurrentStateCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save current state? ähnelt.
        /// </summary>
        internal static string SaveCurrentStateList1 {
            get {
                return ResourceManager.GetString("SaveCurrentStateList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saves the current state when stopping and restarting the plugin or saving the workspace. ähnelt.
        /// </summary>
        internal static string SaveCurrentStateTooltip {
            get {
                return ResourceManager.GetString("SaveCurrentStateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Seed ähnelt.
        /// </summary>
        internal static string SeedCaption {
            get {
                return ResourceManager.GetString("SeedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Define the seed (initial state) of the LFSR. For example 11100. ähnelt.
        /// </summary>
        internal static string SeedTooltip {
            get {
                return ResourceManager.GetString("SeedTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate add. output bit ähnelt.
        /// </summary>
        internal static string UseAdditionalOutputBitCaption {
            get {
                return ResourceManager.GetString("UseAdditionalOutputBitCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate additional output bit? ähnelt.
        /// </summary>
        internal static string UseAdditionalOutputBitList1 {
            get {
                return ResourceManager.GetString("UseAdditionalOutputBitList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, the additional output bit will be generated. ähnelt.
        /// </summary>
        internal static string UseAdditionalOutputBitTooltip {
            get {
                return ResourceManager.GetString("UseAdditionalOutputBitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use external clock ähnelt.
        /// </summary>
        internal static string UseBoolClockCaption {
            get {
                return ResourceManager.GetString("UseBoolClockCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use external clock? ähnelt.
        /// </summary>
        internal static string UseBoolClockList1 {
            get {
                return ResourceManager.GetString("UseBoolClockList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, an external clock will be used. ähnelt.
        /// </summary>
        internal static string UseBoolClockTooltip {
            get {
                return ResourceManager.GetString("UseBoolClockTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use external clock ähnelt.
        /// </summary>
        internal static string UseBoolClockTPCaption {
            get {
                return ResourceManager.GetString("UseBoolClockTPCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, an external clock will be used (e.g. the CLK-Plugin). ähnelt.
        /// </summary>
        internal static string UseBoolClockTPTooltip {
            get {
                return ResourceManager.GetString("UseBoolClockTPTooltip", resourceCulture);
            }
        }
    }
}
