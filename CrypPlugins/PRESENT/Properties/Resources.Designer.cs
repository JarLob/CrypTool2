//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.235
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.PRESENT.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.PRESENT.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A top-level algorithmic description of PRESENT: ähnelt.
        /// </summary>
        internal static string A_top_level_algorithmic_description_of_PRESENT {
            get {
                return ResourceManager.GetString("A_top_level_algorithmic_description_of_PRESENT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About ähnelt.
        /// </summary>
        internal static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action ähnelt.
        /// </summary>
        internal static string ActionCaption {
            get {
                return ResourceManager.GetString("ActionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt ähnelt.
        /// </summary>
        internal static string ActionList1 {
            get {
                return ResourceManager.GetString("ActionList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt ähnelt.
        /// </summary>
        internal static string ActionList2 {
            get {
                return ResourceManager.GetString("ActionList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want the input data to be encrypted or decrypted? ähnelt.
        /// </summary>
        internal static string ActionTooltip {
            get {
                return ResourceManager.GetString("ActionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add Roundkey ähnelt.
        /// </summary>
        internal static string Add_Roundkey {
            get {
                return ResourceManager.GetString("Add_Roundkey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die animation speed ähnelt.
        /// </summary>
        internal static string animation_speed {
            get {
                return ResourceManager.GetString("animation_speed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign ähnelt.
        /// </summary>
        internal static string Assign {
            get {
                return ResourceManager.GetString("Assign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die bit group {0} (bits {1:d2},{2:d2},{3:d2},{4:d2}) sbox : {5} -&gt; {6} ähnelt.
        /// </summary>
        internal static string bit_group_sbox {
            get {
                return ResourceManager.GetString("bit_group_sbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die bit group {0} (bits {1:d2},{2:d2},{3:d2},{4:d2}) key xor : {5} XOR {6} = {7} ähnelt.
        /// </summary>
        internal static string bit_group_xor {
            get {
                return ResourceManager.GetString("bit_group_xor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data: ähnelt.
        /// </summary>
        internal static string Data_ {
            get {
                return ResourceManager.GetString("Data_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Done ähnelt.
        /// </summary>
        internal static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypted 0x{0:x16} to 0x{1:x16} ähnelt.
        /// </summary>
        internal static string Encrypted_to {
            get {
                return ResourceManager.GetString("Encrypted_to", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption ähnelt.
        /// </summary>
        internal static string Encryption {
            get {
                return ResourceManager.GetString("Encryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption: Data = 0x{0:x16} ähnelt.
        /// </summary>
        internal static string Encryption_Data {
            get {
                return ResourceManager.GetString("Encryption_Data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finished ähnelt.
        /// </summary>
        internal static string Finished {
            get {
                return ResourceManager.GetString("Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Finished generating 32 roundkeys ähnelt.
        /// </summary>
        internal static string Finished_generating_32_roundkeys {
            get {
                return ResourceManager.GetString("Finished_generating_32_roundkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IV ähnelt.
        /// </summary>
        internal static string InputIVCaption {
            get {
                return ResourceManager.GetString("InputIVCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IV to be used in chaining modes (CBC,CFB,OFB). It must be the same size as the block length (8 bytes). ähnelt.
        /// </summary>
        internal static string InputIVTooltip {
            get {
                return ResourceManager.GetString("InputIVTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string InputKeyCaption {
            get {
                return ResourceManager.GetString("InputKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Must be 10 or 16 bytes. ähnelt.
        /// </summary>
        internal static string InputKeyTooltip {
            get {
                return ResourceManager.GetString("InputKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input ähnelt.
        /// </summary>
        internal static string InputStreamCaption {
            get {
                return ResourceManager.GetString("InputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data to be encrypted or decrypted. ähnelt.
        /// </summary>
        internal static string InputStreamTooltip {
            get {
                return ResourceManager.GetString("InputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key: ähnelt.
        /// </summary>
        internal static string Key_ {
            get {
                return ResourceManager.GetString("Key_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key Extraction ähnelt.
        /// </summary>
        internal static string Key_Extraction {
            get {
                return ResourceManager.GetString("Key_Extraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key Schedule ähnelt.
        /// </summary>
        internal static string Key_Schedule {
            get {
                return ResourceManager.GetString("Key_Schedule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key Schedule : Key = 0x{0:x16}{1:x4} ähnelt.
        /// </summary>
        internal static string Key_Schedule_ {
            get {
                return ResourceManager.GetString("Key_Schedule_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key_Shift ähnelt.
        /// </summary>
        internal static string Key_Shift {
            get {
                return ResourceManager.GetString("Key_Shift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key_XOR ähnelt.
        /// </summary>
        internal static string Key_XOR {
            get {
                return ResourceManager.GetString("Key_XOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key XOR (0x{1:x16} -&gt; 0x{2:x16}) ähnelt.
        /// </summary>
        internal static string Key_XOR_ {
            get {
                return ResourceManager.GetString("Key_XOR_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Chaining Mode ähnelt.
        /// </summary>
        internal static string ModeCaption {
            get {
                return ResourceManager.GetString("ModeCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Electronic Code Book (ECB) ähnelt.
        /// </summary>
        internal static string ModeList1 {
            get {
                return ResourceManager.GetString("ModeList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Block Chaining (CBC) ähnelt.
        /// </summary>
        internal static string ModeList2 {
            get {
                return ResourceManager.GetString("ModeList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Feedback (CFB) ähnelt.
        /// </summary>
        internal static string ModeList3 {
            get {
                return ResourceManager.GetString("ModeList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output feedback (OFB) ähnelt.
        /// </summary>
        internal static string ModeList4 {
            get {
                return ResourceManager.GetString("ModeList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the block cipher mode of operation. ähnelt.
        /// </summary>
        internal static string ModeTooltip {
            get {
                return ResourceManager.GetString("ModeTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die next round ähnelt.
        /// </summary>
        internal static string next_round {
            get {
                return ResourceManager.GetString("next_round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die next step ähnelt.
        /// </summary>
        internal static string next_step {
            get {
                return ResourceManager.GetString("next_step", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output stream ähnelt.
        /// </summary>
        internal static string OutputStreamCaption {
            get {
                return ResourceManager.GetString("OutputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypted or decrypted output data ähnelt.
        /// </summary>
        internal static string OutputStreamTooltip {
            get {
                return ResourceManager.GetString("OutputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Overview ähnelt.
        /// </summary>
        internal static string Overview {
            get {
                return ResourceManager.GetString("Overview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Padding Mode ähnelt.
        /// </summary>
        internal static string PaddingCaption {
            get {
                return ResourceManager.GetString("PaddingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zeros ähnelt.
        /// </summary>
        internal static string PaddingList1 {
            get {
                return ResourceManager.GetString("PaddingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string PaddingList2 {
            get {
                return ResourceManager.GetString("PaddingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PKCS7 ähnelt.
        /// </summary>
        internal static string PaddingList3 {
            get {
                return ResourceManager.GetString("PaddingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a mode to fill partial data blocks. ähnelt.
        /// </summary>
        internal static string PaddingTooltip {
            get {
                return ResourceManager.GetString("PaddingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die passing leftmost 4 bits through S-box ({0} -&gt; {1}) ähnelt.
        /// </summary>
        internal static string passing_leftmost_4_bits {
            get {
                return ResourceManager.GetString("passing_leftmost_4_bits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die pause/resume animation ähnelt.
        /// </summary>
        internal static string pause_resume {
            get {
                return ResourceManager.GetString("pause_resume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Permutation ähnelt.
        /// </summary>
        internal static string Permutation {
            get {
                return ResourceManager.GetString("Permutation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die picking the 64 leftmost bits as roundkey {0} (0x{1:x16}) ähnelt.
        /// </summary>
        internal static string picking_the_64_left_most_bits {
            get {
                return ResourceManager.GetString("picking_the_64_left_most_bits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PRESENT ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PRESENT/DetailedDescription/Description.xaml ähnelt.
        /// </summary>
        internal static string PluginDescriptionURL {
            get {
                return ResourceManager.GetString("PluginDescriptionURL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PRESENT is an ultra-lightweight block cipher ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die previous round ähnelt.
        /// </summary>
        internal static string previous_round {
            get {
                return ResourceManager.GetString("previous_round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die previous step ähnelt.
        /// </summary>
        internal static string previous_step {
            get {
                return ResourceManager.GetString("previous_step", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die rotate key register 61 positions to the left (0x{0:x16} {1:x4} -&gt; 0x{2:x16} {3:x4}) ähnelt.
        /// </summary>
        internal static string rotate_key_register_61 {
            get {
                return ResourceManager.GetString("rotate_key_register_61", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round: ähnelt.
        /// </summary>
        internal static string Round_ {
            get {
                return ResourceManager.GetString("Round_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Roundcounter XOR ähnelt.
        /// </summary>
        internal static string Roundcounter_XOR {
            get {
                return ResourceManager.GetString("Roundcounter_XOR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S-Box ähnelt.
        /// </summary>
        internal static string S_Box {
            get {
                return ResourceManager.GetString("S_Box", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step: ähnelt.
        /// </summary>
        internal static string Step_ {
            get {
                return ResourceManager.GetString("Step_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The PRESENT cipher is an example of an SP-network and consists of 31 rounds. The block length is 64 bits and two key lengths of 80 and 128 bits are supported - but only the recommended 80-bit key version is implemented here. ähnelt.
        /// </summary>
        internal static string The_PRESENT_cipher_is_an_example {
            get {
                return ResourceManager.GetString("The_PRESENT_cipher_is_an_example", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Trace ähnelt.
        /// </summary>
        internal static string Trace {
            get {
                return ResourceManager.GetString("Trace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die xor round counter with key register : {0} XOR {1} = {2} ähnelt.
        /// </summary>
        internal static string xor_round_counter {
            get {
                return ResourceManager.GetString("xor_round_counter", resourceCulture);
            }
        }
    }
}
