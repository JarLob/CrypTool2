//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlindSignatureGenerator.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BlindSignatureGenerator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind signature S ähnelt.
        /// </summary>
        internal static string BlindSignature {
            get {
                return ResourceManager.GetString("BlindSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind signature S as a number ähnelt.
        /// </summary>
        internal static string BlindSignatureAsNumber {
            get {
                return ResourceManager.GetString("BlindSignatureAsNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind signature S as a number ähnelt.
        /// </summary>
        internal static string BlindSignatureAsNumberIn {
            get {
                return ResourceManager.GetString("BlindSignatureAsNumberIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the blind signature as a number. ähnelt.
        /// </summary>
        internal static string BlindSignatureAsNumberInTooltip {
            get {
                return ResourceManager.GetString("BlindSignatureAsNumberInTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the blind signature as a number. ähnelt.
        /// </summary>
        internal static string BlindSignatureAsNumberTooltip {
            get {
                return ResourceManager.GetString("BlindSignatureAsNumberTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind Signature Generator ähnelt.
        /// </summary>
        internal static string BlindSignatureGeneratorCaption {
            get {
                return ResourceManager.GetString("BlindSignatureGeneratorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generates a blind signature for a message. ähnelt.
        /// </summary>
        internal static string BlindSignatureGeneratorTooltip {
            get {
                return ResourceManager.GetString("BlindSignatureGeneratorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind signature S ähnelt.
        /// </summary>
        internal static string BlindSignatureIn {
            get {
                return ResourceManager.GetString("BlindSignatureIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the blind signature. ähnelt.
        /// </summary>
        internal static string BlindSignatureInTooltip {
            get {
                return ResourceManager.GetString("BlindSignatureInTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind signature S for Paillier ähnelt.
        /// </summary>
        internal static string BlindSignaturePaillier {
            get {
                return ResourceManager.GetString("BlindSignaturePaillier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind signature S for Paillier ähnelt.
        /// </summary>
        internal static string BlindSignaturePaillierIn {
            get {
                return ResourceManager.GetString("BlindSignaturePaillierIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the blind signature for Paillier. ähnelt.
        /// </summary>
        internal static string BlindSignaturePaillierInTooltip {
            get {
                return ResourceManager.GetString("BlindSignaturePaillierInTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the blind signature for Paillier. ähnelt.
        /// </summary>
        internal static string BlindSignaturePaillierTooltip {
            get {
                return ResourceManager.GetString("BlindSignaturePaillierTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the blind signature. ähnelt.
        /// </summary>
        internal static string BlindSignatureTooltip {
            get {
                return ResourceManager.GetString("BlindSignatureTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind Signature Verifier ähnelt.
        /// </summary>
        internal static string BlindSignatureVerifierCaption {
            get {
                return ResourceManager.GetString("BlindSignatureVerifierCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Verifies a blind signature ähnelt.
        /// </summary>
        internal static string BlindSignatureVerifierTooltip {
            get {
                return ResourceManager.GetString("BlindSignatureVerifierTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind Signing Security Level ähnelt.
        /// </summary>
        internal static string BlindSigningSecurity {
            get {
                return ResourceManager.GetString("BlindSigningSecurity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the security level against blind signing attacks. ähnelt.
        /// </summary>
        internal static string BlindSigningSecurityTooltip {
            get {
                return ResourceManager.GetString("BlindSigningSecurityTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug ähnelt.
        /// </summary>
        internal static string Debug {
            get {
                return ResourceManager.GetString("Debug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of all results for debugging. ähnelt.
        /// </summary>
        internal static string DebugTooltip {
            get {
                return ResourceManager.GetString("DebugTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypted blind signature S ähnelt.
        /// </summary>
        internal static string DecryptedBlindSignature {
            get {
                return ResourceManager.GetString("DecryptedBlindSignature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypted blind signature S as a number ähnelt.
        /// </summary>
        internal static string DecryptedBlindSignatureAsNumber {
            get {
                return ResourceManager.GetString("DecryptedBlindSignatureAsNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the decrypted blind signature as a number ähnelt.
        /// </summary>
        internal static string DecryptedBlindSignatureAsNumberTooltip {
            get {
                return ResourceManager.GetString("DecryptedBlindSignatureAsNumberTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output of the decrypted blind signature ähnelt.
        /// </summary>
        internal static string DecryptedBlindSignatureTooltip {
            get {
                return ResourceManager.GetString("DecryptedBlindSignatureTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hash h(M) is:  ähnelt.
        /// </summary>
        internal static string Hash_h_M__is__ {
            get {
                return ResourceManager.GetString("Hash_h_M__is__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hash algorithm ähnelt.
        /// </summary>
        internal static string HashAlgorithm {
            get {
                return ResourceManager.GetString("HashAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the hash algorithm to be used. ähnelt.
        /// </summary>
        internal static string HashAlgorithmTooltip {
            get {
                return ResourceManager.GetString("HashAlgorithmTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message M is:  ähnelt.
        /// </summary>
        internal static string Message_M_is_ {
            get {
                return ResourceManager.GetString("Message_M_is_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message M ähnelt.
        /// </summary>
        internal static string MessageM {
            get {
                return ResourceManager.GetString("MessageM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the message to be signed. ähnelt.
        /// </summary>
        internal static string MessageMTooltip {
            get {
                return ResourceManager.GetString("MessageMTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modulus N ähnelt.
        /// </summary>
        internal static string ModuloN {
            get {
                return ResourceManager.GetString("ModuloN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the modulus. ähnelt.
        /// </summary>
        internal static string ModuloNTooltip {
            get {
                return ResourceManager.GetString("ModuloNTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Private key D/Lambda ähnelt.
        /// </summary>
        internal static string PrivateKey {
            get {
                return ResourceManager.GetString("PrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the private key D/Lambda. ähnelt.
        /// </summary>
        internal static string PrivateKeyTooltip {
            get {
                return ResourceManager.GetString("PrivateKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public key E/G ähnelt.
        /// </summary>
        internal static string PublicKey {
            get {
                return ResourceManager.GetString("PublicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the public key E/G. ähnelt.
        /// </summary>
        internal static string PublicKeyTooltip {
            get {
                return ResourceManager.GetString("PublicKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message M publicly visible ähnelt.
        /// </summary>
        internal static string PublicMessage {
            get {
                return ResourceManager.GetString("PublicMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of your Message to be publicly announced ähnelt.
        /// </summary>
        internal static string PublicMessageTooltip {
            get {
                return ResourceManager.GetString("PublicMessageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Random number k is:  ähnelt.
        /// </summary>
        internal static string Random_Number_k_is__ {
            get {
                return ResourceManager.GetString("Random_Number_k_is__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Signature S is:  ähnelt.
        /// </summary>
        internal static string Signature_s_is__ {
            get {
                return ResourceManager.GetString("Signature_s_is__", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Signing algorithm ähnelt.
        /// </summary>
        internal static string SigningAlgorithm {
            get {
                return ResourceManager.GetString("SigningAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose the signing algorithm to be used. ähnelt.
        /// </summary>
        internal static string SigningAlgorithmTooltip {
            get {
                return ResourceManager.GetString("SigningAlgorithmTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This is the presentation of the Blind Signature Generator. Blind signatures are a special type of digital signatures which allow a high degree of anonymity and yet can be used for verification of messages. ähnelt.
        /// </summary>
        internal static string Slide0Description {
            get {
                return ResourceManager.GetString("Slide0Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please run the generator and then click through the steps to be shown the internal calculations of the component. ähnelt.
        /// </summary>
        internal static string Slide0Values {
            get {
                return ResourceManager.GetString("Slide0Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In the first step the component reads your input and registers it. ähnelt.
        /// </summary>
        internal static string Slide1Description {
            get {
                return ResourceManager.GetString("Slide1Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values: ähnelt.
        /// </summary>
        internal static string Slide1Values0 {
            get {
                return ResourceManager.GetString("Slide1Values0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input of your message (M) is:  ähnelt.
        /// </summary>
        internal static string Slide1Values1 {
            get {
                return ResourceManager.GetString("Slide1Values1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input of your modulo (N) is:  ähnelt.
        /// </summary>
        internal static string Slide1Values2 {
            get {
                return ResourceManager.GetString("Slide1Values2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input of your public key (E/G)is:  ähnelt.
        /// </summary>
        internal static string Slide1Values3 {
            get {
                return ResourceManager.GetString("Slide1Values3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input of your private key (D/Lambda) is:  ähnelt.
        /// </summary>
        internal static string Slide1Values4 {
            get {
                return ResourceManager.GetString("Slide1Values4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In the second step the component the component converts your message to a byte[] and uses the hash algorithm you have chosen in the settings. ähnelt.
        /// </summary>
        internal static string Slide2Description {
            get {
                return ResourceManager.GetString("Slide2Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your message has now become:  ähnelt.
        /// </summary>
        internal static string Slide2Values {
            get {
                return ResourceManager.GetString("Slide2Values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In the third step the component blinds the message for the paillier signing algorithm. ähnelt.
        /// </summary>
        internal static string Slide3DescriptionPaillier1 {
            get {
                return ResourceManager.GetString("Slide3DescriptionPaillier1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For this a blindingfactor k is randomly generated and used to blind the message with M* = M * k^N ähnelt.
        /// </summary>
        internal static string Slide3DescriptionPaillier2 {
            get {
                return ResourceManager.GetString("Slide3DescriptionPaillier2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In the third step the component blinds the message for the RSA signing algorithm. ähnelt.
        /// </summary>
        internal static string Slide3DescriptionRSA1 {
            get {
                return ResourceManager.GetString("Slide3DescriptionRSA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For this a blindingfactor k is randomly generated and used to blind the message with M* = M * k^E mod N ähnelt.
        /// </summary>
        internal static string Slide3DescriptionRSA2 {
            get {
                return ResourceManager.GetString("Slide3DescriptionRSA2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die k:  ähnelt.
        /// </summary>
        internal static string Slide3ValuesPaillier1 {
            get {
                return ResourceManager.GetString("Slide3ValuesPaillier1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die k:  ähnelt.
        /// </summary>
        internal static string Slide3ValuesRSA1 {
            get {
                return ResourceManager.GetString("Slide3ValuesRSA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blinded message M*:  ähnelt.
        /// </summary>
        internal static string Slide3ValuesRSA2 {
            get {
                return ResourceManager.GetString("Slide3ValuesRSA2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In the fourth step the component starts the pallier signing algorithm. ähnelt.
        /// </summary>
        internal static string Slide4DescriptionPaillier1 {
            get {
                return ResourceManager.GetString("Slide4DescriptionPaillier1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For that the two signature values s1 and s2 for the paillier algorithm are calculated with ähnelt.
        /// </summary>
        internal static string Slide4DescriptionPaillier2 {
            get {
                return ResourceManager.GetString("Slide4DescriptionPaillier2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die s1 = (L(M^Lambda mod N^2) / L(G^Lambda mod N^2)) mod N ähnelt.
        /// </summary>
        internal static string Slide4DescriptionPaillier3 {
            get {
                return ResourceManager.GetString("Slide4DescriptionPaillier3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die s2 = (M * G^-s1)^(1/N mod lambda) mod N ähnelt.
        /// </summary>
        internal static string Slide4DescriptionPaillier4 {
            get {
                return ResourceManager.GetString("Slide4DescriptionPaillier4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At last the signature is un-blinded by multiplying s2 with k^-1 mod N ähnelt.
        /// </summary>
        internal static string Slide4DescriptionPaillier5 {
            get {
                return ResourceManager.GetString("Slide4DescriptionPaillier5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In the fourth step the component starts the RSA signing algorithm. ähnelt.
        /// </summary>
        internal static string Slide4DescriptionRSA1 {
            get {
                return ResourceManager.GetString("Slide4DescriptionRSA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For this the signature s is calculated with s = M^D mod N ähnelt.
        /// </summary>
        internal static string Slide4DescriptionRSA2 {
            get {
                return ResourceManager.GetString("Slide4DescriptionRSA2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At last the signature is un-blinded by dividing s by k ähnelt.
        /// </summary>
        internal static string Slide4DescriptionRSA3 {
            get {
                return ResourceManager.GetString("Slide4DescriptionRSA3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die s1: ähnelt.
        /// </summary>
        internal static string Slide4ValuesPaillier1 {
            get {
                return ResourceManager.GetString("Slide4ValuesPaillier1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die s2: ähnelt.
        /// </summary>
        internal static string Slide4ValuesPaillier2 {
            get {
                return ResourceManager.GetString("Slide4ValuesPaillier2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die k:  ähnelt.
        /// </summary>
        internal static string Slide4ValuesRSA1 {
            get {
                return ResourceManager.GetString("Slide4ValuesRSA1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die s:  ähnelt.
        /// </summary>
        internal static string Slide4ValuesRSA2 {
            get {
                return ResourceManager.GetString("Slide4ValuesRSA2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description:  ähnelt.
        /// </summary>
        internal static string SlideDescription {
            get {
                return ResourceManager.GetString("SlideDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Step:  ähnelt.
        /// </summary>
        internal static string SlideStep {
            get {
                return ResourceManager.GetString("SlideStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blind Signature Generator ähnelt.
        /// </summary>
        internal static string SlideTitle {
            get {
                return ResourceManager.GetString("SlideTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Values:  ähnelt.
        /// </summary>
        internal static string SlideValues {
            get {
                return ResourceManager.GetString("SlideValues", resourceCulture);
            }
        }
    }
}
