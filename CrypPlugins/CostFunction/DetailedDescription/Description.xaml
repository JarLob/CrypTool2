<FlowDocument
   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:misc="clr-namespace:Cryptool.PluginBase.Miscellaneous;assembly=CrypPluginBase"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
   AllowDrop="True"
   Background="White"
   NumberSubstitution.CultureSource="User"
   PagePadding="5,0,5,0"
   ScrollViewer.HorizontalScrollBarVisibility="Auto"
   ScrollViewer.VerticalScrollBarVisibility="Auto">
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="18.666"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            Costfunction

        </Span>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            Introduction

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run FontSize="16" xml:lang="en-us">
            This plugin provides costfunction functionality which can be used by different Analyser Plugins (For example: Keysearcher, Transposition Analyser)

        </Run>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            The plugin accepts a text as input (which can also be data, e.g. bytes) and its output is a numerical score (double).

        </Run>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            Several costfunctions are available:

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="18.666"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            1. Index of Coincidence

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            The plugin calculates the Index of Coincidence of a given text.

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            2. Entropy

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            Select &quot;Entropy&quot; in the Settings-Panel to let the plugin calculate the Entropy of a text.

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            3. Bigrams: log 2

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            The Plugin first generates a reference statistic using the selected language corpus (German or English). A custom language corpus for further fine tuning or language support (Spanish, Dutch, etc) can be used, too.
           For each new input of the plugin this reference statistic will be compared with the bigrams of the input. This is done summing up the reference scores for given bigrams (e.g. initial value is 0, for each occurence of a Bigram the reference score is added).
           The log 2 setting is used as follows: The plugin calculates the base 2 logarithm of the score (sum of all occurences of a bigram).

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            4. Bigrams: Sinkov

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            The Sinkov setting does the following: The base e logarithm of the percentaged score will be calculated. For percentaged score see next section.

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            5. Bigrams: Percentaged

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            This setting is the number of occurences of a bigram divided by the sum of all number of occurences of a bigram.

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            6. Regular Expression

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            Select &quot;Regular Expression&quot; if you want to evaluate whether an input text matches a chosen Regular Expression. The plugin's output is 1.0 for a match and -1.0 if the input does not match the regular expression.

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            7. Weighted Bigrams/Trigrams

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            This setting is similar to the bigram settings as it combines bigram/trigram scores and weighs these scores using a fitness weight table.
           A fitness weight table's entry might look like this:
           
           &quot;YYY;-5.0&quot;
           
           This means a sequence of &quot;YYY&quot; is unlikely to occur in a plaintext, so a negative weight is assigned to this Trigram (-5.0 here).
           Two tables are available, but it is also possible to use a custom table in *.csv format. Custom tables need to be formatted as follows:
           The Bigram or Trigram followed by a &quot;;&quot;, followed the weight as a (signed, if negative) double. Each Bigram/Trigram which shall be weighted, needs its on line.
           For further reference on the format see: Tables in Data Directory.

        </Run>
    </Paragraph>
    <Paragraph
      Margin="0,0,0,0"
      FontFamily="Times New Roman"
      FontSize="16"
      TextAlignment="Left">
        <Span
         FontFamily="Georgia"
         FontSize="17"
         FontWeight="Bold"
         Foreground="#FF15428B"
         xml:lang="en-us">
            <Span.TextDecorations>
                <TextDecoration Location="Underline"/>
            </Span.TextDecorations>
            Usage with Transposition Analyser

        </Span>
    </Paragraph>
    <Paragraph TextAlignment="Justify">
        <Run>
            For Analysis of a transposition ciphertext the &quot;Bigrams: Sinkov&quot; seemed to produce the best results. The weighted bigrams/trigrams produces better results, but has the handicap of being slower (It needs two runs for an input).

        </Run>
    </Paragraph>
</FlowDocument>