<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppendStr" xml:space="preserve">
    <value>присоединять</value>
  </data>
  <data name="BasicStr" xml:space="preserve">
    <value>основной</value>
  </data>
  <data name="CCMinCaption" xml:space="preserve">
    <value>Свернуть эту таблицу</value>
  </data>
  <data name="CCMinTooltip" xml:space="preserve">
    <value>Уменьшает размер объявленного положения о конфликте</value>
  </data>
  <data name="ClauseDecayCaption" xml:space="preserve">
    <value>Коэффициент распада активности</value>
  </data>
  <data name="ClauseDecayTooltip" xml:space="preserve">
    <value>Задайте коэффициент затухания для активности предложения (должно быть между 0.0 и 1.0, по умолчанию = 0.999)</value>
  </data>
  <data name="ClearOutputCaption" xml:space="preserve">
    <value>Очистить выход</value>
  </data>
  <data name="ClearOutputTooltip" xml:space="preserve">
    <value>Установите, если вывод консоли должен быть очищен после каждого выполнения</value>
  </data>
  <data name="CoreOptionsGroup" xml:space="preserve">
    <value>Параметры Solver</value>
  </data>
  <data name="DeepStr" xml:space="preserve">
    <value>глубоко</value>
  </data>
  <data name="DimacsCaption" xml:space="preserve">
    <value>Dimacs</value>
  </data>
  <data name="DimacsTooltip" xml:space="preserve">
    <value>Не решайте, просто упростите CNF</value>
  </data>
  <data name="ElimCaption" xml:space="preserve">
    <value>Устранить переменные</value>
  </data>
  <data name="ElimTooltip" xml:space="preserve">
    <value>Выполнение исключения переменных</value>
  </data>
  <data name="FullStr" xml:space="preserve">
    <value>Полный</value>
  </data>
  <data name="InputCaption" xml:space="preserve">
    <value>вход</value>
  </data>
  <data name="InputTooltip" xml:space="preserve">
    <value>Введите CNF как текст</value>
  </data>
  <data name="LimitedStr" xml:space="preserve">
    <value>Ограниченное</value>
  </data>
  <data name="LubyCaption" xml:space="preserve">
    <value>Последовательность Luby</value>
  </data>
  <data name="LubyTooltip" xml:space="preserve">
    <value>Использовать последовательность перезапуска luby</value>
  </data>
  <data name="MoreStr" xml:space="preserve">
    <value>детализированный</value>
  </data>
  <data name="NoneStr" xml:space="preserve">
    <value>Никто</value>
  </data>
  <data name="OffStr" xml:space="preserve">
    <value>от</value>
  </data>
  <data name="OnStr" xml:space="preserve">
    <value>На</value>
  </data>
  <data name="OutputatResultTooltip" xml:space="preserve">
    <value>Результат результата решателя</value>
  </data>
  <data name="OutputConsoleCaption" xml:space="preserve">
    <value>Консольный поток вывода</value>
  </data>
  <data name="OutputConsoleTooltip" xml:space="preserve">
    <value>Консольный выход решателя</value>
  </data>
  <data name="OutputOptionsGroup" xml:space="preserve">
    <value>Параметры вывода</value>
  </data>
  <data name="OutputResultCaption" xml:space="preserve">
    <value>Выходной поток результата</value>
  </data>
  <data name="PhaseSavingCaption" xml:space="preserve">
    <value>Уровень сохранения фазы</value>
  </data>
  <data name="PhaseSavingTooltip" xml:space="preserve">
    <value>Присваивает каждой переменной решения значение, последнему принудительно используемое при булевом распространении ограничений</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>SAT Solver</value>
  </data>
  <data name="PluginDescription" xml:space="preserve">
    <value>Проверьте выполнимость булевой формулы</value>
  </data>
  <data name="PreprocessCaption" xml:space="preserve">
    <value>препроцессор</value>
  </data>
  <data name="PreprocessorOptionsGroup" xml:space="preserve">
    <value>Параметры препроцессора</value>
  </data>
  <data name="PreprocessTooltip" xml:space="preserve">
    <value>Включить / выключить предварительную обработку (упрощение CNF)</value>
  </data>
  <data name="RandomFreqCaption" xml:space="preserve">
    <value>Случайная частота</value>
  </data>
  <data name="RandomFreqTooltip" xml:space="preserve">
    <value>Частота, с которой эвристика с переменным решением пытается выбрать случайную переменную (должна быть между 0.0 и 1.0, по умолчанию = 0)</value>
  </data>
  <data name="RandomInitCaption" xml:space="preserve">
    <value>Рандомизировать начальную активность</value>
  </data>
  <data name="RandomInitTooltip" xml:space="preserve">
    <value>Инициализировать все переменные до случайных значений</value>
  </data>
  <data name="RCheckCaption" xml:space="preserve">
    <value>Проверка условий</value>
  </data>
  <data name="RCheckTooltip" xml:space="preserve">
    <value>Проверьте, не указано ли предложение</value>
  </data>
  <data name="RFirstCaption" xml:space="preserve">
    <value>Базовый интервал перезапуска</value>
  </data>
  <data name="RFirstTooltip" xml:space="preserve">
    <value>Базовый интервал после того, сколько конфликтов решатель выполняет свой первый перезапуск (0 - maxint, default = 100)</value>
  </data>
  <data name="RIncCaption" xml:space="preserve">
    <value>Фактор увеличения интервала перезапуска</value>
  </data>
  <data name="RIncTooltip" xml:space="preserve">
    <value>Фактор, по которому интервал перезапуска умножается после перезапуска (должен быть больше 1,0, по умолчанию = 2)</value>
  </data>
  <data name="SilentStr" xml:space="preserve">
    <value>бесшумный</value>
  </data>
  <data name="SomeStr" xml:space="preserve">
    <value>Нормальный</value>
  </data>
  <data name="SubLimitCaption" xml:space="preserve">
    <value>Предел пресечения</value>
  </data>
  <data name="SubLimitTooltip" xml:space="preserve">
    <value>Не проверяйте, является ли надбавка к предложению больше этого (-1 - maxint, по умолчанию = 1000, -1 означает без ограничений)</value>
  </data>
  <data name="VarDecayCaption" xml:space="preserve">
    <value>Коэффициент затухания переменной активности</value>
  </data>
  <data name="VarDecayTooltip" xml:space="preserve">
    <value>Установите коэффициент затухания для переменной активности (должен быть между 0.0 и 1.0, по умолчанию = 0.95)</value>
  </data>
  <data name="VerbosityCaption" xml:space="preserve">
    <value>многословие</value>
  </data>
  <data name="VerbosityTooltip" xml:space="preserve">
    <value>Задайте уровень детализации</value>
  </data>
  <data name="NoStr" xml:space="preserve">
    <value>нет</value>
  </data>
  <data name="YesStr" xml:space="preserve">
    <value>да</value>
  </data>
</root>