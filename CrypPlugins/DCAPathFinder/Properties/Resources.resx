<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortingPolicy1" xml:space="preserve">
    <value>Global maximum</value>
  </data>
  <data name="AbortingPolicy2" xml:space="preserve">
    <value>Global threshold</value>
  </data>
  <data name="AbortingThresholdBestCharacteristicSearch" xml:space="preserve">
    <value>Threshold value for abort (best characteristic)</value>
  </data>
  <data name="AbortingThresholdBestCharacteristicSearchToolTip" xml:space="preserve">
    <value>Determines the probability at which the search for the best characteristic will be aborted.</value>
  </data>
  <data name="AbortingThresholdDifferentialSearch" xml:space="preserve">
    <value>Threshold value for abort (differential)</value>
  </data>
  <data name="AbortingThresholdDifferentialSearchToolTip" xml:space="preserve">
    <value>Determines the probability at which the search for characteristics for differential formation is aborted.</value>
  </data>
  <data name="AutomaticMode" xml:space="preserve">
    <value>Automatic mode</value>
  </data>
  <data name="AutomaticModeHeader" xml:space="preserve">
    <value>DCA PfadFinder works in automatic mode.</value>
  </data>
  <data name="AutomaticModeToolTip" xml:space="preserve">
    <value>No user input required in automatic mode</value>
  </data>
  <data name="BtnPrevChapter" xml:space="preserve">
    <value>Chapter back</value>
  </data>
  <data name="BtnSkipChapter" xml:space="preserve">
    <value>Skip chapter</value>
  </data>
  <data name="CharacteristicCount" xml:space="preserve">
    <value>#Characteristics: </value>
  </data>
  <data name="ChoiceAbortingPolicyPolicy" xml:space="preserve">
    <value>Aborting policy</value>
  </data>
  <data name="ChoiceOfAbortingPolicyGroup" xml:space="preserve">
    <value>search options</value>
  </data>
  <data name="ChoiceOfAbortingPolicyToolTop" xml:space="preserve">
    <value>By selecting the aborting policy, the behavior of the search for the best differential is controlled.</value>
  </data>
  <data name="ChoiceOfAlgorithm" xml:space="preserve">
    <value>Choice of the cipher</value>
  </data>
  <data name="ChoiceOfAlgorithmGroup" xml:space="preserve">
    <value>Tutorial options</value>
  </data>
  <data name="ChoiceOfAlgorithmToolTop" xml:space="preserve">
    <value>At this point, you can select one of the ciphers contained in the list. This can be examined by differential cryptanalysis.</value>
  </data>
  <data name="ChoiceOfSearchPolicy" xml:space="preserve">
    <value>Search policy</value>
  </data>
  <data name="ChoiceOfSearchPolicyGroup" xml:space="preserve">
    <value>Search options</value>
  </data>
  <data name="ChoiceOfSearchPolicyToolTop" xml:space="preserve">
    <value>By selecting a search policy, the behavior of the search for the best differential is controlled.</value>
  </data>
  <data name="ChosenMessagePairsCount" xml:space="preserve">
    <value>Number of message pairs</value>
  </data>
  <data name="ChosenMessagePairsCountToolTip" xml:space="preserve">
    <value>Determines the number of message pairs to be generated.</value>
  </data>
  <data name="Cipher1" xml:space="preserve">
    <value>Tutorial 1: Cipher 1 (16 bit block size, 2 round keys, 32 bit key length)</value>
  </data>
  <data name="Cipher2" xml:space="preserve">
    <value>Tutorial 2: Cipher 2 (16 bit block size, 4 round keys, 64 bit key length)</value>
  </data>
  <data name="Cipher3" xml:space="preserve">
    <value>Tutorial 3: Cipher 3 (16 bit block size, 6 round keys, 96 bit key length)</value>
  </data>
  <data name="Cipher4" xml:space="preserve">
    <value>Tutorial 4: Cipher 4 (4 bit block size , 4 round keys, 16 bit key length)</value>
  </data>
  <data name="DCAOptions" xml:space="preserve">
    <value>Differential cryptanalysis Options</value>
  </data>
  <data name="DescriptionContent2" xml:space="preserve">
    <value>Tutorial 1 uses cipher 1 of the DCA ToyCipher component. This cipher works on 16 bit blocks and uses two 16 bit round keys. One encryption round is executed. In this tutorial both unknown round keys are restored.</value>
  </data>
  <data name="DescriptionContent3" xml:space="preserve">
    <value>Tutorial 2 uses cipher 2 of the DCA ToyCipher component. This cipher works on 16 bit blocks and uses four 16 bit round keys. Three encryption rounds are executed. In this tutorial all unknown round keys are restored.</value>
  </data>
  <data name="DescriptionContent4" xml:space="preserve">
    <value>Tutorial 3 uses cipher 3 of the DKA ToyCipher component. This cipher works on 16 bit blocks and uses six 16 bit round keys. Five encryption rounds are executed. In this tutorial all unknown round keys are restored.</value>
  </data>
  <data name="DescriptionHeader" xml:space="preserve">
    <value>Description of the tutorials</value>
  </data>
  <data name="DescriptionSubHeader1" xml:space="preserve">
    <value>Tutorial 1</value>
  </data>
  <data name="DescriptionSubHeader2" xml:space="preserve">
    <value>Tutorial 2</value>
  </data>
  <data name="DescriptionSubHeader3" xml:space="preserve">
    <value>Tutorial 3</value>
  </data>
  <data name="DisplayOptions" xml:space="preserve">
    <value>display options</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>End:</value>
  </data>
  <data name="ExpectedDifferential" xml:space="preserve">
    <value>Expected difference</value>
  </data>
  <data name="ExpectedDifferentialToolTip" xml:space="preserve">
    <value>Output for the expected difference</value>
  </data>
  <data name="InputDiffHeader1" xml:space="preserve">
    <value>Input difference</value>
  </data>
  <data name="InputDiffR1Header1Run1" xml:space="preserve">
    <value>u</value>
  </data>
  <data name="InputDiffR1Header1Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="InputDiffR2Header1Run1" xml:space="preserve">
    <value>u</value>
  </data>
  <data name="InputDiffR2Header1Run2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="InputDiffR3Header1Run1" xml:space="preserve">
    <value>u</value>
  </data>
  <data name="InputDiffR3Header1Run2" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="InputDiffR4Header1Run1" xml:space="preserve">
    <value>u</value>
  </data>
  <data name="InputDiffR4Header1Run2" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="InputDiffR5Header1Run1" xml:space="preserve">
    <value>u</value>
  </data>
  <data name="InputDiffR5Header1Run2" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="MessageCount" xml:space="preserve">
    <value>message pair count</value>
  </data>
  <data name="MessageCountToolTip" xml:space="preserve">
    <value>Output for the message pair count</value>
  </data>
  <data name="NoCharacteristicFoundError" xml:space="preserve">
    <value>No characteristics found. Please check the settings for the search and abort policy</value>
  </data>
  <data name="OutputDiffR1Header1Run1" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="OutputDiffR1Header1Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="OutputDiffR2Header1Run1" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="OutputDiffR2Header1Run2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="OutputDiffR3Header1Run1" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="OutputDiffR3Header1Run2" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="OutputDiffR4Header1Run1" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="OutputDiffR4Header1Run2" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="OverviewContent1" xml:space="preserve">
    <value>Welcome to the differential cryptanalysis (dca) tutorial. This method for the analysis of turn-based symmetric block ciphers aims at recovering single bits up to complete round keys. This procedure was published in 1991 by the two Israeli researchers Eli Biham and Adi Shamir.</value>
  </data>
  <data name="OverviewContent2" xml:space="preserve">
    <value>This tutorial covers the dca in three parts. Part 1 conveys the basic idea of the dca by means of a cipher with an encryption round. Part 2 deepens this idea using a cipher with three encryption rounds. Part 3 deepens the knowledge by increasing the complexity of the cipher to five encryption rounds.</value>
  </data>
  <data name="OverviewContent3" xml:space="preserve">
    <value>In the configuration of this component the number of the tutorial and the tutorial mode can be selected.</value>
  </data>
  <data name="OverviewContent4" xml:space="preserve">
    <value>Have fun trying out and breaking the ciphers!</value>
  </data>
  <data name="OverviewContent5" xml:space="preserve">
    <value>(This introduction can be skipped by starting the workspace)</value>
  </data>
  <data name="OverviewHeader" xml:space="preserve">
    <value>Differential Cryptanalysis Tutorial</value>
  </data>
  <data name="OverviewPreambleHeader" xml:space="preserve">
    <value>Preamble</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>Differential</value>
  </data>
  <data name="PathToolTip" xml:space="preserve">
    <value>Describes the flow of differences through a cipher</value>
  </data>
  <data name="PerformanceSettingsGroup" xml:space="preserve">
    <value>Speed options</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>DCA PathFinder</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>This component searches for differentials in a symmetric block cipher depending on parameters specified by the user.</value>
  </data>
  <data name="PresentationMode" xml:space="preserve">
    <value>Tutorial mode</value>
  </data>
  <data name="PresentationModeToolTip" xml:space="preserve">
    <value>If tutorial mode is activated, a presentation with information on differential cryptanalysis is displayed for each tutorial.</value>
  </data>
  <data name="ProbabilityHeader" xml:space="preserve">
    <value>Probability</value>
  </data>
  <data name="R1" xml:space="preserve">
    <value>Round 1</value>
  </data>
  <data name="R2" xml:space="preserve">
    <value>Round 2</value>
  </data>
  <data name="R3" xml:space="preserve">
    <value>Round 3</value>
  </data>
  <data name="R4" xml:space="preserve">
    <value>Round 4</value>
  </data>
  <data name="R5" xml:space="preserve">
    <value>Round 5</value>
  </data>
  <data name="ReadyInput" xml:space="preserve">
    <value>Trigger</value>
  </data>
  <data name="ReadyInputToolTip" xml:space="preserve">
    <value>The trigger input signals to the DCA PathFinder component that the DCA KeyRecovery component has completed its calculation.</value>
  </data>
  <data name="Round" xml:space="preserve">
    <value>Attacked encryption round:</value>
  </data>
  <data name="SBoxes" xml:space="preserve">
    <value>Attacked S boxes:</value>
  </data>
  <data name="SBoxWarning" xml:space="preserve">
    <value>At least one S box must be marked to continue the attack.</value>
  </data>
  <data name="SearchConfiguration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="SearchPolicy" xml:space="preserve">
    <value>Search policy:</value>
  </data>
  <data name="SearchPolicy1" xml:space="preserve">
    <value>Best characteristic (heuristic), then differential search</value>
  </data>
  <data name="SearchPolicy2" xml:space="preserve">
    <value>Best characteristic (depth search), then differential search</value>
  </data>
  <data name="SearchPolicy3" xml:space="preserve">
    <value>All characteristics by depth search</value>
  </data>
  <data name="SearchResults" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="StartMaskContent1" xml:space="preserve">
    <value>The tutorial beginns when you start the workspace.</value>
  </data>
  <data name="StartMaskContent2Run1" xml:space="preserve">
    <value>In this template, the </value>
  </data>
  <data name="StartMaskContent2Run2" xml:space="preserve">
    <value>tutorial {0}</value>
  </data>
  <data name="StartMaskContent2Run3" xml:space="preserve">
    <value> is selected.</value>
  </data>
  <data name="StartMaskHeader" xml:space="preserve">
    <value>Ready for execution</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="ThreadCount" xml:space="preserve">
    <value>Threads to be used</value>
  </data>
  <data name="ThreadCountToolTip" xml:space="preserve">
    <value>Specifies the number of threads to use for the calculation.</value>
  </data>
  <data name="ThreadSettingError" xml:space="preserve">
    <value>The maximum number of threads for your system is {0} threads. This number is limited by your processor.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisHeader" xml:space="preserve">
    <value>2. Differential cryptanalysis of cipher 1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content1" xml:space="preserve">
    <value>The value of</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content2Run1" xml:space="preserve">
    <value>is already known. As indicated on the previous page, the values of k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content2Run3" xml:space="preserve">
    <value> guessed. Here is explained how to limit the set of possible correct values: The cryptanalyst tries all values t of k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content2Run4" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content2Run5" xml:space="preserve">
    <value> through and if</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content3Run1" xml:space="preserve">
    <value>holds true, t is considered a candidate for k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content3Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content3Run3" xml:space="preserve">
    <value>. If more than one candidate remains at the end, the attack is repeated with new pairs of plaintext and ciphertext.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content4" xml:space="preserve">
    <value>By clicking the "Next" button again, differential cryptanalysis can be performed on cipher 1 in the "DCA KeyRecovery" component.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content4Run1" xml:space="preserve">
    <value>After successful recovery of k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content4Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content4Run3" xml:space="preserve">
    <value> can k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content4Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content4Run5" xml:space="preserve">
    <value> be calculated immediately. This can be done by calculating the equation</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Content5Run1" xml:space="preserve">
    <value>be determined.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide10Header" xml:space="preserve">
    <value>Differential cryptanalysis of cipher 1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content1" xml:space="preserve">
    <value>Here we apply the idea of the dca to Chiffre 1. The structure of a cipher is usually public, so that all components and their functionality are known. The security of a cipher should never be based on the secrecy of the construction, but on the secrecy of the key. This requirement is also called Kerckhoff's principle.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run1" xml:space="preserve">
    <value>Cipher 1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run2" xml:space="preserve">
    <value> consists of key addition and substitution. The structure can be viewed in the DCA ToyCipher component. We now try to find the two unknown round keys k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run3" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run4" xml:space="preserve">
    <value>and k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run5" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run6" xml:space="preserve">
    <value> to recover. To do this, we look at the individual steps of encryption. First the key k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run7" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content2Run8" xml:space="preserve">
    <value> is added to the input block m:</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Content3" xml:space="preserve">
    <value>The intermediate result u is then substituted by the S boxes:</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide1Header" xml:space="preserve">
    <value>Differential cryptanalysis of cipher 1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content1Run1" xml:space="preserve">
    <value>Finally, a key addition takes place again (intermediate result v is indicated with k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content1Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content1Run3" xml:space="preserve">
    <value> added):</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content2Run1" xml:space="preserve">
    <value>The internal variables u and v of the cipher are of great importance in the following, because we use these intermediate results to recover the unknown keys k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content2Run3" xml:space="preserve">
    <value> and k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content2Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Content2Run5" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide2Header" xml:space="preserve">
    <value>Differential cryptanalysis of cipher 1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide3Content1" xml:space="preserve">
    <value>The following figure summarizes the encryption process outlined above on slides 11 to 16.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide3Header" xml:space="preserve">
    <value>Differential cryptanalysis of cipher 1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide4Content1" xml:space="preserve">
    <value>The following figure summarizes the encryption process outlined above on slides 11 to 16.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide4Header" xml:space="preserve">
    <value>Differential cryptanalysis of cipher 1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent6Run1" xml:space="preserve">
    <value>However, these values cannot be directly compared with the internal values u</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent6Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent6Run3" xml:space="preserve">
    <value> and u</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent6Run4" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent6Run5" xml:space="preserve">
    <value> as these are unknown.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent7Run1" xml:space="preserve">
    <value>From equation (1) it follows that if the round key is correctly guessed k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent7Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9bContent7Run3" xml:space="preserve">
    <value> the following applies:</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run1" xml:space="preserve">
    <value>The cryptanalyst knows the parameters m and c, but not the internal intermediate values u and v, since k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run2" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run3" xml:space="preserve">
    <value> and k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run4" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run5" xml:space="preserve">
    <value> are unknown. However, the cryptanalyst can calculate the difference between the two internal u intermediate values from the difference between the two plaintexts. In the following we consider two messages m</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run6" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run7" xml:space="preserve">
    <value> and m</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run8" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content1Run9" xml:space="preserve">
    <value> and build their difference:</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run1" xml:space="preserve">
    <value>This knowledge can be used to calculate k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run10" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run11" xml:space="preserve">
    <value>). According to equation (1), the difference of the u-values is equal to the difference of m</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run12" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run13" xml:space="preserve">
    <value> and m</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run14" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run15" xml:space="preserve">
    <value>. Next, k</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run16" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run17" xml:space="preserve">
    <value> is "advised" so that from</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run3" xml:space="preserve">
    <value>. For this we will consider two pairs of plaintext and ciphertext (m</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run4" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run5" xml:space="preserve">
    <value>, c</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run6" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run7" xml:space="preserve">
    <value>) and (m</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run8" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content2Run9" xml:space="preserve">
    <value>, c</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content3Run1" xml:space="preserve">
    <value>the values of v</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content3Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content3Run3" xml:space="preserve">
    <value> and v</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content3Run4" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content3Run5" xml:space="preserve">
    <value> can be calculated.</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content4Run1" xml:space="preserve">
    <value>Because the functionality of the S-Box is public and therefore also invertible, the cryptoanalyst can calculate with</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content5Run1" xml:space="preserve">
    <value>the values of</value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Content6Run1" xml:space="preserve">
    <value> </value>
  </data>
  <data name="Tutorial1DifferentialCryptanalysisSlide9Header" xml:space="preserve">
    <value>Differential cryptanalysis of cipher 1</value>
  </data>
  <data name="Tutorial1IntroductionHeader" xml:space="preserve">
    <value>1. Introduction</value>
  </data>
  <data name="Tutorial1IntroductionSlide1Content1Run1" xml:space="preserve">
    <value>In this section we consider the basic idea of differential cryptanalysis.</value>
  </data>
  <data name="Tutorial1IntroductionSlide1Content1Run2" xml:space="preserve">
    <value>Most modern round-based block ciphers consist of three basic operations: key addition, substitution, and permutation. Cipher 1 consists of key addition and substitution. Ciphers 2 and 3 also contain a permutation.</value>
  </data>
  <data name="Tutorial1IntroductionSlide1Content2" xml:space="preserve">
    <value>The XOR operation (exclusive OR) is usually used for key addition. The XOR operation is a two-digit operator that can be described by the following value table:</value>
  </data>
  <data name="Tutorial1IntroductionSlide1DataColHeader1" xml:space="preserve">
    <value>Input bit A</value>
  </data>
  <data name="Tutorial1IntroductionSlide1DataColHeader2" xml:space="preserve">
    <value>Input bit B</value>
  </data>
  <data name="Tutorial1IntroductionSlide1DataColHeader3" xml:space="preserve">
    <value>result bit</value>
  </data>
  <data name="Tutorial1IntroductionSlide1Header" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="Tutorial1IntroductionSlide2Content1" xml:space="preserve">
    <value>If the XOR operation is used to encrypt a message m with key k, the ciphertext c is obtained as follows:</value>
  </data>
  <data name="Tutorial1IntroductionSlide2Content2" xml:space="preserve">
    <value>The basic idea of differential cryptanalysis is to use the effect of a property of the XOR operation by using the key k twice. If the key addition is performed twice, the following applies:</value>
  </data>
  <data name="Tutorial1IntroductionSlide2Content3Run1" xml:space="preserve">
    <value>We get back the original message m.</value>
  </data>
  <data name="Tutorial1IntroductionSlide2Content3Run2" xml:space="preserve">
    <value>The XOR operator is often referred to as the difference operator. This name is also used in this tutorial.</value>
  </data>
  <data name="Tutorial1IntroductionSlide2Content4" xml:space="preserve">
    <value>Differential cryptanalysis is a so-called "chosen plaintext attack", which means that the cryptanalyst can select plaintext messages and encrypt them to have matching plaintext/ciphertext pairs.</value>
  </data>
  <data name="Tutorial1IntroductionSlide2Header" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Content1Run1" xml:space="preserve">
    <value>We take advantage of the idea of using the key twice by using pairs of messages m</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Content1Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Content1Run3" xml:space="preserve">
    <value> and m</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Content1Run4" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Content1Run5" xml:space="preserve">
    <value>. If the difference between the ciphertexts is now formed, the following holds true:</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Content2" xml:space="preserve">
    <value>It follows:</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Content3" xml:space="preserve">
    <value>We obtain the difference of the plaintexts by calculating the difference of the ciphertexts. This can be used to obtain information about the round keys at dca.</value>
  </data>
  <data name="Tutorial1IntroductionSlide3Header" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="Tutorial1LastSlideContent1" xml:space="preserve">
    <value>The dca is now continued in the DCA KeyRecovery component.</value>
  </data>
  <data name="Tutorial1LastSlideContent2Run1" xml:space="preserve">
    <value>In the DCA KeyRecovery component, you can now recover the round keys k</value>
  </data>
  <data name="Tutorial1LastSlideContent2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1LastSlideContent2Run3" xml:space="preserve">
    <value> and k</value>
  </data>
  <data name="Tutorial1LastSlideContent2Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial1LastSlideContent2Run5" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="Tutorial1LastSlideContent3Run1" xml:space="preserve">
    <value>To do this, you must click on the</value>
  </data>
  <data name="Tutorial1LastSlideContent3Run2" xml:space="preserve">
    <value>Start-Button</value>
  </data>
  <data name="Tutorial1LastSlideContent3Run3" xml:space="preserve">
    <value>in the DCA KeyRecovery component.</value>
  </data>
  <data name="Tutorial1LastSlideHeader" xml:space="preserve">
    <value>Tutorial 1 finished</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisHeader" xml:space="preserve">
    <value>3. Performing differential cryptanalysis</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisSlide1Content1Run1" xml:space="preserve">
    <value>In the dca against cipher 1, the round keys k</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisSlide1Content1Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisSlide1Content1Run3" xml:space="preserve">
    <value> and k</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisSlide1Content1Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisSlide1Content1Run5" xml:space="preserve">
    <value> will be attacked. The attack proceeds as described in this tutorial.</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisSlide1Content2" xml:space="preserve">
    <value>Click on Next (right arrow below) to start the attack. The control is passed on to the DCA KeyRecovery component.</value>
  </data>
  <data name="Tutorial1PracticalDifferentialCryptanalysisSlide1Header" xml:space="preserve">
    <value>Performing differential cryptanalysis</value>
  </data>
  <data name="Tutorial1TitleHeaderRun1" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="Tutorial1TitleHeaderRun2" xml:space="preserve">
    <value>Differential cryptanalysis of symmetric block ciphers</value>
  </data>
  <data name="Tutorial2AnalysisHeader" xml:space="preserve">
    <value>2. Analyse von Chiffre 2</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxHeader" xml:space="preserve">
    <value>3. Analyse der SBoxen</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide1Content1" xml:space="preserve">
    <value>Aufgrund der Schlüsseladdition verhält sich die SBox nicht-linear. Ein Rateversuch für K3 kann nicht direkt überprüft werden.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide1Content2" xml:space="preserve">
    <value>Alle SBoxen von Chiffre 2 verhalten sind identisch. Aus diesem Grund ist es aussreichend, wenn die Funktionsweise einer einzelnen SBox analysiert wird. Grundsätzlich ist es möglich, 4 parallele SBoxen als eine große SBox zu betrachten, dies würde aber den Analyseaufwand erhöhen. Die SBox erhält als Eingabe 4 Bits und gibt auch 4 Bits als Ausgabe aus. Die 4 Eingabe-Bits werden durch 4 andere Ausgabe-Bits ersetzt.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide1Content3" xml:space="preserve">
    <value>Zur Erinnerung: Bei der differenziellen Kryptoanalyse wird mit Differenzen von Nachrichten gearbeitet. Um die SBox zu untersuchen, werden alle Kombinationen von Eingabe-Klartexten betrachtet und deren Differenz gebildet. Je Paar werden die Klartexte einzelnt in die SBox gegeben und anschließend die Differenz der substituierte Ausgaben berechnet. Dabei werden die Übergänge von Eingabe- zu Ausgabe-Differenz notiert.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide1Content4" xml:space="preserve">
    <value>Die Tabelle auf der nächsten Seite visualisiert dieses Vorgehen. Für jede mögliche Eingabe-Differenz existiert eine Zeile. Für jede mögliche Ausgabe-Differenz gibt es eine Spalte. Die Anzahl des Auftretens einer speziellen Differenz wird durch die Einträge der Tabelle beschrieben.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide1Content5" xml:space="preserve">
    <value>Um die Wahrscheinlichkeit des Auftretens einer Differenz zu Berechnen, muss die Anzahl durch 16 geteilt werden.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide1Header" xml:space="preserve">
    <value>Analyse der SBoxen</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide2Content1" xml:space="preserve">
    <value>Im Folgenden ist die Differenz-Verteilungstabelle zu sehen:</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide2Header" xml:space="preserve">
    <value>Analyse der SBoxen</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide2InputDifference" xml:space="preserve">
    <value>Eingabe-Differenz</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide2OutputDifference" xml:space="preserve">
    <value>Ausgabe-Differenz</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide3Content1" xml:space="preserve">
    <value>Die Ein- und Ausgabe-Differenzen sowie die Einträge der Differenzverteilungs-Tabelle sind hexadezimal.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide3Content2" xml:space="preserve">
    <value>Bei einer 4 Bit SBox gibt es je 16 verschiedene Eingaben und Ausgaben. Kombiniert man 2 Nachrichten zu einem Nachrichtenpaar mit je disjunkten Differenzen, können 256 verschiedene Übergänge von Differenzen beobachtet werden.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide3Content3" xml:space="preserve">
    <value>Eine wichtige Beobachtung ist, dass es Differenzen gibt, die häufiger vorkommen als andere. Es gibt auch Differenzen, die gar nicht auftreten. Zum Beispiel wird die Eingabe-Differenz 8 insgesamt 8 mal auf die Ausgabe-Differenz D abgebildet.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide3Content4" xml:space="preserve">
    <value>Die Verteilung der Differenzen ist offensichtlich nicht gleichverteilt. In der Praxis sind SBoxen nicht perfekt. Diesen Fakt macht sich der Kryptoanalyst zu nutze. Besonders hohe Wahrscheinlichkeiten helfen bei der differenziellen Kryptoanalyse.</value>
  </data>
  <data name="Tutorial2AnalysisOfSBoxSlide3Header" xml:space="preserve">
    <value>Analyse der SBoxen</value>
  </data>
  <data name="Tutorial2AnalysisSlide1Content1" xml:space="preserve">
    <value>Chiffre 2 besteht aus drei Verschlüsselungsrunden mit vier Rundenschlüsseln. Jede Runde besteht aus Schlüsseladdition, Substitution und einer Permutation. In der letzten Runde wird zusätzlich noch eine weitere Schlüsseladdition durchgeführt.</value>
  </data>
  <data name="Tutorial2AnalysisSlide1Content2" xml:space="preserve">
    <value>Im Folgenden wird die Verschlüsselung eines Klartextblocks schematisch dargestellt. Analog zu Tutorial 1 werden die internen Zustände während des Verschlüsselungsprozesses mit Variablen u und v bezeichnet.</value>
  </data>
  <data name="Tutorial2AnalysisSlide1Content3" xml:space="preserve">
    <value>In dieser Chiffre wird zusätzlich eine Permutation verwendet. Diese vertauscht die Bitpositionen eines Blocks. Im Schema wird die Permutation mit P() bezeichnet. Zusätzlich zu den internen Zuständen u und v wird w eingeführt. Dieser Zustand repräsentiert den Wert nach einer Permutation.</value>
  </data>
  <data name="Tutorial2AnalysisSlide1Header" xml:space="preserve">
    <value>Analyse von Chiffre 2</value>
  </data>
  <data name="Tutorial2AnalysisSlide2Header" xml:space="preserve">
    <value>Analyse von Chiffre 2</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run1" xml:space="preserve">
    <value>Man könnte nun versuchen, den Schlüssel k</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run10" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run11" xml:space="preserve">
    <value> berechnen. Mit den Klartexten ist man noch in der Lage, die Differenz der u</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run12" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run13" xml:space="preserve">
    <value> zu berechnen.</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run2" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run3" xml:space="preserve">
    <value> in ähnlicher Art und Weise wie bei Chiffre 1 anzugreifen. Dazu hätte man ein Paar von Klartexten und ihre entsprechenden Geheimtexte vorliegen. Dann würde man einen möglichen Rundenschlüssel t raten und die jeweiligen internen Variablen v</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run4" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run5" xml:space="preserve">
    <value> berechnen. Dadurch könnte man u</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run6" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run7" xml:space="preserve">
    <value> berechnen. Da der Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run8" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content1Run9" xml:space="preserve">
    <value> ebenfalls unbekannt ist, könnte man nun die Differenz der u</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content2Run1" xml:space="preserve">
    <value>Aufgrund des Exclusive-Oder verhält sich die SBox nicht-linear, sodass man die Differenz der v</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content2Run2" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content2Run3" xml:space="preserve">
    <value> nicht bestimmen kann. Daher ist es nicht möglich einen Rateversuch von k</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content2Run4" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content2Run5" xml:space="preserve">
    <value> durch Nutzung von Differenzen zu prüfen.</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Content3" xml:space="preserve">
    <value>Um dieses Problem zu lösen, betrachten wir die Funktionsweise der SBoxen genauer.</value>
  </data>
  <data name="Tutorial2AnalysisSlide3Header" xml:space="preserve">
    <value>Analyse von Chiffre 2</value>
  </data>
  <data name="Tutorial2AttackFinishedContent1" xml:space="preserve">
    <value>Tutorial 2 zur differenziellen Kryptoanalyse in der DKA-PfadFinder-Komponente ist beendet. </value>
  </data>
  <data name="Tutorial2AttackFinishedContent2Run1" xml:space="preserve">
    <value>Durch ein letztes Klicken auf "Start" in der DKA-KeyRecovery-Komponente werden die letzten zwei Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AttackFinishedContent2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial2AttackFinishedContent2Run3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial2AttackFinishedContent2Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial2AttackFinishedContent2Run5" xml:space="preserve">
    <value> versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial2AttackFinishedHeader" xml:space="preserve">
    <value>Tutorial 2 beendet</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent1Run1" xml:space="preserve">
    <value>Im letzten Schritt werden die letzten beiden Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent1Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent1Run3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent1Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent1Run5" xml:space="preserve">
    <value> angegriffen. Dieser Angriff läuft analog zu dem Verfahren ab, wie es in Tutorial 1 durchgeführt wurde.</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent2Run1" xml:space="preserve">
    <value>Durch einen Klick auf weiter werden die ersten beiden Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent2Run3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent2Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial2AttackFirstRoundContent2Run5" xml:space="preserve">
    <value> angegriffen.</value>
  </data>
  <data name="Tutorial2AttackFirstRoundHeaderRun1" xml:space="preserve">
    <value>Berechnung der Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AttackFirstRoundHeaderRun2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial2AttackFirstRoundHeaderRun3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial2AttackFirstRoundHeaderRun4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial2AttackHeader" xml:space="preserve">
    <value>7. Differenzielle Kryptoanalyse von Chiffre 2</value>
  </data>
  <data name="Tutorial2AttackKeyRound2Content1Run1" xml:space="preserve">
    <value>An dieser Stelle soll der zweite Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AttackKeyRound2Content1Run2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial2AttackKeyRound2Content1Run3" xml:space="preserve">
    <value> angegriffen werden. Dazu können in der zweiten Verschlüsselungsrunde SBoxen ausgewählt werden. Durch die Auswahl einer SBox werden die jeweiligen 4 Bits des Rundenschlüssels angegriffen und versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial2AttackKeyRound2Content1Run4" xml:space="preserve">
    <value>Der Angriff läuft nahezu analog zu dem auf den Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AttackKeyRound2Content1Run5" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AttackKeyRound2Content1Run6" xml:space="preserve">
    <value> ab. Allerdings muss bei der Suche nach Differenzialen die Chiffre nicht mehr so tief durchsucht werden, da bereits eine Verschlüsselungsrunde vollständig angegriffen wurde.</value>
  </data>
  <data name="Tutorial2AttackKeyRound3Content1Run1" xml:space="preserve">
    <value>An dieser Stelle soll der erste Rundenschlüssel k</value>
  </data>
  <data name="Tutorial2AttackKeyRound3Content1Run2" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AttackKeyRound3Content1Run3" xml:space="preserve">
    <value> der Chiffre angegriffen werden. Dazu können in der dritten Verschlüsselungsrunde SBoxen ausgewählt werden. Durch die Auswahl einer SBox werden die jeweiligen 4 Bits des Rundenschlüssels angegriffen und versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial2AttackKeyRound3Content1Run4" xml:space="preserve">
    <value>Bei der differenziellen Kryptoanalyse wird die Veränderung von Differenzen an den SBoxen betrachtet. Daher sind an dieser Stelle SBoxen auszuwählen.</value>
  </data>
  <data name="Tutorial2AttackKeyRound3Content1Run5" xml:space="preserve">
    <value>Je mehr Schlüsselbits ausgewählt werden, desto komplizierter ist die Suche nach einem Differenzial. Allerdings kann durchaus sinnvoll sein, mehrere SBoxen gleichzeitig anzugreifen. Je nach Beschaffenheit der Chiffre finden sich so bessere oder schlechtere Differenziale.</value>
  </data>
  <data name="Tutorial2AttackRound2HeaderRun1" xml:space="preserve">
    <value>SBoxen aus Runde 2 auswählen, um Schlüsselbits von k</value>
  </data>
  <data name="Tutorial2AttackRound2HeaderRun2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial2AttackRound2HeaderRun3" xml:space="preserve">
    <value> anzugreifen</value>
  </data>
  <data name="Tutorial2AttackRound3HeaderRun1" xml:space="preserve">
    <value>SBoxen aus Runde 3 auswählen, um Schlüsselbits von k</value>
  </data>
  <data name="Tutorial2AttackRound3HeaderRun2" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial2AttackRound3HeaderRun3" xml:space="preserve">
    <value> anzugreifen</value>
  </data>
  <data name="Tutorial2CharacteristicHeader" xml:space="preserve">
    <value>4. Charakteristiken</value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Content1Run1" xml:space="preserve">
    <value>Zwei Eingaben, die sich durch eine Differenz </value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Content1Run2" xml:space="preserve">
    <value> unterscheiden, werden unter Verwendung der SBox durch ein Paar von Ausgaben substitutiert, welche sich durch eine Differenz </value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Content1Run3" xml:space="preserve">
    <value> unterscheiden. Notiert wird dies durch </value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Content2" xml:space="preserve">
    <value>Charakteristiken können miteinander kombiniert und so über mehrere Runden verbunden werden. Vorraussetzung dafür ist, dass die Ausgangsdifferenz der vorgänger Charakteristik denselben Wert wie die Eingangsdifferenz der nachfolgenden Charakteristik aufweist. Unter der Annahme, dass Charakteristiken unabhängig voneinander sind, können die Wahrscheinlichkeiten multipliziert werden. Auf diese Weise kann ein Weg von Differenzen durch die Chiffre gesucht werden.</value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Content2Run1" xml:space="preserve">
    <value>Wir bezeichnen ein solches Paar </value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Content2Run2" xml:space="preserve">
    <value> als differenzielle charakteristik unter der Operation der SBox. Wie zuvor gesehen, hat eine differenzielle Charakteristik eine feste Wahrscheinlichkeit.</value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Content3" xml:space="preserve">
    <value>Ziel bei der Suche ist es einen Weg zu finden, der eine möglichst hohe Wahrscheinlichkeit aufweist. Diese Wege können in der DKA-PfadVisualisierer-Komponente graphisch dargestellt werden.</value>
  </data>
  <data name="Tutorial2CharacteristicSlide1Header" xml:space="preserve">
    <value>Charakteristiken</value>
  </data>
  <data name="Tutorial2CharacteristicSlide2Content1" xml:space="preserve">
    <value>Eine Verschlüsselungsrunde besteht bei Chiffre 2 aus Schlüsseladdition, Substitution und Permutation. Die Chiffre arbeitet auf 16 Bit Blöcken. Die vorige Notation wird wie folgt erweitert, um eine differenzielle Charakteristik einer SBox für 16 Bit Blöcke zu bezeichnen</value>
  </data>
  <data name="Tutorial2CharacteristicSlide2Content2" xml:space="preserve">
    <value>Nach der Substitution werden die Bits in Chiffre 2 permutiert. Die Permutation der Chiffre ist bekannt und daher kann die differenzielle Charakteristik der Permutation wie folgt bezeichnet werden</value>
  </data>
  <data name="Tutorial2CharacteristicSlide2Content3" xml:space="preserve">
    <value>Zusammenfassend wird eine differenzielle Charakteristik einer Verschlüsselungsrunde als Komination von Substitution und Permutation wie folgt notiert</value>
  </data>
  <data name="Tutorial2CharacteristicSlide2Header" xml:space="preserve">
    <value>Charakteristiken</value>
  </data>
  <data name="Tutorial2CharacteristicSlide3Content1" xml:space="preserve">
    <value>Die differenziellen Charakteristiken einzelner Runde sollen jetzt zu einem Weg von Differenzen durch die gesamte Chiffre kombiniert werden. Die Suche nach Pfaden mit hoher Wahrscheinlichkeit ist ein aufwändiges und zeitaufwändiges Problem bei Chiffren mit vielen Verschlüsselungsrunden und langen Blöcken.</value>
  </data>
  <data name="Tutorial2CharacteristicSlide3Content2" xml:space="preserve">
    <value>Die DKA-PfadFinder-Komponente verfügt über verschiedene Suchoptionen zur Bestimmung von solchen Pfaden.</value>
  </data>
  <data name="Tutorial2CharacteristicSlide3Content3" xml:space="preserve">
    <value>Die zuvor eingeführte Notation wird verwendet, um differenzielle Charakteristiken einer Runde zu differenziellen Charakteristiken für n-Verschlüsselungsrunden (hier: 3) zu bezeichnen:</value>
  </data>
  <data name="Tutorial2CharacteristicSlide3Content4" xml:space="preserve">
    <value>Im ersten 4-Tupel sind die Eingangsdifferenzen der SBoxen der ersten 4 SBoxen in der ersten Verschlüsselungsrunde angegeben. Im 2. 4-Tupel ist sowohl die Ausgangsdifferenz der ersten als auch die Eingangsdifferenz der zweiten Verschlüsselungsrunde notiert. Im 3. 4-Tupel ist die Ausgangsdifferenz der zweiten und die Eingangsdifferenz der letzten Verschlüsselungsrunde notiert.</value>
  </data>
  <data name="Tutorial2CharacteristicSlide3Content5" xml:space="preserve">
    <value>Ziel bei der Suche ist es, einen Weg zu finden, der eine möglichst hohe Wahrscheinlichkeit aufweist.</value>
  </data>
  <data name="Tutorial2CharacteristicSlide3Header" xml:space="preserve">
    <value>Charakteristiken</value>
  </data>
  <data name="Tutorial2DifferentialHeader" xml:space="preserve">
    <value>5. Differenziale</value>
  </data>
  <data name="Tutorial2DifferentialSlide1Content1" xml:space="preserve">
    <value>Bei der Suche nach Charakteristiken über n Runden kann es vorkommen, dass dass verschiedene Charakteristiken gefunden werden, die die selbe Eingangsdifferenz der ersten und Ausgangsdifferenz der letzten Verschlüsselungsrunde haben. Die Charakteristiken haben also die Form</value>
  </data>
  <data name="Tutorial2DifferentialSlide1Content2" xml:space="preserve">
    <value>Entscheidend bei der Verwendung von Charakteristiken für die differenzielle Kryptoanalyse sind Eingangs- und Ausgangswert der Differenz. Findet man mehrere Charakteristiken mit selben Eingangs- und Ausgangswert, können die Wahrscheinlichkeiten addiert werden. Eine Struktur, die aus mehreren Charakteristiken besteht, wird Differenzial genannt.</value>
  </data>
  <data name="Tutorial2DifferentialSlide1Content3" xml:space="preserve">
    <value>Ziel bei der Analyse einer Chiffre ist es also, das Differenzial mit der höchsten Wahrscheinlichkeit zu finden.</value>
  </data>
  <data name="Tutorial2DifferentialSlide1Header" xml:space="preserve">
    <value>Differenziale</value>
  </data>
  <data name="Tutorial2IntroductionHeader" xml:space="preserve">
    <value>1. Einführung</value>
  </data>
  <data name="Tutorial2IntroductionSlide1Content1" xml:space="preserve">
    <value>In Tutorial 1 wurde die Idee der differenziellen Kryptoanalyse vorgestellt und an einer Chiffre bestehend aus einer Verschlüsselungsrunde mit zwei Rundenschlüsseln demonstriert.</value>
  </data>
  <data name="Tutorial2IntroductionSlide1Content2" xml:space="preserve">
    <value>In diesem Tutorial wird die Idee vertieft und an einer Chiffre mit drei Verschlüsselungsrunden mit vier Rundenschlüsseln gezeigt.</value>
  </data>
  <data name="Tutorial2IntroductionSlide1Content3" xml:space="preserve">
    <value>Um eine Chiffre mit mehreren Verschlüsselgsrunden und Rundenschlüsseln mittels differenzieller Kryptoanalyse anzugreifen, muss diese genauer untersucht werden. Von Interesse sind die einzelnen Bestandteile der Verschlüsselungsrunden und wie diese sich verhalten.</value>
  </data>
  <data name="Tutorial2IntroductionSlide1Content4" xml:space="preserve">
    <value>Aufgrund der mehrfachen Verschlüsselungsrunden kann diese Chiffre nicht wie Chiffre 1 angegriffen werden. Für Chiffre 2 wird ein Ansatz benötigt, der die Änderungen von Differenzen über mehrere Verschlüsselungsrunden mit einer gewissen Wahrscheinlichkeit vorraussagt.</value>
  </data>
  <data name="Tutorial2IntroductionSlide1Header" xml:space="preserve">
    <value>Einführung</value>
  </data>
  <data name="Tutorial2RecoverKeyInformationHeader" xml:space="preserve">
    <value>6. Schlüsselinformationen wiederherstellen</value>
  </data>
  <data name="Tutorial2RecoverKeyInformationSlide1Content1" xml:space="preserve">
    <value>Sobald ein Differenzial mit hoher Wahrscheinlichkeit gefunden wurde, kann damit begonnen werden, Schlüsselbits wiederherzustellen. Dazu werden die SBoxen betrachtet, an denen die erwartete Differenz von 0 verschieden ist.</value>
  </data>
  <data name="Tutorial2RecoverKeyInformationSlide1Content2" xml:space="preserve">
    <value>Für jeden möglichen Schlüsselkandidat wird ein Zähler erzeugt. Der Kryptoanalyst generiert eine Anzahl von Nachrichten, die die Eingabedifferenz erfüllen. Diese werden verschlüsselt und mit dem Schlüsselkandidat partiell entschlüsselt. Erfüllt die Differenz der partiell entschlüsselten Nachrichten die erwartete Differenz, wird der Zähler um 1 erhöht. Diesen Prozess wiederholt man mit allen generierten Nachrichtenpaaren.</value>
  </data>
  <data name="Tutorial2RecoverKeyInformationSlide1Content3" xml:space="preserve">
    <value>Der Schlüsselkandidat mit den meisten Treffern, sollte den höchsten Zähler haben. Dieser sollte sehr nah am Erwartungswert des Differenzial liegen.</value>
  </data>
  <data name="Tutorial2RecoverKeyInformationSlide1Header" xml:space="preserve">
    <value>Schlüsselinformationen wiederherstellen</value>
  </data>
  <data name="Tutorial2TitleHeaderRun1" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="Tutorial2TitleHeaderRun2" xml:space="preserve">
    <value>Differenzielle Kryptoanalyse symmetrischer Blockchiffren</value>
  </data>
  <data name="Tutorial2WaitingSlideContent1" xml:space="preserve">
    <value>Sie können nun in der DKA-KeyRecovery-Komponente die in der DKA-PfadFinder-Komponente generierte Angriffskonfiguration verwenden, um Schlüsselbits wiederherzustellen. Dazu müssen Sie auf den Start-Button klicken.</value>
  </data>
  <data name="Tutorial2WaitingSlideContent2" xml:space="preserve">
    <value>Optional können Sie sich in der DKA-PfadVisualiserer-Komponente das ermittelte Differenzial und die darin enthaltenen Charakteristiken anzeigen lassen.</value>
  </data>
  <data name="Tutorial2WaitingSlideContent3Run1" xml:space="preserve">
    <value>Zusammenfassung der Analyse-Ergebnisse:</value>
  </data>
  <data name="Tutorial2WaitingSlideContent3Run2" xml:space="preserve">
    <value>Eingabedifferenz: </value>
  </data>
  <data name="Tutorial2WaitingSlideContent3Run3" xml:space="preserve">
    <value>Erwartete Differenz: </value>
  </data>
  <data name="Tutorial2WaitingSlideContent3Run4" xml:space="preserve">
    <value>Wahrscheinlichkeit: </value>
  </data>
  <data name="Tutorial2WaitingSlideHeader" xml:space="preserve">
    <value>Differenzielle Kryptoanalyse wird in den nachfolgenden Komponenten weitergeführt</value>
  </data>
  <data name="Tutorial3AttackFinishedContent1" xml:space="preserve">
    <value>Tutorial 3 zur differenziellen Kryptoanalyse in der DKA-PfadFinder-Komponente ist beendet. </value>
  </data>
  <data name="Tutorial3AttackFinishedContent2Run1" xml:space="preserve">
    <value>Durch ein letztes Klicken auf "Start" in der DKA-KeyRecovery-Komponente werden die letzten zwei Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackFinishedContent2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial3AttackFinishedContent2Run3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial3AttackFinishedContent2Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial3AttackFinishedContent2Run5" xml:space="preserve">
    <value> versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial3AttackFinishedHeader" xml:space="preserve">
    <value>Tutorial 3 beendet</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent1Run1" xml:space="preserve">
    <value>Im letzten Schritt werden die letzten beiden Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent1Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent1Run3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent1Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent1Run5" xml:space="preserve">
    <value> angegriffen. Dieser Angriff läuft analog zu dem Verfahren ab, wie es in Tutorial 1 durchgeführt wurde.</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent2Run1" xml:space="preserve">
    <value>Durch einen Klick auf weiter werden die ersten beiden Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent2Run2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent2Run3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent2Run4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial3AttackFirstRoundContent2Run5" xml:space="preserve">
    <value> angegriffen.</value>
  </data>
  <data name="Tutorial3AttackFirstRoundHeaderRun1" xml:space="preserve">
    <value>Berechnung der Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackFirstRoundHeaderRun2" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="Tutorial3AttackFirstRoundHeaderRun3" xml:space="preserve">
    <value> und k</value>
  </data>
  <data name="Tutorial3AttackFirstRoundHeaderRun4" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="Tutorial3AttackHeader" xml:space="preserve">
    <value>5. Differenzielle Kryptoanalyse von Chiffre 3</value>
  </data>
  <data name="Tutorial3AttackKeyRound2Content1Run1" xml:space="preserve">
    <value>An dieser Stelle soll der zweite Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackKeyRound2Content1Run2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial3AttackKeyRound2Content1Run3" xml:space="preserve">
    <value> angegriffen werden. Dazu können in der zweiten Verschlüsselungsrunde SBoxen ausgewählt werden. Durch die Auswahl einer SBox werden die jeweiligen 4 Bits des Rundenschlüssels angegriffen und versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial3AttackKeyRound2Content1Run4" xml:space="preserve">
    <value>Der Angriff läuft nahezu analog zu dem auf den Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackKeyRound2Content1Run5" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="Tutorial3AttackKeyRound2Content1Run6" xml:space="preserve">
    <value> ab. Allerdings muss bei der Suche nach Differenzialen die Chiffre nicht mehr so tief durchsucht werden, da bereits eine Verschlüsselungsrunde vollständig angegriffen wurde.</value>
  </data>
  <data name="Tutorial3AttackKeyRound3Content1Run1" xml:space="preserve">
    <value>An dieser Stelle soll der zweite Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackKeyRound3Content1Run2" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial3AttackKeyRound3Content1Run3" xml:space="preserve">
    <value> angegriffen werden. Dazu können in der zweiten Verschlüsselungsrunde SBoxen ausgewählt werden. Durch die Auswahl einer SBox werden die jeweiligen 4 Bits des Rundenschlüssels angegriffen und versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial3AttackKeyRound3Content1Run4" xml:space="preserve">
    <value>Der Angriff läuft nahezu analog zu dem auf den Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackKeyRound3Content1Run5" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="Tutorial3AttackKeyRound3Content1Run6" xml:space="preserve">
    <value> ab. Allerdings muss bei der Suche nach Differenzialen die Chiffre nicht mehr so tief durchsucht werden, da bereits eine Verschlüsselungsrunde vollständig angegriffen wurde.</value>
  </data>
  <data name="Tutorial3AttackKeyRound4Content1Run1" xml:space="preserve">
    <value>An dieser Stelle soll der zweite Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackKeyRound4Content1Run2" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="Tutorial3AttackKeyRound4Content1Run3" xml:space="preserve">
    <value> angegriffen werden. Dazu können in der zweiten Verschlüsselungsrunde SBoxen ausgewählt werden. Durch die Auswahl einer SBox werden die jeweiligen 4 Bits des Rundenschlüssels angegriffen und versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial3AttackKeyRound4Content1Run4" xml:space="preserve">
    <value>Der Angriff läuft nahezu analog zu dem auf den Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackKeyRound4Content1Run5" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="Tutorial3AttackKeyRound4Content1Run6" xml:space="preserve">
    <value> ab. Allerdings muss bei der Suche nach Differenzialen die Chiffre nicht mehr so tief durchsucht werden, da bereits eine Verschlüsselungsrunde vollständig angegriffen wurde.</value>
  </data>
  <data name="Tutorial3AttackKeyRound5Content1Run1" xml:space="preserve">
    <value>An dieser Stelle soll der erste Rundenschlüssel k</value>
  </data>
  <data name="Tutorial3AttackKeyRound5Content1Run2" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="Tutorial3AttackKeyRound5Content1Run3" xml:space="preserve">
    <value> der Chiffre angegriffen werden. Dazu können in der fünften Verschlüsselungsrunde SBoxen ausgewählt werden. Durch die Auswahl einer SBox werden die jeweiligen 4 Bits des Rundenschlüssels angegriffen und versucht wiederherzustellen.</value>
  </data>
  <data name="Tutorial3AttackKeyRound5Content1Run4" xml:space="preserve">
    <value>Bei der differenziellen Kryptoanalyse wird die Veränderung von Differenzen an den SBoxen betrachtet. Daher sind an dieser Stelle SBoxen auszuwählen.</value>
  </data>
  <data name="Tutorial3AttackKeyRound5Content1Run5" xml:space="preserve">
    <value>Je mehr Schlüsselbits ausgewählt werden, desto komplizierter ist die Suche nach einem Differenzial. Allerdings kann durchaus sinnvoll sein, mehrere SBoxen gleichzeitig anzugreifen. Je nach Beschaffenheit der Chiffre finden sich so bessere oder schlechtere Differenziale.</value>
  </data>
  <data name="Tutorial3AttackRound2HeaderRun1" xml:space="preserve">
    <value>SBoxen aus Runde 2 auswählen, um Schlüsselbits von k</value>
  </data>
  <data name="Tutorial3AttackRound2HeaderRun2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="Tutorial3AttackRound2HeaderRun3" xml:space="preserve">
    <value> anzugreifen</value>
  </data>
  <data name="Tutorial3AttackRound3HeaderRun1" xml:space="preserve">
    <value>SBoxen aus Runde 3 auswählen, um Schlüsselbits von k</value>
  </data>
  <data name="Tutorial3AttackRound3HeaderRun2" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="Tutorial3AttackRound3HeaderRun3" xml:space="preserve">
    <value> anzugreifen</value>
  </data>
  <data name="Tutorial3AttackRound4HeaderRun1" xml:space="preserve">
    <value>SBoxen aus Runde 4 auswählen, um Schlüsselbits von k</value>
  </data>
  <data name="Tutorial3AttackRound4HeaderRun2" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="Tutorial3AttackRound4HeaderRun3" xml:space="preserve">
    <value> anzugreifen</value>
  </data>
  <data name="Tutorial3AttackRound5HeaderRun1" xml:space="preserve">
    <value>SBoxen aus Runde 5 auswählen, um Schlüsselbits von k</value>
  </data>
  <data name="Tutorial3AttackRound5HeaderRun2" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="Tutorial3AttackRound5HeaderRun3" xml:space="preserve">
    <value> anzugreifen</value>
  </data>
  <data name="Tutorial3FilterHeader" xml:space="preserve">
    <value>2. Filterung</value>
  </data>
  <data name="Tutorial3FilterSlide1Content1" xml:space="preserve">
    <value>Bei der Durchführung der DKA werden viele Klartext-Paare generiert, die eine bestimmte Differenz aufweisen. Es kann vorkommen, dass die Nachrichten dem im Differenzial gefundenen Weg durch die Chiffre nicht folgen.</value>
  </data>
  <data name="Tutorial3FilterSlide1Content2" xml:space="preserve">
    <value>Erfüllt ein Paar die Eingabedifferenz, bedeutet es noch nicht, dass es auch die letzte Differenz erfüllt.</value>
  </data>
  <data name="Tutorial3FilterSlide1Content3" xml:space="preserve">
    <value>Wenn ein Paar den Fluss des Differenzials folgt, wird von einem richten Paar gesprochen. Dahingegen wird ein Paar, das nicht dem Differenzial folgt, als falsches Paar bezeichnet.</value>
  </data>
  <data name="Tutorial3FilterSlide1Header" xml:space="preserve">
    <value>Filterung</value>
  </data>
  <data name="Tutorial3FilterSlide2Content1" xml:space="preserve">
    <value>Falsche Paare können bei der Wiederherstellung des gesuchten Rundenschlüssels Probleme darstellen. Diese erschweren die Identifizierung des korrekten Rundenschlüssels durch Treffer von falschen Rundenschlüsseln bei der Wiederherstellung.</value>
  </data>
  <data name="Tutorial3FilterSlide2Content2" xml:space="preserve">
    <value>Es ist daher sinnvoll, falsche Paare vor der Wiederherstellung des Rundenschlüssels zu identifizieren und nicht weiter zu betrachten.</value>
  </data>
  <data name="Tutorial3FilterSlide2Header" xml:space="preserve">
    <value>Filterung</value>
  </data>
  <data name="Tutorial3IntroductionHeader" xml:space="preserve">
    <value>1. Einführung</value>
  </data>
  <data name="Tutorial3IntroductionSlide1Content1" xml:space="preserve">
    <value>In Tutorial 1 wurde die Idee der differenziellen Kryptoanalyse vorgestellt und an einer Chiffre bestehend aus einer Verschlüsselungsrunde mit zwei Rundenschlüsseln demonstriert. In Turorial 2 wurde die Idee vertieft und an einer Chiffre mit drei Verschlüsselungsrudnen gezeigt.</value>
  </data>
  <data name="Tutorial3IntroductionSlide1Content2" xml:space="preserve">
    <value>Dazu wurden Strukturen wie Charakteristiken und Differenziale eingeführt.</value>
  </data>
  <data name="Tutorial3IntroductionSlide1Content3" xml:space="preserve">
    <value>In diesem Tutorial werden weitere Techniken gezeigt, die bei der DKA verwendet werden.</value>
  </data>
  <data name="Tutorial3IntroductionSlide1Content4" xml:space="preserve">
    <value>Chiffre 3 besteht aus fünf Verschlüsselungsrunden und sechs Rundenschlüsseln. Das bereits demonstrierte soll an dieser Chiffre darüber hinaus nochmal vertieft werden.</value>
  </data>
  <data name="Tutorial3IntroductionSlide1Header" xml:space="preserve">
    <value>Einführung</value>
  </data>
  <data name="Tutorial3IntroductionSlide3Content1" xml:space="preserve">
    <value>Zur Filterung werden im Folgenden zwei Techniken vorgestellt.</value>
  </data>
  <data name="Tutorial3IntroductionSlide3Content2" xml:space="preserve">
    <value>Als erste Technik wird die Differenz der Geheimtexte eines Paares betrachtet. Beim Angriff mittels DKA werden oft aus Gründen des Aufwands nicht alle S-Boxen eiener Verschlüsselungsrunde gleichzeitig angegriffen, sondern oft nur eine Teilmenge.</value>
  </data>
  <data name="Tutorial3IntroductionSlide3Content3" xml:space="preserve">
    <value>Die S-Boxen, an denen die Differenz 0 hineingeht, kommt auch die Differenz 0 heraus. Folglich durch Betrachtung der Geheimtext-Differenz einige Paare schon ausgeschlossen werden, wenn die Differenz an den entsprechenden Stellen von 0 verschieden ist.</value>
  </data>
  <data name="Tutorial3IntroductionSlide3Header" xml:space="preserve">
    <value>Filterung</value>
  </data>
  <data name="Tutorial3IntroductionSlide4Content1" xml:space="preserve">
    <value>Als zweites kann die letzte (erwartete) Differenz des Differenzials betrachtet werden.</value>
  </data>
  <data name="Tutorial3IntroductionSlide4Content2" xml:space="preserve">
    <value>Dieser Wert ist bekannt und durch Betrachtung der Differenzenverteilungstabelle der S-Box kann auch der Ausgabewert der S-Box ermittelt werden. Im allgemeinen sind hier mehrere verschiedene Werte möglich. Diese Werte können ebenfalls bei der Betrachtung der Differenz der Geheimtexte verwendet werden.</value>
  </data>
  <data name="Tutorial3IntroductionSlide4Content3" xml:space="preserve">
    <value>Entspricht die Geheimtext-Differenz an der Stelle der S-Box nicht einem der verschiedenen Ausgangswerte der S-Box, kann dieses Paar ebenfalls als falsches Paar indentifiziert werden.</value>
  </data>
  <data name="Tutorial3IntroductionSlide4Header" xml:space="preserve">
    <value>Filterung</value>
  </data>
  <data name="Tutorial3NeededPairsHeader" xml:space="preserve">
    <value>3. Anzahl der notwendigen Paare</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Content1" xml:space="preserve">
    <value>Die notwendige Anzahl an Paaren ist im wesentlichen von bestimmten Faktoren abhängig. Diese sind die Wahrscheinlichkeit des gefundenen Differenzials, die Anzahl der angegriffenen Schlüsselbits durch das Differenzial und die Filterungstechnik.</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Content2" xml:space="preserve">
    <value>Es beschreibt das Verhältnis der Anzahl von Paaren, die dem Differenzial folgen zu der durchschnittlichen Häufigkeit der falschen Teilschlüssel.</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Content2Run1" xml:space="preserve">
    <value>Eine gängige Formel zur bestimmung der notwendigen Paare N</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Content2Run2" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Content2Run3" xml:space="preserve">
    <value> ist</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Content3" xml:space="preserve">
    <value>wobei c eine kleine Konstante und DP die Wahrscheinlichkeit des Differenzials ist.</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Content4" xml:space="preserve">
    <value>Ein beispielhafter Wert für c ist beispielsweise 10.</value>
  </data>
  <data name="Tutorial3NeededPairsSlide1Header" xml:space="preserve">
    <value>Anzahl der notwendigen Paare</value>
  </data>
  <data name="Tutorial3SignalToNoiseHeader" xml:space="preserve">
    <value>4. Rauschverhältnis</value>
  </data>
  <data name="Tutorial3SignalToNoiseSlide1Content1" xml:space="preserve">
    <value>Ein Werkzeug zur Beurteilung der Erfolgsaussichten, ist das so genannte Rauschverhältnis.</value>
  </data>
  <data name="Tutorial3SignalToNoiseSlide1Content3" xml:space="preserve">
    <value>Zur Bestimmung des Rauschverhältnis sind zum Teil experimentell zu bestimmtende Durchschnittswerte notwendig, wie beispielsweise der Anteil der Paare, die durch die Filterng entfernt werden oder die Durchschnittliche Anzahl der Teilschlüsselkandidaten, die ein Paar vorschlägt.</value>
  </data>
  <data name="Tutorial3SignalToNoiseSlide1Content4" xml:space="preserve">
    <value>In der Online-Hilfe der DKA-PfadFinder-Komponente sind weitere Literatur-Angaben zu dem DKA-Verfahren hinterlegt.</value>
  </data>
  <data name="Tutorial3SignalToNoiseSlide1Header" xml:space="preserve">
    <value>Rauschverhältnis</value>
  </data>
  <data name="Tutorial3TitleHeaderRun1" xml:space="preserve">
    <value>Tutorial</value>
  </data>
  <data name="Tutorial3TitleHeaderRun2" xml:space="preserve">
    <value>Differenzielle Kryptoanalyse symmetrischer Blockchiffren</value>
  </data>
  <data name="Tutorial3WaitingSlideContent1" xml:space="preserve">
    <value>Sie können nun in der DKA-KeyRecovery-Komponente die in der DKA-PfadFinder-Komponente generierte Angriffskonfiguration verwenden, um Schlüsselbits wiederherzustellen. Dazu müssen Sie auf den Start-Button klicken.</value>
  </data>
  <data name="Tutorial3WaitingSlideContent2" xml:space="preserve">
    <value>Optional können Sie sich in der DKA-PfadVisualiserer-Komponente das ermittelte Differenzial und die darin enthaltenen Charakteristiken anzeigen lassen.</value>
  </data>
  <data name="Tutorial3WaitingSlideContent3Run1" xml:space="preserve">
    <value>Zusammenfassung der Analyse-Ergebnisse:</value>
  </data>
  <data name="Tutorial3WaitingSlideContent3Run2" xml:space="preserve">
    <value>Eingabedifferenz: </value>
  </data>
  <data name="Tutorial3WaitingSlideContent3Run3" xml:space="preserve">
    <value>Erwartete Differenz: </value>
  </data>
  <data name="Tutorial3WaitingSlideContent3Run4" xml:space="preserve">
    <value>Wahrscheinlichkeit: </value>
  </data>
  <data name="Tutorial3WaitingSlideHeader" xml:space="preserve">
    <value>Differenzielle Kryptoanalyse wird in den nachfolgenden Komponenten weitergeführt</value>
  </data>
  <data name="UseOfflinePaths" xml:space="preserve">
    <value>Vorberechnete Daten</value>
  </data>
  <data name="UseOfflinePathsToolTip" xml:space="preserve">
    <value>Ist diese Einstellung angewählt, wird keine Suche nach
Charakteristiken durchgeführt, sondern es werden für die jeweilige
Chiffre vorberechnete Daten verwendet, die in der Komponente hinterlegt
sind. Dadurch können lange Berechnungszeiten minimiert werden.</value>
  </data>
</root>