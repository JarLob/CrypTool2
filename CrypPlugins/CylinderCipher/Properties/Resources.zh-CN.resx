<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionCaption" xml:space="preserve">
    <value>加密/解密</value>
  </data>
  <data name="ActionTooltip" xml:space="preserve">
    <value>选择您要加密还是解密输入。</value>
  </data>
  <data name="CaseSensitivyCaption" xml:space="preserve">
    <value>区分大小写</value>
  </data>
  <data name="CaseSensitivyTooltip" xml:space="preserve">
    <value>选择设备是否区分大小写。</value>
  </data>
  <data name="Decrypt" xml:space="preserve">
    <value>解密</value>
  </data>
  <data name="DeviceType" xml:space="preserve">
    <value>设备类型</value>
  </data>
  <data name="DeviceTypeTooltip" xml:space="preserve">
    <value>所使用的圆柱密码设备的类型</value>
  </data>
  <data name="Device_Bazeries" xml:space="preserve">
    <value>缸筒</value>
  </data>
  <data name="Device_M94" xml:space="preserve">
    <value>M-94</value>
  </data>
  <data name="Encrypt" xml:space="preserve">
    <value>加密</value>
  </data>
  <data name="InvalidCharacterHandlingCaption" xml:space="preserve">
    <value>处理无效字符</value>
  </data>
  <data name="InvalidCharacterHandlingList1" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="InvalidCharacterHandlingList2" xml:space="preserve">
    <value>忽视</value>
  </data>
  <data name="InvalidCharacterHandlingList3" xml:space="preserve">
    <value>替换为“？”</value>
  </data>
  <data name="InvalidCharacterHandlingTooltip" xml:space="preserve">
    <value>选择应如何处理所使用的带不支持的无效字符。</value>
  </data>
  <data name="KeyCaption" xml:space="preserve">
    <value>按键输入</value>
  </data>
  <data name="KeyTooltio" xml:space="preserve">
    <value>用于加密或解密的密钥</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>圆柱密码</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>圆柱密码加密工具</value>
  </data>
  <data name="SeparatorOffCharCaption" xml:space="preserve">
    <value>偏移量分隔符</value>
  </data>
  <data name="SeparatorOffCharTooltip" xml:space="preserve">
    <value>分离器，用于将光盘与胶印盘分开</value>
  </data>
  <data name="SeparatorStripCaption" xml:space="preserve">
    <value>光盘分离器</value>
  </data>
  <data name="SeparatorStripTooltip" xml:space="preserve">
    <value>用于分隔彼此使用的不同光盘的分隔符</value>
  </data>
  <data name="TextInputCaption" xml:space="preserve">
    <value>文字输入</value>
  </data>
  <data name="TextInputTooltip" xml:space="preserve">
    <value>输入要由圆柱密码处理的字符串</value>
  </data>
  <data name="TextOutputCaption" xml:space="preserve">
    <value>文字输出</value>
  </data>
  <data name="TextOutputTolltip" xml:space="preserve">
    <value>圆柱密码处理后的字符串</value>
  </data>
</root>