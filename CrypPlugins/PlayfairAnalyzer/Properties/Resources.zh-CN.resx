<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadyExecuted" xml:space="preserve">
    <value>“ Playfair Analyzer”已经开始于工作空间运行中给出的数据。为了更改输入数据并重新启动“ Playfair Analyzer”组件，请停止并启动工作区。</value>
  </data>
  <data name="CiphertextCaption" xml:space="preserve">
    <value>密文</value>
  </data>
  <data name="CiphertextTooltip" xml:space="preserve">
    <value>应该分析的密文</value>
  </data>
  <data name="Copy_all" xml:space="preserve">
    <value>复制所有行</value>
  </data>
  <data name="Copy_key" xml:space="preserve">
    <value>复制键</value>
  </data>
  <data name="Copy_line" xml:space="preserve">
    <value>复制所选行</value>
  </data>
  <data name="Copy_text" xml:space="preserve">
    <value>复制文字</value>
  </data>
  <data name="Copy_value" xml:space="preserve">
    <value>复制值</value>
  </data>
  <data name="CribCaption" xml:space="preserve">
    <value>婴儿床</value>
  </data>
  <data name="CribTooltip" xml:space="preserve">
    <value>分析过程中使用的婴儿床</value>
  </data>
  <data name="CyclesCaption" xml:space="preserve">
    <value>周期数</value>
  </data>
  <data name="CyclesTooltip" xml:space="preserve">
    <value>密码分析可以执行多少个周期？</value>
  </data>
  <data name="LanguageCaption" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="LanguageTooltip" xml:space="preserve">
    <value>明文的语言。统计分析需要此信息。</value>
  </data>
  <data name="DiscardSamePlaintextsCaption" xml:space="preserve">
    <value>丢弃相同的明文</value>
  </data>
  <data name="DiscardSamePlaintextsTooltip" xml:space="preserve">
    <value>确定是否应将具有相同明文的不同键包含在最佳列表中</value>
  </data>
  <data name="AdvancedBestListViewCaption" xml:space="preserve">
    <value>高级最佳列表视图</value>
  </data>
  <data name="AdvancedBestListViewTooltip" xml:space="preserve">
    <value>使其他列表在最佳列表视图中可见</value>
  </data>
  <data name="ElapsedLabel" xml:space="preserve">
    <value>经过时间：</value>
  </data>
  <data name="EndLabel" xml:space="preserve">
    <value>时间结束：</value>
  </data>
  <data name="EvaluatedKeysLabel" xml:space="preserve">
    <value>＃个评估键：</value>
  </data>
  <data name="MaxKeysLabel" xml:space="preserve">
    <value>最高＃个要评估的键：</value>
  </data>
  <data name="KeySpaceSizeLabel" xml:space="preserve">
    <value>密钥空间的大小：</value>
  </data>
  <data name="ElapsedHeader" xml:space="preserve">
    <value>过去</value>
  </data>
  <data name="ElapsedColumnFormat" xml:space="preserve">
    <value>{0：N0}秒</value>
  </data>
  <data name="EvaluationsHeader" xml:space="preserve">
    <value>评价</value>
  </data>
  <data name="EvaluationsColumnFormat" xml:space="preserve">
    <value>{0：N0} K次解密</value>
  </data>
  <data name="PerformanceHeader" xml:space="preserve">
    <value>性能</value>
  </data>
  <data name="PerformanceColumnFormat" xml:space="preserve">
    <value>{0：N0} K /秒</value>
  </data>
  <data name="KeyCaption" xml:space="preserve">
    <value>最好的钥匙</value>
  </data>
  <data name="KeyHeader" xml:space="preserve">
    <value>键</value>
  </data>
  <data name="KeyTooltip" xml:space="preserve">
    <value>分析过程中找到的最佳密钥</value>
  </data>
  <data name="LocalLabel" xml:space="preserve">
    <value>分析</value>
  </data>
  <data name="PlaintextCaption" xml:space="preserve">
    <value>最佳纯文本</value>
  </data>
  <data name="PlaintextTooltip" xml:space="preserve">
    <value>分析过程中发现的最佳明文</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>Playfair分析仪</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>破解Playfair密码的分析工具</value>
  </data>
  <data name="SpeedLabel" xml:space="preserve">
    <value>按键/秒：</value>
  </data>
  <data name="StartLabel" xml:space="preserve">
    <value>开始时间：</value>
  </data>
  <data name="TextHeader" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="ThreadsCaption" xml:space="preserve">
    <value>线程数</value>
  </data>
  <data name="ThreadsTooltip" xml:space="preserve">
    <value>分析器可以启动多少个线程来执行密码分析？</value>
  </data>
  <data name="TopTenLabel" xml:space="preserve">
    <value>最佳名单</value>
  </data>
  <data name="ValueHeader" xml:space="preserve">
    <value>值</value>
  </data>
</root>