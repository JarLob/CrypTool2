//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cryptool.PlayfairAnalyzer.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Cryptool.PlayfairAnalyzer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Advanced best list view ähnelt.
        /// </summary>
        public static string AdvancedBestListViewCaption {
            get {
                return ResourceManager.GetString("AdvancedBestListViewCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Makes additional columns in best list view visible ähnelt.
        /// </summary>
        public static string AdvancedBestListViewTooltip {
            get {
                return ResourceManager.GetString("AdvancedBestListViewTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The &quot;Playfair Analyzer&quot; already started with data given in this run of the workspace. In order to change input data and to restart the component &quot;Playfair Analyzer&quot;, please stop and start the workspace. ähnelt.
        /// </summary>
        public static string AlreadyExecuted {
            get {
                return ResourceManager.GetString("AlreadyExecuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext ähnelt.
        /// </summary>
        public static string CiphertextCaption {
            get {
                return ResourceManager.GetString("CiphertextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The ciphertext that should be analyzed ähnelt.
        /// </summary>
        public static string CiphertextTooltip {
            get {
                return ResourceManager.GetString("CiphertextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy all lines ähnelt.
        /// </summary>
        public static string Copy_all {
            get {
                return ResourceManager.GetString("Copy_all", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy key ähnelt.
        /// </summary>
        public static string Copy_key {
            get {
                return ResourceManager.GetString("Copy_key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy selected line ähnelt.
        /// </summary>
        public static string Copy_line {
            get {
                return ResourceManager.GetString("Copy_line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy text ähnelt.
        /// </summary>
        public static string Copy_text {
            get {
                return ResourceManager.GetString("Copy_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy value ähnelt.
        /// </summary>
        public static string Copy_value {
            get {
                return ResourceManager.GetString("Copy_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Crib ähnelt.
        /// </summary>
        public static string CribCaption {
            get {
                return ResourceManager.GetString("CribCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A crib that is used during the analysis ähnelt.
        /// </summary>
        public static string CribTooltip {
            get {
                return ResourceManager.GetString("CribTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cycles ähnelt.
        /// </summary>
        public static string CyclesCaption {
            get {
                return ResourceManager.GetString("CyclesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die How many cycles may the cryptanalysis perform? ähnelt.
        /// </summary>
        public static string CyclesTooltip {
            get {
                return ResourceManager.GetString("CyclesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Discard same plaintexts ähnelt.
        /// </summary>
        public static string DiscardSamePlaintextsCaption {
            get {
                return ResourceManager.GetString("DiscardSamePlaintextsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Determines whether different keys with same plaintext should be included in best list ähnelt.
        /// </summary>
        public static string DiscardSamePlaintextsTooltip {
            get {
                return ResourceManager.GetString("DiscardSamePlaintextsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elapsed ähnelt.
        /// </summary>
        public static string ElapsedHeader {
            get {
                return ResourceManager.GetString("ElapsedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Elapsed Time: ähnelt.
        /// </summary>
        public static string ElapsedLabel {
            get {
                return ResourceManager.GetString("ElapsedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End Time: ähnelt.
        /// </summary>
        public static string EndLabel {
            get {
                return ResourceManager.GetString("EndLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Evaluated Keys: ähnelt.
        /// </summary>
        public static string EvaluatedKeysLabel {
            get {
                return ResourceManager.GetString("EvaluatedKeysLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Evaluations ähnelt.
        /// </summary>
        public static string EvaluationsHeader {
            get {
                return ResourceManager.GetString("EvaluationsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Best Key ähnelt.
        /// </summary>
        public static string KeyCaption {
            get {
                return ResourceManager.GetString("KeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        public static string KeyHeader {
            get {
                return ResourceManager.GetString("KeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The best key which was found during the analysis ähnelt.
        /// </summary>
        public static string KeyTooltip {
            get {
                return ResourceManager.GetString("KeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language ähnelt.
        /// </summary>
        public static string LanguageCaption {
            get {
                return ResourceManager.GetString("LanguageCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language of the plaintext. This information is required for the statistical analysis. ähnelt.
        /// </summary>
        public static string LanguageTooltip {
            get {
                return ResourceManager.GetString("LanguageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analysis ähnelt.
        /// </summary>
        public static string LocalLabel {
            get {
                return ResourceManager.GetString("LocalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Max. Keys: ähnelt.
        /// </summary>
        public static string MaxKeysLabel {
            get {
                return ResourceManager.GetString("MaxKeysLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Performance ähnelt.
        /// </summary>
        public static string PerformanceHeader {
            get {
                return ResourceManager.GetString("PerformanceHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Best Plaintext ähnelt.
        /// </summary>
        public static string PlaintextCaption {
            get {
                return ResourceManager.GetString("PlaintextCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The best plaintext which was found during the analysis ähnelt.
        /// </summary>
        public static string PlaintextTooltip {
            get {
                return ResourceManager.GetString("PlaintextTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Playfair Analyzer ähnelt.
        /// </summary>
        public static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analysis tool to break short Playfair ciphers ähnelt.
        /// </summary>
        public static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Keys/second: ähnelt.
        /// </summary>
        public static string SpeedLabel {
            get {
                return ResourceManager.GetString("SpeedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Start Time: ähnelt.
        /// </summary>
        public static string StartLabel {
            get {
                return ResourceManager.GetString("StartLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        public static string TextHeader {
            get {
                return ResourceManager.GetString("TextHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Threads ähnelt.
        /// </summary>
        public static string ThreadsCaption {
            get {
                return ResourceManager.GetString("ThreadsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die How many threads may the analyzer start for performing cryptanalysis? ähnelt.
        /// </summary>
        public static string ThreadsTooltip {
            get {
                return ResourceManager.GetString("ThreadsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Bestlist ähnelt.
        /// </summary>
        public static string TopTenLabel {
            get {
                return ResourceManager.GetString("TopTenLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value ähnelt.
        /// </summary>
        public static string ValueHeader {
            get {
                return ResourceManager.GetString("ValueHeader", resourceCulture);
            }
        }
    }
}
