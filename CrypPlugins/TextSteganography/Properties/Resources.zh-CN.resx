<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionCaption" xml:space="preserve">
    <value>行动</value>
  </data>
  <data name="ActionList1" xml:space="preserve">
    <value>隐藏</value>
  </data>
  <data name="ActionList2" xml:space="preserve">
    <value>提取</value>
  </data>
  <data name="ActionTooltip" xml:space="preserve">
    <value>选择动作类型</value>
  </data>
  <data name="CoverTextCaption" xml:space="preserve">
    <value>封面文字</value>
  </data>
  <data name="CoverTextTooltip" xml:space="preserve">
    <value>隐藏秘密信息的文字</value>
  </data>
  <data name="DotAbove" xml:space="preserve">
    <value>点以上字母</value>
  </data>
  <data name="DotUnder" xml:space="preserve">
    <value>字母下的圆点</value>
  </data>
  <data name="MarkingCaption" xml:space="preserve">
    <value>打标</value>
  </data>
  <data name="MarkingTooltip" xml:space="preserve">
    <value>选择字母的标记方式</value>
  </data>
  <data name="ModeCaption" xml:space="preserve">
    <value>模式</value>
  </data>
  <data name="ModeTooltip" xml:space="preserve">
    <value>选择如何隐藏/提取消息</value>
  </data>
  <data name="NotAllMessageHidden1" xml:space="preserve">
    <value>并非所有秘密消息都可以被隐藏，因为并非所有消息的字母都以有序方式在封面文本中找到。</value>
  </data>
  <data name="NotAllMessageHidden2" xml:space="preserve">
    <value>并非所有的秘密消息都可以隐藏，因为封面文字的长度比秘密消息的位数短</value>
  </data>
  <data name="OffsetTooltip" xml:space="preserve">
    <value>输入索引，在该索引中应插入零宽度空格，该值应介于0和封面文字的长度之间。</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>文字隐写术</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>在文本内隐藏秘密消息</value>
  </data>
  <data name="SecretMessageInputCaption" xml:space="preserve">
    <value>秘密信息输入</value>
  </data>
  <data name="SecretMessageInputTooltip" xml:space="preserve">
    <value>隐藏的秘密讯息</value>
  </data>
  <data name="SecretMessageOutputCaption" xml:space="preserve">
    <value>秘密信息输出</value>
  </data>
  <data name="SecretMessageOutputTooltip" xml:space="preserve">
    <value>从封面文字中提取秘密消息</value>
  </data>
  <data name="ShowMessageBitsCB" xml:space="preserve">
    <value>显示消息位</value>
  </data>
  <data name="StegoTextCaption" xml:space="preserve">
    <value>步骤文字</value>
  </data>
  <data name="StegoTextTooltip" xml:space="preserve">
    <value>带有秘密消息编码的封面文字</value>
  </data>
  <data name="ZeroWidthText" xml:space="preserve">
    <value>零宽度空格未在输出文本中显示。</value>
  </data>
</root>