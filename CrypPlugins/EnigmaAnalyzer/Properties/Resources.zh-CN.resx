<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnalysisLanguageCaption" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="AnalysisLanguageTooltip" xml:space="preserve">
    <value>使用此语言表示费用功能。</value>
  </data>
  <data name="AnalysisMode" xml:space="preserve">
    <value>分析模式：</value>
  </data>
  <data name="AnalysisModeCaption" xml:space="preserve">
    <value>分析模式</value>
  </data>
  <data name="AnalysisModeTooltip" xml:space="preserve">
    <value>应该执行哪种密码分析模式？</value>
  </data>
  <data name="AnalysisStep" xml:space="preserve">
    <value>分析步骤：</value>
  </data>
  <data name="AnalysisTypeGroup" xml:space="preserve">
    <value>分析类型</value>
  </data>
  <data name="CiphertextCaption" xml:space="preserve">
    <value>密文</value>
  </data>
  <data name="CiphertextTooltip" xml:space="preserve">
    <value>应该分析的密文。</value>
  </data>
  <data name="CribCaption" xml:space="preserve">
    <value>婴儿床</value>
  </data>
  <data name="CribPositionFromCaption" xml:space="preserve">
    <value>婴儿床位置</value>
  </data>
  <data name="CribPositionFromTooltip" xml:space="preserve">
    <value>分析过程中使用的婴儿床的起始位置</value>
  </data>
  <data name="CribPositionToCaption" xml:space="preserve">
    <value>婴儿床位置</value>
  </data>
  <data name="CribPositionToTooltip" xml:space="preserve">
    <value>分析过程中使用的婴儿床的最终位置</value>
  </data>
  <data name="CribTooltip" xml:space="preserve">
    <value>使用Turing Bombe进行密码分析时使用的婴儿床。</value>
  </data>
  <data name="EndLabel" xml:space="preserve">
    <value>时间结束：</value>
  </data>
  <data name="GreekRingFromCaption" xml:space="preserve">
    <value>希腊环起</value>
  </data>
  <data name="GreekRingFromTooltip" xml:space="preserve">
    <value>在希腊位置的第一环进行分析</value>
  </data>
  <data name="GreekRingToCaption" xml:space="preserve">
    <value>希腊环向</value>
  </data>
  <data name="GreekRingToTooltip" xml:space="preserve">
    <value>最后一环在希腊位置进行分析</value>
  </data>
  <data name="GreekRoto PositionToTooltip" xml:space="preserve">
    <value>最后一个转子位置在希腊位置以进行分析</value>
  </data>
  <data name="GreekRotorFromCaption" xml:space="preserve">
    <value>来自的希腊转子</value>
  </data>
  <data name="GreekRotorFromTooltip" xml:space="preserve">
    <value>第一个转子位于希腊位置以进行分析</value>
  </data>
  <data name="GreekRotorPositionFromCaption" xml:space="preserve">
    <value>希腊转子位置从</value>
  </data>
  <data name="GreekRotorPositionFromTooltip" xml:space="preserve">
    <value>要分析的希腊语中的第一个转子位置</value>
  </data>
  <data name="GreekRotorPositionToCaption" xml:space="preserve">
    <value>希腊转子位置</value>
  </data>
  <data name="GreekRotorToCaption" xml:space="preserve">
    <value>希腊转子</value>
  </data>
  <data name="GreekRotorToTooltip" xml:space="preserve">
    <value>最后一个转子位于希腊位置以进行分析</value>
  </data>
  <data name="KeyCaption" xml:space="preserve">
    <value>最好的钥匙</value>
  </data>
  <data name="KeyHeader" xml:space="preserve">
    <value>键</value>
  </data>
  <data name="KeyTooltip" xml:space="preserve">
    <value>分析过程中找到的最佳密钥。</value>
  </data>
  <data name="LeftRingFromCaption" xml:space="preserve">
    <value>左环起</value>
  </data>
  <data name="LeftRingFromTooltip" xml:space="preserve">
    <value>第一环在左侧位置以进行分析</value>
  </data>
  <data name="LeftRingToCaption" xml:space="preserve">
    <value>左环到</value>
  </data>
  <data name="LeftRingToTooltip" xml:space="preserve">
    <value>最后一圈在左侧位置以进行分析</value>
  </data>
  <data name="LeftRotorFromCaption" xml:space="preserve">
    <value>左转子从</value>
  </data>
  <data name="LeftRotorFromTooltip" xml:space="preserve">
    <value>第一个转子位于左侧位置以进行分析</value>
  </data>
  <data name="LeftRotorPositionFromCaption" xml:space="preserve">
    <value>从左转子位置</value>
  </data>
  <data name="LeftRotorPositionFromTooltip" xml:space="preserve">
    <value>第一转子位置在左侧位置以进行分析</value>
  </data>
  <data name="LeftRotorPositionToCaption" xml:space="preserve">
    <value>左转子位置</value>
  </data>
  <data name="LeftRotorPositionToTooltip" xml:space="preserve">
    <value>最后的转子位置在左侧位置以进行分析</value>
  </data>
  <data name="LeftRotorToCaption" xml:space="preserve">
    <value>左转子到</value>
  </data>
  <data name="LeftRotorToTooltip" xml:space="preserve">
    <value>最后一个转子位于左侧位置以进行分析</value>
  </data>
  <data name="LocalLabel" xml:space="preserve">
    <value>本地</value>
  </data>
  <data name="MachineModelCaption" xml:space="preserve">
    <value>机器型号</value>
  </data>
  <data name="MachineModelTooltip" xml:space="preserve">
    <value>应该分析的Enigma模型。</value>
  </data>
  <data name="MiddleRingFromCaption" xml:space="preserve">
    <value>中环起</value>
  </data>
  <data name="MiddleRingFromTooltip" xml:space="preserve">
    <value>第一环处于中间位置以进行分析</value>
  </data>
  <data name="MiddleRingToCaption" xml:space="preserve">
    <value>中环到</value>
  </data>
  <data name="MiddleRingToTooltip" xml:space="preserve">
    <value>最后一圈处于中间位置以进行分析</value>
  </data>
  <data name="MiddleRotorFromCaption" xml:space="preserve">
    <value>中间转子</value>
  </data>
  <data name="MiddleRotorFromTooltip" xml:space="preserve">
    <value>第一个处于中间位置的转子进行分析</value>
  </data>
  <data name="MiddleRotorPositionFromCaption" xml:space="preserve">
    <value>转子中间位置从</value>
  </data>
  <data name="MiddleRotorPositionFromTooltip" xml:space="preserve">
    <value>第一转子位置在中间位置以进行分析</value>
  </data>
  <data name="MiddleRotorPositionToCaption" xml:space="preserve">
    <value>转子中间位置</value>
  </data>
  <data name="MiddleRotorPositionToTooltip" xml:space="preserve">
    <value>最后一个转子位置在中间位置以进行分析</value>
  </data>
  <data name="MiddleRotorToCaption" xml:space="preserve">
    <value>中转子</value>
  </data>
  <data name="MiddleRotorToTooltip" xml:space="preserve">
    <value>最后一个转子处于中间位置以进行分析</value>
  </data>
  <data name="PlaintextCaption" xml:space="preserve">
    <value>最佳明文</value>
  </data>
  <data name="PlaintextTooltip" xml:space="preserve">
    <value>分析过程中发现的最佳明文。</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>谜分析器</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>加密分析不同类型的Enigma加密机的组件</value>
  </data>
  <data name="PlugsInputCaption" xml:space="preserve">
    <value>插头</value>
  </data>
  <data name="PlugsInputTooltip" xml:space="preserve">
    <value>在Trigram搜索期间使用的插头。</value>
  </data>
  <data name="RankingHeader" xml:space="preserve">
    <value>排行</value>
  </data>
  <data name="ReflectorFromCaption" xml:space="preserve">
    <value>反射镜来自</value>
  </data>
  <data name="ReflectorFromTooltip" xml:space="preserve">
    <value>首先要分析的反射器</value>
  </data>
  <data name="ReflectorFromTooltip1" xml:space="preserve">
    <value>最后要分析的反射器</value>
  </data>
  <data name="ReflectorGroup" xml:space="preserve">
    <value>反光板</value>
  </data>
  <data name="ReflectorToCaption" xml:space="preserve">
    <value>反光板</value>
  </data>
  <data name="RightRingFromCaption" xml:space="preserve">
    <value>右环起</value>
  </data>
  <data name="RightRingFromTooltip" xml:space="preserve">
    <value>第一环处于正确位置以进行分析</value>
  </data>
  <data name="RightRingToCaption" xml:space="preserve">
    <value>右环到</value>
  </data>
  <data name="RightRingToTooltip" xml:space="preserve">
    <value>最后一个环处于正确位置以进行分析</value>
  </data>
  <data name="RightRotorFromCaption" xml:space="preserve">
    <value>右转子从</value>
  </data>
  <data name="RightRotorFromTooltip" xml:space="preserve">
    <value>第一个转子处于正确位置以进行分析</value>
  </data>
  <data name="RightRotorPositionFromCaption" xml:space="preserve">
    <value>从右转子位置</value>
  </data>
  <data name="RightRotorPositionFromTooltip" xml:space="preserve">
    <value>第一个转子位置在正确位置以进行分析</value>
  </data>
  <data name="RightRotorPositionToCaption" xml:space="preserve">
    <value>右转子位置</value>
  </data>
  <data name="RightRotorPositionToTooltip" xml:space="preserve">
    <value>最后的转子位置在正确位置以进行分析</value>
  </data>
  <data name="RightRotorToCaption" xml:space="preserve">
    <value>右转子到</value>
  </data>
  <data name="RightRotorToTooltip" xml:space="preserve">
    <value>最后一个转子处于正确位置以进行分析</value>
  </data>
  <data name="RingGroup" xml:space="preserve">
    <value>戒指位置</value>
  </data>
  <data name="RotorGroup" xml:space="preserve">
    <value>转子</value>
  </data>
  <data name="RotorPositionGroup" xml:space="preserve">
    <value>转子位置</value>
  </data>
  <data name="SearchFrom" xml:space="preserve">
    <value>搜索来自：</value>
  </data>
  <data name="SearchTo" xml:space="preserve">
    <value>搜索到：</value>
  </data>
  <data name="StartLabel" xml:space="preserve">
    <value>开始时间：</value>
  </data>
  <data name="TextHeader" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="ThreadsCaption" xml:space="preserve">
    <value>线程数</value>
  </data>
  <data name="ThreadsTooltip" xml:space="preserve">
    <value>分析期间应使用多少个线程？</value>
  </data>
  <data name="TimeLeftLabel" xml:space="preserve">
    <value>剩下的时间：</value>
  </data>
  <data name="TopTenLabel" xml:space="preserve">
    <value>排行榜</value>
  </data>
  <data name="ValueHeader" xml:space="preserve">
    <value>值</value>
  </data>
</root>