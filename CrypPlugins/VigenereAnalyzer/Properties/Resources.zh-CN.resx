<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PluginCaption" xml:space="preserve">
    <value>Vigenère分析仪</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>使用爬山对Vigenère密码进行密码分析。</value>
  </data>
  <data name="Copy_all" xml:space="preserve">
    <value>复制所有行</value>
  </data>
  <data name="Copy_key" xml:space="preserve">
    <value>复制键</value>
  </data>
  <data name="Copy_line" xml:space="preserve">
    <value>复制所选行</value>
  </data>
  <data name="Copy_text" xml:space="preserve">
    <value>复制文字</value>
  </data>
  <data name="Copy_value" xml:space="preserve">
    <value>复制值</value>
  </data>
  <data name="FromKeylengthCaption" xml:space="preserve">
    <value>键长下限</value>
  </data>
  <data name="FromKeylengthTooltip" xml:space="preserve">
    <value>分析给定密文时，从此密钥长度开始。</value>
  </data>
  <data name="KeyStyleCaption" xml:space="preserve">
    <value>按键样式</value>
  </data>
  <data name="KeyStyleTooltip" xml:space="preserve">
    <value>密钥是自然密码吗？</value>
  </data>
  <data name="LanguageCaption" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="LanguageTooltip" xml:space="preserve">
    <value>使用此语言表示成本函数。</value>
  </data>
  <data name="ModeCaption" xml:space="preserve">
    <value>模式</value>
  </data>
  <data name="ModeTooltip" xml:space="preserve">
    <value>使用此模式进行分析。</value>
  </data>
  <data name="NaturalLanguage" xml:space="preserve">
    <value>自然语言</value>
  </data>
  <data name="Random" xml:space="preserve">
    <value>随机</value>
  </data>
  <data name="RestartsCaption" xml:space="preserve">
    <value>重新启动</value>
  </data>
  <data name="RestartsTooltip" xml:space="preserve">
    <value>爬山算法的重新启动次数。</value>
  </data>
  <data name="ToKeylengthCaption" xml:space="preserve">
    <value>键长上限</value>
  </data>
  <data name="ToKeylengthTooltip" xml:space="preserve">
    <value>评估此密钥长度后，停止分析。</value>
  </data>
  <data name="Vigenere" xml:space="preserve">
    <value>经典Vigenère</value>
  </data>
  <data name="VigenereAutokey" xml:space="preserve">
    <value>VigenèreAutokey</value>
  </data>
  <data name="CiphertextCaption" xml:space="preserve">
    <value>密文</value>
  </data>
  <data name="CiphertextTooltip" xml:space="preserve">
    <value>应该分析的密文。</value>
  </data>
  <data name="ElapsedLabel" xml:space="preserve">
    <value>经过时间：</value>
  </data>
  <data name="EndLabel" xml:space="preserve">
    <value>时间结束：</value>
  </data>
  <data name="KeyCaption" xml:space="preserve">
    <value>最佳钥匙</value>
  </data>
  <data name="KeyHeader" xml:space="preserve">
    <value>键</value>
  </data>
  <data name="KeyLengthHeader" xml:space="preserve">
    <value>键长</value>
  </data>
  <data name="KeyTooltip" xml:space="preserve">
    <value>分析过程中找到的最佳密钥。</value>
  </data>
  <data name="PlaintextCaption" xml:space="preserve">
    <value>最佳纯文本</value>
  </data>
  <data name="PlaintextTooltip" xml:space="preserve">
    <value>分析过程中发现的最佳明文。</value>
  </data>
  <data name="StartLabel" xml:space="preserve">
    <value>开始时间：</value>
  </data>
  <data name="TextHeader" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="ValueHeader" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="VigenereAlphabetCaption" xml:space="preserve">
    <value>维吉涅尔字母</value>
  </data>
  <data name="VigenereAlphabetTooltip" xml:space="preserve">
    <value>使用Vigenère字母表进行分析。</value>
  </data>
  <data name="CurrentAnalysedKeylengthLabel" xml:space="preserve">
    <value>当前分析的密钥长度：</value>
  </data>
  <data name="FastConvergeCaption" xml:space="preserve">
    <value>快速收敛</value>
  </data>
  <data name="FastConvergeTooltip" xml:space="preserve">
    <value>如果选择，爬坡算法将跳至每项改进。否则，它将跳到可能的最佳改进。</value>
  </data>
  <data name="LocalLabel" xml:space="preserve">
    <value>分析</value>
  </data>
  <data name="TopTenLabel" xml:space="preserve">
    <value>最佳名单</value>
  </data>
  <data name="SpeedLabel" xml:space="preserve">
    <value>按键/秒：</value>
  </data>
  <data name="Both" xml:space="preserve">
    <value>字母+ 4克</value>
  </data>
  <data name="CostFunction" xml:space="preserve">
    <value>成本函数</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>英语</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>德语</value>
  </data>
  <data name="Quadgrams" xml:space="preserve">
    <value>4克</value>
  </data>
  <data name="Trigrams" xml:space="preserve">
    <value>卦</value>
  </data>
  <data name="CostFunctionTooltip" xml:space="preserve">
    <value>评估假定明文的成本函数。</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>西班牙文</value>
  </data>
  <data name="ComparisonFrequencyCaption" xml:space="preserve">
    <value>止损百分比</value>
  </data>
  <data name="ComparisonFrequencyTooltip" xml:space="preserve">
    <value>如果达到给定的百分比，则在密码分析组件中停止当前分析。</value>
  </data>
  <data name="StopIfPercentReachedCaption" xml:space="preserve">
    <value>如果达到百分比，则停止当前分析</value>
  </data>
  <data name="StopIfPercentReachedTooltip" xml:space="preserve">
    <value>如果达到给定的百分比，则在密码分析组件中停止当前分析。</value>
  </data>
</root>