//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Speck.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Speck.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Electronic Code Book (ECB) ähnelt.
        /// </summary>
        internal static string BlockModeList1 {
            get {
                return ResourceManager.GetString("BlockModeList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Block Chaining (CBC) ähnelt.
        /// </summary>
        internal static string BlockModeList2 {
            get {
                return ResourceManager.GetString("BlockModeList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher Feedback (CFB) ähnelt.
        /// </summary>
        internal static string BlockModeList3 {
            get {
                return ResourceManager.GetString("BlockModeList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output Feedback (OFB) ähnelt.
        /// </summary>
        internal static string BlockModeList4 {
            get {
                return ResourceManager.GetString("BlockModeList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Block chaining mode: ähnelt.
        /// </summary>
        internal static string ChoiceOfModeOfOperation {
            get {
                return ResourceManager.GetString("ChoiceOfModeOfOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Mode of operation ähnelt.
        /// </summary>
        internal static string ChoiceOfModeOfOperationGroup {
            get {
                return ResourceManager.GetString("ChoiceOfModeOfOperationGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines the mode of operation of the cipher ähnelt.
        /// </summary>
        internal static string ChoiceOfModeOfOperationToolTip {
            get {
                return ResourceManager.GetString("ChoiceOfModeOfOperationToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Action: ähnelt.
        /// </summary>
        internal static string ChoiceOfOperatingMode {
            get {
                return ResourceManager.GetString("ChoiceOfOperatingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt / Decrypt ähnelt.
        /// </summary>
        internal static string ChoiceOfOperatingModeGroup {
            get {
                return ResourceManager.GetString("ChoiceOfOperatingModeGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Determines whether the component encrypts or decrypts the input ähnelt.
        /// </summary>
        internal static string ChoiceOfOperatingModeToolTip {
            get {
                return ResourceManager.GetString("ChoiceOfOperatingModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Padding mode: ähnelt.
        /// </summary>
        internal static string ChoiceOfPaddingMode {
            get {
                return ResourceManager.GetString("ChoiceOfPaddingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Padding ähnelt.
        /// </summary>
        internal static string ChoiceOfPaddingModeGroup {
            get {
                return ResourceManager.GetString("ChoiceOfPaddingModeGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sets the mode for padding data blocks. ähnelt.
        /// </summary>
        internal static string ChoiceOfPaddingModeToolTip {
            get {
                return ResourceManager.GetString("ChoiceOfPaddingModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameterization: ähnelt.
        /// </summary>
        internal static string ChoiceOfVariant {
            get {
                return ResourceManager.GetString("ChoiceOfVariant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Block size/key length ähnelt.
        /// </summary>
        internal static string ChoiceOfVariantGroup {
            get {
                return ResourceManager.GetString("ChoiceOfVariantGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Block size and key length of Speck can be selected here ähnelt.
        /// </summary>
        internal static string ChoiceOfVariantToolTip {
            get {
                return ResourceManager.GetString("ChoiceOfVariantToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decrypt ähnelt.
        /// </summary>
        internal static string Decrypt {
            get {
                return ResourceManager.GetString("Decrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encrypt ähnelt.
        /// </summary>
        internal static string Encrypt {
            get {
                return ResourceManager.GetString("Encrypt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initialization vector ähnelt.
        /// </summary>
        internal static string InputIVCaption {
            get {
                return ResourceManager.GetString("InputIVCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The initialization vector (IV) which is used in chaining modes. It must have the same size as the blocks. ähnelt.
        /// </summary>
        internal static string InputIVTooltip {
            get {
                return ResourceManager.GetString("InputIVTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string InputKeyCaption {
            get {
                return ResourceManager.GetString("InputKeyCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key provided must have the necessary length required by the selected parameterization of Speck. If the key is too short, processing is terminated. If the key is too long, the key is shortened. ähnelt.
        /// </summary>
        internal static string InputKeyTooltip {
            get {
                return ResourceManager.GetString("InputKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input stream ähnelt.
        /// </summary>
        internal static string InputStreamCaption {
            get {
                return ResourceManager.GetString("InputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Data to be encrypted or decrypted. ähnelt.
        /// </summary>
        internal static string InputStreamTooltip {
            get {
                return ResourceManager.GetString("InputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output stream ähnelt.
        /// </summary>
        internal static string OutputStreamCaption {
            get {
                return ResourceManager.GetString("OutputStreamCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This connector outputs encrypted or decrypted data. ähnelt.
        /// </summary>
        internal static string OutputStreamTooltip {
            get {
                return ResourceManager.GetString("OutputStreamTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        internal static string PaddingList1 {
            get {
                return ResourceManager.GetString("PaddingList1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zeros ähnelt.
        /// </summary>
        internal static string PaddingList2 {
            get {
                return ResourceManager.GetString("PaddingList2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die PKCS7 ähnelt.
        /// </summary>
        internal static string PaddingList3 {
            get {
                return ResourceManager.GetString("PaddingList3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ANSIX923 ähnelt.
        /// </summary>
        internal static string PaddingList4 {
            get {
                return ResourceManager.GetString("PaddingList4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ISO10126 ähnelt.
        /// </summary>
        internal static string PaddingList5 {
            get {
                return ResourceManager.GetString("PaddingList5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1-0 Padding ähnelt.
        /// </summary>
        internal static string PaddingList6 {
            get {
                return ResourceManager.GetString("PaddingList6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck cipher ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The mode {0} has not been implemented. ähnelt.
        /// </summary>
        internal static string Speck_blockmode_not_implemented {
            get {
                return ResourceManager.GetString("Speck_blockmode_not_implemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key length = {0} is too long. Cutting the key to length {1}. ähnelt.
        /// </summary>
        internal static string Speck_Execute_Key_too_long {
            get {
                return ResourceManager.GetString("Speck_Execute_Key_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key length = {0} is too short. Necessary key length is {1} byte. ähnelt.
        /// </summary>
        internal static string Speck_Execute_Key_too_short {
            get {
                return ResourceManager.GetString("Speck_Execute_Key_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input stream was padded with {0} ähnelt.
        /// </summary>
        internal static string Speck_Input_padded {
            get {
                return ResourceManager.GetString("Speck_Input_padded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input stream is too short. {0} bytes are missing or a padding mode must be selected. ähnelt.
        /// </summary>
        internal static string Speck_Input_too_short_multipleByte {
            get {
                return ResourceManager.GetString("Speck_Input_too_short_multipleByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The input stream is too short. {0} byte is missing or a padding mode must be selected. ähnelt.
        /// </summary>
        internal static string Speck_Input_too_short_singleByte {
            get {
                return ResourceManager.GetString("Speck_Input_too_short_singleByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given initialization vector is too long. It will be truncated. ähnelt.
        /// </summary>
        internal static string Speck_IV_too_long {
            get {
                return ResourceManager.GetString("Speck_IV_too_long", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The given initialization vector is too short. It will be padded with zeros. ähnelt.
        /// </summary>
        internal static string Speck_IV_too_short {
            get {
                return ResourceManager.GetString("Speck_IV_too_short", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No crypto function could be selected based on the settings. ähnelt.
        /// </summary>
        internal static string Speck_no_cryptofunction {
            get {
                return ResourceManager.GetString("Speck_no_cryptofunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No initialization vector was specified. This is initialized with the value 0. ähnelt.
        /// </summary>
        internal static string Speck_No_IV_was_given {
            get {
                return ResourceManager.GetString("Speck_No_IV_was_given", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck128/128 ähnelt.
        /// </summary>
        internal static string Speck128_128 {
            get {
                return ResourceManager.GetString("Speck128_128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck128/192 ähnelt.
        /// </summary>
        internal static string Speck128_192 {
            get {
                return ResourceManager.GetString("Speck128_192", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck128/256 ähnelt.
        /// </summary>
        internal static string Speck128_256 {
            get {
                return ResourceManager.GetString("Speck128_256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck32/64 ähnelt.
        /// </summary>
        internal static string Speck32_64 {
            get {
                return ResourceManager.GetString("Speck32_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck48/72 ähnelt.
        /// </summary>
        internal static string Speck48_72 {
            get {
                return ResourceManager.GetString("Speck48_72", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck48/96 ähnelt.
        /// </summary>
        internal static string Speck48_96 {
            get {
                return ResourceManager.GetString("Speck48_96", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck64/128 ähnelt.
        /// </summary>
        internal static string Speck64_128 {
            get {
                return ResourceManager.GetString("Speck64_128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck64/96 ähnelt.
        /// </summary>
        internal static string Speck64_96 {
            get {
                return ResourceManager.GetString("Speck64_96", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck96/144 ähnelt.
        /// </summary>
        internal static string Speck96_144 {
            get {
                return ResourceManager.GetString("Speck96_144", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Speck96/96 ähnelt.
        /// </summary>
        internal static string Speck96_96 {
            get {
                return ResourceManager.GetString("Speck96_96", resourceCulture);
            }
        }
    }
}
