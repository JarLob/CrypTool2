//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AvalancheVisualization.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AvalancheVisualization.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES ähnelt.
        /// </summary>
        internal static string AES {
            get {
                return ResourceManager.GetString("AES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}Final AES ciphertext derived from the initial input:{1} ähnelt.
        /// </summary>
        internal static string AESDerivedFromInit {
            get {
                return ResourceManager.GetString("AESDerivedFromInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Final AES ciphertext derived from the modified input:{0} ähnelt.
        /// </summary>
        internal static string AESDerivedFromMod {
            get {
                return ResourceManager.GetString("AESDerivedFromMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After round {0}:{1} ähnelt.
        /// </summary>
        internal static string AfterRound {
            get {
                return ResourceManager.GetString("AfterRound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die After round  ähnelt.
        /// </summary>
        internal static string AfterRoundSubtitle {
            get {
                return ResourceManager.GetString("AfterRoundSubtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avalanche Effect ähnelt.
        /// </summary>
        internal static string AvalancheEffect {
            get {
                return ResourceManager.GetString("AvalancheEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Visualization of the avalanche effect property in cryptographic algorithms and hash functions. ähnelt.
        /// </summary>
        internal static string AvalancheTooltip {
            get {
                return ResourceManager.GetString("AvalancheTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Binary ähnelt.
        /// </summary>
        internal static string Binary {
            get {
                return ResourceManager.GetString("Binary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Binary representation ähnelt.
        /// </summary>
        internal static string BinaryRep {
            get {
                return ResourceManager.GetString("BinaryRep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Binary values ähnelt.
        /// </summary>
        internal static string BinaryValues {
            get {
                return ResourceManager.GetString("BinaryValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Category ähnelt.
        /// </summary>
        internal static string Category {
            get {
                return ResourceManager.GetString("Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the desired category. ähnelt.
        /// </summary>
        internal static string CategoryTooltip {
            get {
                return ResourceManager.GetString("CategoryTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changed
        ///  input ähnelt.
        /// </summary>
        internal static string ChangedInput {
            get {
                return ResourceManager.GetString("ChangedInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modify input in order to proceed with the presentation.
        ///Message and key changes can be made in two ways: ähnelt.
        /// </summary>
        internal static string ChangesText {
            get {
                return ResourceManager.GetString("ChangesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Modify external input feed directly. ähnelt.
        /// </summary>
        internal static string ChangesTextBullet1 {
            get {
                return ResourceManager.GetString("ChangesTextBullet1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Click on single bits -- only possible after checking checkbox. ähnelt.
        /// </summary>
        internal static string ChangesTextBullet2 {
            get {
                return ResourceManager.GetString("ChangesTextBullet2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check avalanche effect after round ... ähnelt.
        /// </summary>
        internal static string CheckAvalanche {
            get {
                return ResourceManager.GetString("CheckAvalanche", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Encryption state of
        ///      initial input ähnelt.
        /// </summary>
        internal static string CipherStateInitMsg {
            get {
                return ResourceManager.GetString("CipherStateInitMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Encryption state of
        ///    modified input ähnelt.
        /// </summary>
        internal static string CipherStateModMsg {
            get {
                return ResourceManager.GetString("CipherStateModMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ciphertext (hex) ähnelt.
        /// </summary>
        internal static string Ciphertext {
            get {
                return ResourceManager.GetString("Ciphertext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Classic Ciphers ähnelt.
        /// </summary>
        internal static string ClassicCipher {
            get {
                return ResourceManager.GetString("ClassicCipher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Classic ciphers) ähnelt.
        /// </summary>
        internal static string ClassicCipherSubtitle {
            get {
                return ResourceManager.GetString("ClassicCipherSubtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clear ähnelt.
        /// </summary>
        internal static string ClearButton {
            get {
                return ResourceManager.GetString("ClearButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click on the bit(s) you&apos;d like to flip. ähnelt.
        /// </summary>
        internal static string ClickOnBits {
            get {
                return ResourceManager.GetString("ClickOnBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Continue ähnelt.
        /// </summary>
        internal static string ContinueButton {
            get {
                return ResourceManager.GetString("ContinueButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decimal ähnelt.
        /// </summary>
        internal static string Decimal {
            get {
                return ResourceManager.GetString("Decimal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DES ähnelt.
        /// </summary>
        internal static string DES {
            get {
                return ResourceManager.GetString("DES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}Final DES ciphertext derived from the initial input:{1} ähnelt.
        /// </summary>
        internal static string DESderivedFromInit {
            get {
                return ResourceManager.GetString("DESderivedFromInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Final DES ciphertext derived from the modified input:{0} ähnelt.
        /// </summary>
        internal static string DESderivedFromMod {
            get {
                return ResourceManager.GetString("DESderivedFromMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display info. in: ähnelt.
        /// </summary>
        internal static string DisplayInfo {
            get {
                return ResourceManager.GetString("DisplayInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display information in: ähnelt.
        /// </summary>
        internal static string DisplayInformation {
            get {
                return ResourceManager.GetString("DisplayInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Done ähnelt.
        /// </summary>
        internal static string DoneButton {
            get {
                return ResourceManager.GetString("DoneButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption of init. message (bin) ähnelt.
        /// </summary>
        internal static string EncryptionInit {
            get {
                return ResourceManager.GetString("EncryptionInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption of initial message ähnelt.
        /// </summary>
        internal static string EncryptionInitialMsg {
            get {
                return ResourceManager.GetString("EncryptionInitialMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption of initial input:{0} ähnelt.
        /// </summary>
        internal static string EncryptionInitialMsgOut {
            get {
                return ResourceManager.GetString("EncryptionInitialMsgOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption of mod. message (bin) ähnelt.
        /// </summary>
        internal static string EncryptionMod {
            get {
                return ResourceManager.GetString("EncryptionMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption of modified input:{0} ähnelt.
        /// </summary>
        internal static string EncryptionModifiedlMsgOut {
            get {
                return ResourceManager.GetString("EncryptionModifiedlMsgOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption of modified message ähnelt.
        /// </summary>
        internal static string EncryptionModifiedMsg {
            get {
                return ResourceManager.GetString("EncryptionModifiedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End of presentation! ähnelt.
        /// </summary>
        internal static string End {
            get {
                return ResourceManager.GetString("End", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input changes can be done by directly modifying the external input feed. ähnelt.
        /// </summary>
        internal static string ExplanationText {
            get {
                return ResourceManager.GetString("ExplanationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flipped bits ähnelt.
        /// </summary>
        internal static string FlippedBits {
            get {
                return ResourceManager.GetString("FlippedBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die   Flipped bits ähnelt.
        /// </summary>
        internal static string FlippedBits_ {
            get {
                return ResourceManager.GetString("FlippedBits_", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flipped bytes ähnelt.
        /// </summary>
        internal static string FlippedBytes {
            get {
                return ResourceManager.GetString("FlippedBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Avalanche effect ähnelt.
        /// </summary>
        internal static string GroupName {
            get {
                return ResourceManager.GetString("GroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hash Functions ähnelt.
        /// </summary>
        internal static string HashFunction {
            get {
                return ResourceManager.GetString("HashFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial hash value ähnelt.
        /// </summary>
        internal static string HashFunctionInit {
            get {
                return ResourceManager.GetString("HashFunctionInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial hash value (binary) ähnelt.
        /// </summary>
        internal static string HashFunctionInitBin {
            get {
                return ResourceManager.GetString("HashFunctionInitBin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified hash value ähnelt.
        /// </summary>
        internal static string HashFunctionMod {
            get {
                return ResourceManager.GetString("HashFunctionMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified hash value (binary) ähnelt.
        /// </summary>
        internal static string HashFunctionModBin {
            get {
                return ResourceManager.GetString("HashFunctionModBin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Hash functions) ähnelt.
        /// </summary>
        internal static string HashFunctionSubtitle {
            get {
                return ResourceManager.GetString("HashFunctionSubtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hexadecimal ähnelt.
        /// </summary>
        internal static string Hex {
            get {
                return ResourceManager.GetString("Hex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VISUALIZATION OF THE AVALANCHE EFFECT ähnelt.
        /// </summary>
        internal static string HomeTitle {
            get {
                return ResourceManager.GetString("HomeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial key ähnelt.
        /// </summary>
        internal static string Initial_Key {
            get {
                return ResourceManager.GetString("Initial_Key", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial message ähnelt.
        /// </summary>
        internal static string Initial_Message {
            get {
                return ResourceManager.GetString("Initial_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial hash value:{0} ähnelt.
        /// </summary>
        internal static string InitialHashOutput {
            get {
                return ResourceManager.GetString("InitialHashOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial key: ähnelt.
        /// </summary>
        internal static string InitialKeyColon {
            get {
                return ResourceManager.GetString("InitialKeyColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial key (64 bits): ähnelt.
        /// </summary>
        internal static string InitialKeyDES {
            get {
                return ResourceManager.GetString("InitialKeyDES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial key (in hex) ähnelt.
        /// </summary>
        internal static string InitialKeyHex {
            get {
                return ResourceManager.GetString("InitialKeyHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial message: ähnelt.
        /// </summary>
        internal static string InitialMessageColon {
            get {
                return ResourceManager.GetString("InitialMessageColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial message (64 bits): ähnelt.
        /// </summary>
        internal static string InitialMessageDES {
            get {
                return ResourceManager.GetString("InitialMessageDES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial message (in hex) ähnelt.
        /// </summary>
        internal static string InitialMessageHex {
            get {
                return ResourceManager.GetString("InitialMessageHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die   Initial msg ähnelt.
        /// </summary>
        internal static string InitialMsg {
            get {
                return ResourceManager.GetString("InitialMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input Data ähnelt.
        /// </summary>
        internal static string InputData {
            get {
                return ResourceManager.GetString("InputData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key ähnelt.
        /// </summary>
        internal static string InputKey {
            get {
                return ResourceManager.GetString("InputKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter key ähnelt.
        /// </summary>
        internal static string InputKeyTooltip {
            get {
                return ResourceManager.GetString("InputKeyTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message/ Hash value ähnelt.
        /// </summary>
        internal static string InputMessage {
            get {
                return ResourceManager.GetString("InputMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter message or hash value ähnelt.
        /// </summary>
        internal static string InputMessageTooltip {
            get {
                return ResourceManager.GetString("InputMessageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Input Data AES- ähnelt.
        /// </summary>
        internal static string InputTitleAES {
            get {
                return ResourceManager.GetString("InputTitleAES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change Input Data DES ähnelt.
        /// </summary>
        internal static string InputTitleDES {
            get {
                return ResourceManager.GetString("InputTitleDES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instructions ähnelt.
        /// </summary>
        internal static string Instructions {
            get {
                return ResourceManager.GetString("Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prepared methods: ähnelt.
        /// </summary>
        internal static string InstructionsPrep {
            get {
                return ResourceManager.GetString("InstructionsPrep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Use key and message entries. ähnelt.
        /// </summary>
        internal static string InstructionsPrepBullet1 {
            get {
                return ResourceManager.GetString("InstructionsPrepBullet1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Provide key in hex format:
        /// 16, 24, or 32 bytes (AES)   --    8 bytes (DES). ähnelt.
        /// </summary>
        internal static string InstructionsPrepBullet2 {
            get {
                return ResourceManager.GetString("InstructionsPrepBullet2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Input data initially shown in:
        /// Hex and binary format (AES)    --   binary format (DES). ähnelt.
        /// </summary>
        internal static string InstructionsPrepBullet3 {
            get {
                return ResourceManager.GetString("InstructionsPrepBullet3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Modify initial input. ähnelt.
        /// </summary>
        internal static string InstructionsPrepBullet4 {
            get {
                return ResourceManager.GetString("InstructionsPrepBullet4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Check avalanche effect. ähnelt.
        /// </summary>
        internal static string InstructionsPrepBullet5 {
            get {
                return ResourceManager.GetString("InstructionsPrepBullet5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Methods in the category &quot;Prepared methods&quot; are implemented within the Avalanche plugin. So the plugin can show the changes not only for the result of the cryptographic function (last step), but also for all intermediate steps. ähnelt.
        /// </summary>
        internal static string InstructionsPrepDescription {
            get {
                return ResourceManager.GetString("InstructionsPrepDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  AES, DES ähnelt.
        /// </summary>
        internal static string InstructionsPrepSubtitle {
            get {
                return ResourceManager.GetString("InstructionsPrepSubtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Instructions ähnelt.
        /// </summary>
        internal static string InstructionsTitle {
            get {
                return ResourceManager.GetString("InstructionsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unprepared methods: ähnelt.
        /// </summary>
        internal static string InstructionsUnprep {
            get {
                return ResourceManager.GetString("InstructionsUnprep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Methods in the category &quot;Unprepared methods&quot; have no extra implementation within the Avalanche plugin. So the plugin evaluates the Avalanche effect only by comparing the initial and the changed external input. This is very generic. Here only the message entry is used. ähnelt.
        /// </summary>
        internal static string InstructionsUnprepBullet1 {
            get {
                return ResourceManager.GetString("InstructionsUnprepBullet1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Input data initially shown in: 
        /// hex format (hash functions and modern ciphers)  --  text format (classic ciphers).  ähnelt.
        /// </summary>
        internal static string InstructionsUnprepBullet2 {
            get {
                return ResourceManager.GetString("InstructionsUnprepBullet2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Modify initial input (for classic and modern ciphers, the length of the message to be evaluated by the Avalanche plugin may not be changed). ähnelt.
        /// </summary>
        internal static string InstructionsUnprepBullet3 {
            get {
                return ResourceManager.GetString("InstructionsUnprepBullet3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General hash functions, classic ciphers, modern ciphers ähnelt.
        /// </summary>
        internal static string InstructionsUnprepSubtitle {
            get {
                return ResourceManager.GetString("InstructionsUnprepSubtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A good avalanche effect is achieved when a small change in the input results in a significant change of the encrypted text.
        ///You can select in the settings the category of the algorithm whose avalanche effect you would like to test. ähnelt.
        /// </summary>
        internal static string Intro {
            get {
                return ResourceManager.GetString("Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key length ähnelt.
        /// </summary>
        internal static string KeyLength {
            get {
                return ResourceManager.GetString("KeyLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key must have 16 bytes. ähnelt.
        /// </summary>
        internal static string KeyLength128 {
            get {
                return ResourceManager.GetString("KeyLength128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key must have 24 bytes. ähnelt.
        /// </summary>
        internal static string KeyLength192 {
            get {
                return ResourceManager.GetString("KeyLength192", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key must have 32 bytes. ähnelt.
        /// </summary>
        internal static string KeyLength256 {
            get {
                return ResourceManager.GetString("KeyLength256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key must have 8 bytes. ähnelt.
        /// </summary>
        internal static string KeyLengthDES {
            get {
                return ResourceManager.GetString("KeyLengthDES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the key length for AES. ähnelt.
        /// </summary>
        internal static string KeyLengthTooltip {
            get {
                return ResourceManager.GetString("KeyLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Left half ähnelt.
        /// </summary>
        internal static string LeftHalf {
            get {
                return ResourceManager.GetString("LeftHalf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modern Ciphers ähnelt.
        /// </summary>
        internal static string ModernCipher {
            get {
                return ResourceManager.GetString("ModernCipher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Modern ciphers) ähnelt.
        /// </summary>
        internal static string ModernCipherSubtitle {
            get {
                return ResourceManager.GetString("ModernCipherSubtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified hash value:{0} ähnelt.
        /// </summary>
        internal static string ModHashOutput {
            get {
                return ResourceManager.GetString("ModHashOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified key ähnelt.
        /// </summary>
        internal static string ModifiedKey {
            get {
                return ResourceManager.GetString("ModifiedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified message ähnelt.
        /// </summary>
        internal static string ModifiedMessage {
            get {
                return ResourceManager.GetString("ModifiedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die   Modified msg ähnelt.
        /// </summary>
        internal static string ModifiedMsg {
            get {
                return ResourceManager.GetString("ModifiedMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified key: ähnelt.
        /// </summary>
        internal static string ModKeyColon {
            get {
                return ResourceManager.GetString("ModKeyColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified message: ähnelt.
        /// </summary>
        internal static string ModMessageColon {
            get {
                return ResourceManager.GetString("ModMessageColon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No changes occurred at all! ähnelt.
        /// </summary>
        internal static string NoChanges {
            get {
                return ResourceManager.GetString("NoChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changes occurred only on the left half of the cipher! ähnelt.
        /// </summary>
        internal static string OnlyLeft {
            get {
                return ResourceManager.GetString("OnlyLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changes occurred only on the right half of the cipher! ähnelt.
        /// </summary>
        internal static string OnlyRight {
            get {
                return ResourceManager.GetString("OnlyRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output ähnelt.
        /// </summary>
        internal static string Output {
            get {
                return ResourceManager.GetString("Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial AES key:{0} ähnelt.
        /// </summary>
        internal static string OutputInitialAESKey {
            get {
                return ResourceManager.GetString("OutputInitialAESKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial AES message:{0} ähnelt.
        /// </summary>
        internal static string OutputInitialAESMsg {
            get {
                return ResourceManager.GetString("OutputInitialAESMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial DES key:{0} ähnelt.
        /// </summary>
        internal static string OutputInitialDESKey {
            get {
                return ResourceManager.GetString("OutputInitialDESKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initial DES message:{0} ähnelt.
        /// </summary>
        internal static string OutputInitialDESMsg {
            get {
                return ResourceManager.GetString("OutputInitialDESMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified AES key:{0} ähnelt.
        /// </summary>
        internal static string OutputModifiedAESKey {
            get {
                return ResourceManager.GetString("OutputModifiedAESKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified AES message:{0} ähnelt.
        /// </summary>
        internal static string OutputModifiedAESMsg {
            get {
                return ResourceManager.GetString("OutputModifiedAESMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified DES key:{0} ähnelt.
        /// </summary>
        internal static string OutputModifiedDESKey {
            get {
                return ResourceManager.GetString("OutputModifiedDESKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified DES message:{0} ähnelt.
        /// </summary>
        internal static string OutputModifiedDESMsg {
            get {
                return ResourceManager.GetString("OutputModifiedDESMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input not modified. ähnelt.
        /// </summary>
        internal static string OutputNotMod {
            get {
                return ResourceManager.GetString("OutputNotMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES key not modified. ähnelt.
        /// </summary>
        internal static string OutputNotModAESKey {
            get {
                return ResourceManager.GetString("OutputNotModAESKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AES message not modified. ähnelt.
        /// </summary>
        internal static string OutputNotModAESMsg {
            get {
                return ResourceManager.GetString("OutputNotModAESMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DES key not modified. ähnelt.
        /// </summary>
        internal static string OutputNotModDESKey {
            get {
                return ResourceManager.GetString("OutputNotModDESKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DES message not modified. ähnelt.
        /// </summary>
        internal static string OutputNotModDESMsg {
            get {
                return ResourceManager.GetString("OutputNotModDESMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flipped bits: {0}. Avalanche effect: {1}%{2} ähnelt.
        /// </summary>
        internal static string OutputStats1 {
            get {
                return ResourceManager.GetString("OutputStats1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Length of longest identical bit sequence: {0}. Offset: {1}.{2} ähnelt.
        /// </summary>
        internal static string OutputStats2 {
            get {
                return ResourceManager.GetString("OutputStats2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Length of longest flipped bit sequence: {0}. Offset: {1}.{2} ähnelt.
        /// </summary>
        internal static string OutputStats3 {
            get {
                return ResourceManager.GetString("OutputStats3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flipped bytes: {0}. Avalanche effect: {1}% {2} ähnelt.
        /// </summary>
        internal static string OutputStatsClassic1 {
            get {
                return ResourceManager.GetString("OutputStatsClassic1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Length of longest identical byte sequence: {0}. Offset {1}.{2} ähnelt.
        /// </summary>
        internal static string OutputStatsClassic2 {
            get {
                return ResourceManager.GetString("OutputStatsClassic2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Length of longest flipped byte sequence: {0}. Offset {1}.{2} ähnelt.
        /// </summary>
        internal static string OutputStatsClassic3 {
            get {
                return ResourceManager.GetString("OutputStatsClassic3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Output ähnelt.
        /// </summary>
        internal static string OutputStream {
            get {
                return ResourceManager.GetString("OutputStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generated statistical data  ähnelt.
        /// </summary>
        internal static string OutputStreamDescription {
            get {
                return ResourceManager.GetString("OutputStreamDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generated data ähnelt.
        /// </summary>
        internal static string OutputTooltip {
            get {
                return ResourceManager.GetString("OutputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption Results after All Rounds of AES-128 ähnelt.
        /// </summary>
        internal static string OverviewAES128 {
            get {
                return ResourceManager.GetString("OverviewAES128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption Results after All Rounds of AES-192 ähnelt.
        /// </summary>
        internal static string OverviewAES192 {
            get {
                return ResourceManager.GetString("OverviewAES192", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption Results after All Rounds of AES-256 ähnelt.
        /// </summary>
        internal static string OverviewAES256 {
            get {
                return ResourceManager.GetString("OverviewAES256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  General 
        ///Overview ähnelt.
        /// </summary>
        internal static string OverviewButton {
            get {
                return ResourceManager.GetString("OverviewButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encryption Results after All DES Rounds ähnelt.
        /// </summary>
        internal static string OverviewDES {
            get {
                return ResourceManager.GetString("OverviewDES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % changed ähnelt.
        /// </summary>
        internal static string Percentage {
            get {
                return ResourceManager.GetString("Percentage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die % of flipped bits ähnelt.
        /// </summary>
        internal static string PercentageFlipped {
            get {
                return ResourceManager.GetString("PercentageFlipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avalanche Visualization ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Prepared methods ähnelt.
        /// </summary>
        internal static string PreparedCaption {
            get {
                return ResourceManager.GetString("PreparedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Right half ähnelt.
        /// </summary>
        internal static string RightHalf {
            get {
                return ResourceManager.GetString("RightHalf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round ähnelt.
        /// </summary>
        internal static string Round {
            get {
                return ResourceManager.GetString("Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selection ähnelt.
        /// </summary>
        internal static string Selection {
            get {
                return ResourceManager.GetString("Selection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select the method whose avalanche effect you would like to test. ähnelt.
        /// </summary>
        internal static string SelectionTooltip {
            get {
                return ResourceManager.GetString("SelectionTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Changed Input Data AES- ähnelt.
        /// </summary>
        internal static string ShowChangeTitleAES {
            get {
                return ResourceManager.GetString("ShowChangeTitleAES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show Changed Input Data DES ähnelt.
        /// </summary>
        internal static string ShowChangeTitleDES {
            get {
                return ResourceManager.GetString("ShowChangeTitleDES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable single bit changes ähnelt.
        /// </summary>
        internal static string SingleBitCheckBox {
            get {
                return ResourceManager.GetString("SingleBitCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Skip instructions ähnelt.
        /// </summary>
        internal static string SkipInstructions {
            get {
                return ResourceManager.GetString("SkipInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  bit flipped (out of {0}). Avalanche effect of {1}% ähnelt.
        /// </summary>
        internal static string StatsBullet1 {
            get {
                return ResourceManager.GetString("StatsBullet1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  bits flipped (out of {0}). Avalanche effect of {1}% ähnelt.
        /// </summary>
        internal static string StatsBullet1_Plural {
            get {
                return ResourceManager.GetString("StatsBullet1_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Length of longest identical bit sequence: {0}. Offset {1}. ähnelt.
        /// </summary>
        internal static string StatsBullet2 {
            get {
                return ResourceManager.GetString("StatsBullet2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Length of longest flipped bit sequence: {0}. Offset {1}. ähnelt.
        /// </summary>
        internal static string StatsBullet3 {
            get {
                return ResourceManager.GetString("StatsBullet3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Average number of differing bits per byte: {0} ähnelt.
        /// </summary>
        internal static string StatsBullet4 {
            get {
                return ResourceManager.GetString("StatsBullet4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  byte flipped (out of {0}). Avalanche effect of {1}% ähnelt.
        /// </summary>
        internal static string StatsClassicBullet1 {
            get {
                return ResourceManager.GetString("StatsClassicBullet1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  bytes flipped (out of {0}). Avalanche effect of {1}% ähnelt.
        /// </summary>
        internal static string StatsClassicBullet1_Plural {
            get {
                return ResourceManager.GetString("StatsClassicBullet1_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Length of longest identical byte sequence: {0}. Offset {1}. ähnelt.
        /// </summary>
        internal static string StatsClassicBullet2 {
            get {
                return ResourceManager.GetString("StatsClassicBullet2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  Length of longest flipped byte sequence: {0}. Offset {1}. ähnelt.
        /// </summary>
        internal static string StatsClassicBullet3 {
            get {
                return ResourceManager.GetString("StatsClassicBullet3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        internal static string Text {
            get {
                return ResourceManager.GetString("Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avalanche Effect AES-128 ähnelt.
        /// </summary>
        internal static string Title_AES128 {
            get {
                return ResourceManager.GetString("Title_AES128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avalanche Effect AES-192 ähnelt.
        /// </summary>
        internal static string Title_AES192 {
            get {
                return ResourceManager.GetString("Title_AES192", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avalanche Effect AES-256 ähnelt.
        /// </summary>
        internal static string Title_AES256 {
            get {
                return ResourceManager.GetString("Title_AES256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Avalanche Effect DES ähnelt.
        /// </summary>
        internal static string Title_DES {
            get {
                return ResourceManager.GetString("Title_DES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unchanged bits ähnelt.
        /// </summary>
        internal static string UnchangedBits {
            get {
                return ResourceManager.GetString("UnchangedBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unchanged bytes ähnelt.
        /// </summary>
        internal static string UnchangedBytes {
            get {
                return ResourceManager.GetString("UnchangedBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die University of Mannheim ähnelt.
        /// </summary>
        internal static string University {
            get {
                return ResourceManager.GetString("University", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unprepared methods ähnelt.
        /// </summary>
        internal static string UnpreparedCaption {
            get {
                return ResourceManager.GetString("UnpreparedCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Modified message ({0} characters) must be as long as the initial message ({1} characters). ähnelt.
        /// </summary>
        internal static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
    }
}
