<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PluginCaption" xml:space="preserve">
    <value>Vigenère Analyser</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>Analysiert einen mit dem Vigenère-Verfahren verschlüsselten Geheimtext und gibt das verwendete Schlüsselwort aus.</value>
  </data>
  <data name="FriedmanInputCaption" xml:space="preserve">
    <value>Fließkommazahl mit doppelter Genauigkeit</value>
  </data>
  <data name="FriedmanInputTooltip" xml:space="preserve">
    <value>Die vom Friedman-Test vorgeschlagene Schlüssellänge.</value>
  </data>
  <data name="StringInputCaption" xml:space="preserve">
    <value>Text-Eingabe</value>
  </data>
  <data name="StringInputTooltip" xml:space="preserve">
    <value>Der mit dem Vigenère-Verfahren verschlüsselte Geheimtext.</value>
  </data>
  <data name="KasiskiInputCaption" xml:space="preserve">
    <value>Integer-Array</value>
  </data>
  <data name="KasiskiInputTooltip" xml:space="preserve">
    <value>Integer-Array mit den vom Kasiski-Test vorgeschlagenen Schlüssellängen.</value>
  </data>
  <data name="KeywordOutputCaption" xml:space="preserve">
    <value>Integer-Array</value>
  </data>
  <data name="KeywordOutputTooltip" xml:space="preserve">
    <value>Schlüsselwort (dargestellt als Integer-Array).</value>
  </data>
  <data name="FrequencyStatsCaption" xml:space="preserve">
    <value>Zeichenkette</value>
  </data>
  <data name="FrequencyStatsTooltip" xml:space="preserve">
    <value>Bitte nur mit Textausgang der Häufigkeitsanalyse verbinden.</value>
  </data>
  <data name="FrequencyOutputCaption" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="FrequencyOutputTooltip" xml:space="preserve">
    <value>Der in Spalten aufgeteilte Geheimtext. Die Anzahl der Spalten entspricht der Schlüssellänge.</value>
  </data>
  <data name="StringOutputCaption" xml:space="preserve">
    <value>Text-Ausgabe</value>
  </data>
  <data name="StringOutputTooltip" xml:space="preserve">
    <value>Schlüsselwort, mit dem der eingegebene Geheimtext verschlüsselt wurde. </value>
  </data>
  <data name="ColumnAnalysisCaption" xml:space="preserve">
    <value>Methode der Spaltenanalyse</value>
  </data>
  <data name="ColumnAnalysisTooltip" xml:space="preserve">
    <value>Wählen Sie, mit welcher Methode die Spalten des Geheimtextes analysiert werden sollen.</value>
  </data>
  <data name="EICCaption" xml:space="preserve">
    <value>Erwarteter Koinzidenzindex</value>
  </data>
  <data name="EICTooltip" xml:space="preserve">
    <value>Erwarteten Koinzidenzindex anpassen</value>
  </data>
  <data name="ELFCaption" xml:space="preserve">
    <value>Erwartete Buchstabenhäufigkeit einer Sprache</value>
  </data>
  <data name="ELFTooltip" xml:space="preserve">
    <value>Wählen Sie die Null-Hypothese für die Chi-Square-Statistik</value>
  </data>
  <data name="InternalKeyLengthAnalysisCaption" xml:space="preserve">
    <value>Methode der Schlüssellängen-Analyse</value>
  </data>
  <data name="InternalKeyLengthAnalysisTooltip" xml:space="preserve">
    <value>Wählen Sie die interne oder die externe Analysemethode für die Schlüssellänge.</value>
  </data>
  <data name="Max_KeylengthCaption" xml:space="preserve">
    <value>Maximale Schlüssellänge</value>
  </data>
  <data name="Max_KeylengthTooltip" xml:space="preserve">
    <value>Bitte die maximale Schlüssellänge für die 'Sampled Index of coincidence'-Methode eingeben; default = 15</value>
  </data>
  <data name="ColumnAnalysisList1" xml:space="preserve">
    <value>Verwende häufigsten Buchstaben</value>
  </data>
  <data name="ColumnAnalysisList2" xml:space="preserve">
    <value>Verwende Summe der Quadrate</value>
  </data>
  <data name="ELFList1" xml:space="preserve">
    <value>englisch</value>
  </data>
  <data name="ELFList2" xml:space="preserve">
    <value>deutsch</value>
  </data>
  <data name="ELFList3" xml:space="preserve">
    <value>französisch</value>
  </data>
  <data name="ELFList4" xml:space="preserve">
    <value>spanisch</value>
  </data>
  <data name="ELFList5" xml:space="preserve">
    <value>italienisch</value>
  </data>
  <data name="ELFList6" xml:space="preserve">
    <value>portugiesisch</value>
  </data>
</root>