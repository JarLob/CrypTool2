<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OperationCaption" xml:space="preserve">
    <value>运作方式</value>
  </data>
  <data name="OperationTooltip" xml:space="preserve">
    <value>更改此ArrayOperation的操作</value>
  </data>
  <data name="OutputArrayCaption" xml:space="preserve">
    <value>输出数组</value>
  </data>
  <data name="OutputArrayTooltip" xml:space="preserve">
    <value>通过此操作创建的输出数组</value>
  </data>
  <data name="OutputValueCaption" xml:space="preserve">
    <value>输出值</value>
  </data>
  <data name="OutputValueTooltip" xml:space="preserve">
    <value>该操作的输出值</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>阵列运算</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>修改数组的操作</value>
  </data>
  <data name="Array1Caption" xml:space="preserve">
    <value>阵列一</value>
  </data>
  <data name="Array1Tooltip" xml:space="preserve">
    <value>第一个输入数组</value>
  </data>
  <data name="Array2Caption" xml:space="preserve">
    <value>数组二</value>
  </data>
  <data name="Array2Tooltip" xml:space="preserve">
    <value>第二个输入数组</value>
  </data>
  <data name="Array3Caption" xml:space="preserve">
    <value>阵列三</value>
  </data>
  <data name="Array3Tooltip" xml:space="preserve">
    <value>第三输入数组</value>
  </data>
  <data name="Value1Caption" xml:space="preserve">
    <value>整数一</value>
  </data>
  <data name="Value1Tooltip" xml:space="preserve">
    <value>第一个数值</value>
  </data>
  <data name="Value2Caption" xml:space="preserve">
    <value>整数二</value>
  </data>
  <data name="Value2Tooltip" xml:space="preserve">
    <value>第二数值</value>
  </data>
  <data name="Object1Caption" xml:space="preserve">
    <value>对象一</value>
  </data>
  <data name="Object1Tooltip" xml:space="preserve">
    <value>任意值一</value>
  </data>
  <data name="Object2Caption" xml:space="preserve">
    <value>对象二</value>
  </data>
  <data name="Object2Tooltip" xml:space="preserve">
    <value>任意值二</value>
  </data>
  <data name="ArrayOperations_Execute_Could_not_execute_operation___0______1_" xml:space="preserve">
    <value>无法执行操作&amp;#39;{0}&amp;#39;：{1}</value>
  </data>
  <data name="OperationList1" xml:space="preserve">
    <value>联盟</value>
  </data>
  <data name="OperationList2" xml:space="preserve">
    <value>集补数（差）</value>
  </data>
  <data name="OperationList3" xml:space="preserve">
    <value>集合相交</value>
  </data>
  <data name="OperationList4" xml:space="preserve">
    <value>连接</value>
  </data>
  <data name="OperationList5" xml:space="preserve">
    <value>等于</value>
  </data>
  <data name="OperationList6" xml:space="preserve">
    <value>独特</value>
  </data>
  <data name="OperationList7" xml:space="preserve">
    <value>长度</value>
  </data>
  <data name="OperationList8" xml:space="preserve">
    <value>更换</value>
  </data>
  <data name="OperationList9" xml:space="preserve">
    <value>升序）</value>
  </data>
  <data name="OperationList10" xml:space="preserve">
    <value>排序（降序）</value>
  </data>
  <data name="OperationList11" xml:space="preserve">
    <value>逆转</value>
  </data>
  <data name="OperationList12" xml:space="preserve">
    <value>子阵列</value>
  </data>
  <data name="OperationList13" xml:space="preserve">
    <value>指数</value>
  </data>
  <data name="OperationList14" xml:space="preserve">
    <value>包含</value>
  </data>
  <data name="Arrayarg1" xml:space="preserve">
    <value>数组＃1</value>
  </data>
  <data name="Arrayarg2" xml:space="preserve">
    <value>数组＃2</value>
  </data>
  <data name="Arrayarg3" xml:space="preserve">
    <value>数组＃3</value>
  </data>
  <data name="NumericArg1" xml:space="preserve">
    <value>数值＃1</value>
  </data>
  <data name="NumericArg2" xml:space="preserve">
    <value>数值＃2</value>
  </data>
  <data name="InputNotSetError" xml:space="preserve">
    <value>未设置输入“ {0}”</value>
  </data>
  <data name="InputNotValidError" xml:space="preserve">
    <value>输入“ {0}”无效：{1}</value>
  </data>
  <data name="IndexError" xml:space="preserve">
    <value>值{0}不在允许范围内（{1} .. {2}）</value>
  </data>
  <data name="ArrayNotSetError" xml:space="preserve">
    <value>没有为{0}提供数组</value>
  </data>
</root>