<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WatermarkCreatorSettings_ModificationType_ExtractText" xml:space="preserve">
    <value>从图像中提取隐藏的水印</value>
  </data>
  <data name="WatermarkCreatorSettings_ModificationType_EmbedInvisibleText" xml:space="preserve">
    <value>在图像中嵌入不可见的水印</value>
  </data>
  <data name="WatermarkCreatorSettings_ModificationType_EmbedText" xml:space="preserve">
    <value>将可见文本嵌入图像</value>
    <comment>E,g, copyright notice</comment>
  </data>
  <data name="ImageCaption" xml:space="preserve">
    <value>图片</value>
  </data>
  <data name="ImageTooltip" xml:space="preserve">
    <value>用于嵌入/提取数字水印的图像。</value>
  </data>
  <data name="PluginCaption" xml:space="preserve">
    <value>水印创作者</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>写入或提取图像的数字水印</value>
  </data>
  <data name="ModificationTypeDes" xml:space="preserve">
    <value>选择应对输入图像应用哪种修改</value>
  </data>
  <data name="BotLoc" xml:space="preserve">
    <value>在图像底部找到水印</value>
  </data>
  <data name="BoxSizeDes" xml:space="preserve">
    <value>框越大，纠错程度越高，水印越牢固，但可以存储的数据更少。</value>
  </data>
  <data name="BoxSizeCap" xml:space="preserve">
    <value>箱体尺寸</value>
  </data>
  <data name="WatermarkLocationDes" xml:space="preserve">
    <value>选择将水印放置在图像上的位置。</value>
  </data>
  <data name="OpacityDes" xml:space="preserve">
    <value>水印的不透明度。更高的值意味着更多的不透明度和更强的水印，尽管它也会变得更加可见。最大值为1000。建议使用大于或等于500的值以获得良好的效果。</value>
  </data>
  <data name="ErrorCorrectionDes" xml:space="preserve">
    <value>设置用于纠错的字节数</value>
  </data>
  <data name="ErrorCorrectionCap" xml:space="preserve">
    <value>错误修正</value>
  </data>
  <data name="FontTypeCap" xml:space="preserve">
    <value>字体类型</value>
  </data>
  <data name="ModificationTypeCap" xml:space="preserve">
    <value>修改类型</value>
  </data>
  <data name="OpacityCap" xml:space="preserve">
    <value>水印的不透明度</value>
  </data>
  <data name="OtherLoc" xml:space="preserve">
    <value>选择一个自定义位置</value>
  </data>
  <data name="Seed" xml:space="preserve">
    <value>设置一些随机数作为种子</value>
  </data>
  <data name="Seed1" xml:space="preserve">
    <value>种子1</value>
  </data>
  <data name="Seed2" xml:space="preserve">
    <value>种子2</value>
  </data>
  <data name="TextSizeMaxDes" xml:space="preserve">
    <value>嵌入水印时要使用的文本的最大大小。在内部，将选择将整个文本放在一行中的最大可能大小。</value>
    <comment>Size will be adjusted dynamically to fit the watermark into the image. You just need to define the maximum size.</comment>
  </data>
  <data name="TextSizeMaxCap" xml:space="preserve">
    <value>最大文字大小</value>
  </data>
  <data name="TopLoc" xml:space="preserve">
    <value>定位在图片的顶部</value>
  </data>
  <data name="WatermarkLocationCap" xml:space="preserve">
    <value>水印的位置</value>
  </data>
  <data name="AdvancedModeCap" xml:space="preserve">
    <value>使用进阶模式</value>
  </data>
  <data name="AdvancedModeDes" xml:space="preserve">
    <value>您是否要使用高级模式，该模式可以提供更多由用户设置的设置？</value>
  </data>
  <data name="FontTypeDes" xml:space="preserve">
    <value>用于水印的字体类型</value>
  </data>
  <data name="LocationPercentageCap" xml:space="preserve">
    <value>水印的自定义位置</value>
  </data>
  <data name="LocationPercentageDes" xml:space="preserve">
    <value>允许手动设置水印的位置。将滑块向右移得越远，水印将越往顶部移动。</value>
  </data>
  <data name="NoPictureError" xml:space="preserve">
    <value>请使用文件输入组件提供有效的图像作为水印的载体</value>
  </data>
  <data name="NoTextError" xml:space="preserve">
    <value>请使用文本输入组件提供一个字符串，以将其作为水印添加到图像中</value>
  </data>
  <data name="TextCaption" xml:space="preserve">
    <value>内嵌文字</value>
  </data>
  <data name="TextTooltip" xml:space="preserve">
    <value>提取图像中嵌入的文本</value>
  </data>
  <data name="WatermarkCaption" xml:space="preserve">
    <value>水印</value>
  </data>
  <data name="WatermarkImageCaption" xml:space="preserve">
    <value>带水印的图像</value>
  </data>
  <data name="WatermarkImageTooltip" xml:space="preserve">
    <value>带有文本作为水印添加到图像的图像</value>
  </data>
  <data name="WatermarkTooltip" xml:space="preserve">
    <value>要作为水印添加到图像的文本</value>
  </data>
  <data name="AdvancedModeList1" xml:space="preserve">
    <value>没有</value>
  </data>
  <data name="AdvancedModeList2" xml:space="preserve">
    <value>是</value>
  </data>
</root>