<?xml version="1.0" encoding="utf-8" ?>

<documentation>
  <language culture="en"/>

  <introduction lang="en">
    <!-- Goals of the chapter:
       - Beschreibung des kryptographischen Verfahrens 
       - Beschreibung der Geschichte des Verfahrens
       - Keine komplette mathematische Beschreibung
       - Einsatzfelder des Verfahrens
       - Zu welcher Klasse von Verfahren gehört das Verfahren
       - (Möglichst abstrakte) Beschreibung der Ein- und Ausgaben
     -->

    ISAP-CS is a perfectly binding and computationally hiding bit commitment
    scheme by Frederik Armknecht, Carsten Elsner und Martin
    Schmidt. The scheme has been developed as a proof of concept for the usage
    of analytic number theory, especially diophantine approximation, for
    cryptographic design. Its design and its security proofs are based on the
    theory of the 
    <i>inhomogeneous simultaneous diophantine
    approximation problem</i> (ISAP):
    <newline/><newline/>
    Find $p_i (i=1,...,n)$ and $q$ satisfying
    <![CDATA[$$| \alpha_i - p_i/q - \eta_i | < \epsilon $$]]>
    for given $\alpha_i$, $\eta_i$ with $(i=1,...,n)$ and $\epsilon$.
    <newline/>
    <newline/>
    Roughly speaking, the basic idea is as follows: If one wants to commit to
    a single bit $m$, the algorithm creates an instance 
    of ISAP having the unique solution $(p_1,...,p_n,q)$ incorporating the bit $m$
    as the LSB of $q$. The generated ISAP instance gets published as the
    commitment information whereby the solution is kept secret and later is
    used as the opening information. The problem instance is generated in a
    way such that an attacker has to solve ISAP to break the hiding
    property. Thus, the instances are generated such that they are not
    efficiently solvable by current algorithmic approaches to ISAP. The
    binding property follows from the fact that $(p_1,...,p_n,q)$ is the unique
    solution to the generated instance.
  </introduction>

  <usage lang="en">
    Simply drag the BitCommitmentScheme component to your workspace and connect a component, that outputs a boolean 
    (for instance the <docRef item="Cryptool.Plugins.BooleanOperators.BooleanInput"/> component), to the <i>InputBit</i> input connector.
    A value of <i>true</i> means $m=1$ and <i>false</i> means $m=0$. <newline/>
    Optionally, you can connect to the <i>Dimension</i> and the <i>S</i> input connectors to define these integer 
    values (By default, <i>Dimension</i> is 7 and <i>S</i> is 128).
    <newline/>
    <newline/>
    The BitCommitmentScheme component has a lot of output connectors (see below), which allow you to obtain the results of 
    the algorithm.<newline/>
    The <i>Log message</i> output gives a lot of informations about the intermediate steps of the used algorithm and
    its results.
  </usage>

  <references>
    <linkReference>
      <link lang="en" url="http://www.ifam.uni-hannover.de/~mschmidt/files/ISAPCommitmentScheme.tgz"/>
      <caption lang="en">
        Object oriented C++ implementation of CS-ISAP by Martin Schmidt
      </caption>
    </linkReference>

    <linkReference>
      <link lang="en" url="http://www.springerlink.com/content/w630617804364681"/>
      <caption lang="en">
        "Using the Inhomogeneous Simultaneous Approximation Problem for Cryptographic Design" 
        by F. Armknecht, C. Elsner and M. Schmidt
      </caption>
    </linkReference>
    
    <linkReference>
      <link lang="en" url="http://ls.fmi.uni-mannheim.de/de/ths/arbeitsgruppe/mitarbeiter/prof-dr-frederik-armknecht/"/>
      <caption lang="en">Prof. Dr. Frederik Armknecht (Universität Mannheim)</caption>
    </linkReference>

    <linkReference>
      <link lang="en" url="http://www.fhdw-hannover.de/de/node/45"/>
      <caption lang="en">Prof. Dr. Carsten Elsner (FHDW Hannover)</caption>
    </linkReference>

    <linkReference>
      <link lang="en" url="http://www.ifam.uni-hannover.de/~mschmidt/"/>
      <caption lang="en">Dipl.-Math. Martin Schmidt (Leibniz Universität Hannover)</caption>
    </linkReference>    
  </references>

</documentation>
