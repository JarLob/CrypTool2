<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PluginCaption" xml:space="preserve">
    <value>Quadratisches Sieb</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>Quadratisches Sieb (QS) zum Faktorisieren</value>
  </data>
  <data name="InputNumberCaption" xml:space="preserve">
    <value>Eingabezahl</value>
  </data>
  <data name="InputNumberTooltip" xml:space="preserve">
    <value>Die zu faktorisierende natürliche Zahl (als Zeichenfolge)</value>
  </data>
  <data name="OutputFactorsCaption" xml:space="preserve">
    <value>Ausgabe der Faktoren</value>
  </data>
  <data name="OutputFactorsTooltip" xml:space="preserve">
    <value>Hier werden die gefundenen Faktoren ausgegeben.</value>
  </data>
  <data name="ChannelCaption" xml:space="preserve">
    <value>Kanal</value>
  </data>
  <data name="ChannelTooltip" xml:space="preserve">
    <value>Kanal des Peer2Peer-Netzwerks</value>
  </data>
  <data name="CoresUsedCaption" xml:space="preserve">
    <value>CPU-Kerne</value>
  </data>
  <data name="CoresUsedTooltip" xml:space="preserve">
    <value>Wie viele CPU-Kerne werden für die Faktorisierung verwendet?</value>
  </data>
  <data name="DeleteCacheCaption" xml:space="preserve">
    <value>Cache löschen</value>
  </data>
  <data name="DeleteCacheTooltip" xml:space="preserve">
    <value>Wenn dieses Kontrollkästchen gesetzt ist, werden die alten Cache-Dateien gelöscht, bevor die Faktorisierung begonnen wird.</value>
  </data>
  <data name="StatusKeyButtonCaption" xml:space="preserve">
    <value>Kopiere P2P-Status</value>
  </data>
  <data name="StatusKeyButtonTooltip" xml:space="preserve">
    <value>Kopiere den P2P-Status in die Zwischenablage.</value>
  </data>
  <data name="UsePeer2PeerCaption" xml:space="preserve">
    <value>Verwende Peer2Peer</value>
  </data>
  <data name="UsePeer2PeerTooltip" xml:space="preserve">
    <value>Wenn dieses Kontrollkästchen gesetzt ist, verbindet sich das Plugin mit dem Peer2Peer-Netzwerk, um die Faktorisierung auf mehrere Rechner zu verteilen.</value>
  </data>
  <data name="Relpack_loaded" xml:space="preserve">
    <value>Dieses Relationenpaket wurde von {0} gesiebt und wir haben es geladen.</value>
  </data>
  <data name="Relpack_lost" xml:space="preserve">
    <value>Dieses Relationenpaket ist verloren gegangen.</value>
  </data>
  <data name="Relpack_other" xml:space="preserve">
    <value>einem anderen Benutzer</value>
  </data>
  <data name="Relpack_unknown" xml:space="preserve">
    <value>Dieses Relationenpaket wurde von einem unbekannten Benutzer gesiebt und wir haben es noch nicht geladen.</value>
  </data>
  <data name="Relpack_us" xml:space="preserve">
    <value>Dieses Relationenpaket wurde von uns gesiebt.</value>
  </data>
  <data name="Active_Peers_" xml:space="preserve">
    <value>Aktive Peers:</value>
  </data>
  <data name="Composite_Factor" xml:space="preserve">
    <value>Zusammengesetzter Faktor</value>
  </data>
  <data name="Cores_used_" xml:space="preserve">
    <value>Verwendete CPUs:</value>
  </data>
  <data name="days" xml:space="preserve">
    <value>Tage</value>
  </data>
  <data name="Downloaded_" xml:space="preserve">
    <value>Heruntergeladen:</value>
  </data>
  <data name="Elapsed_" xml:space="preserve">
    <value>Vergangen:</value>
  </data>
  <data name="End_" xml:space="preserve">
    <value>Ende:</value>
  </data>
  <data name="Factorlist" xml:space="preserve">
    <value>Faktorenliste</value>
  </data>
  <data name="Found_enough_relations" xml:space="preserve">
    <value>Genügend Relationen gefunden. Bitte warten...</value>
  </data>
  <data name="Found_Relations_" xml:space="preserve">
    <value>Gefundene Relationen:</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>Stunden</value>
  </data>
  <data name="State_" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="Local_Sieving_" xml:space="preserve">
    <value>Lokales Sieben (nicht verbunden)</value>
  </data>
  <data name="minutes" xml:space="preserve">
    <value>Minuten</value>
  </data>
  <data name="Needed_Relations_" xml:space="preserve">
    <value>Benötigte Relationen:</value>
  </data>
  <data name="Now_sieving_first_composite_factor" xml:space="preserve">
    <value>Sieben des ersten zusammengesetzten Faktors.</value>
  </data>
  <data name="Other_peer_finished_sieving" xml:space="preserve">
    <value>Ein Peer hat das Sieben beendet.</value>
  </data>
  <data name="Peer2Peer" xml:space="preserve">
    <value>Peer2Peer</value>
  </data>
  <data name="Prime_Factor" xml:space="preserve">
    <value>Primfaktor</value>
  </data>
  <data name="Progress" xml:space="preserve">
    <value>Fortschritt</value>
  </data>
  <data name="Queue_" xml:space="preserve">
    <value>Warteschlange:</value>
  </data>
  <data name="Remaining_" xml:space="preserve">
    <value>Verbleibend:</value>
  </data>
  <data name="Searching_trivial_factors" xml:space="preserve">
    <value>Suche triviale Faktoren.</value>
  </data>
  <data name="seconds" xml:space="preserve">
    <value>Sekunden</value>
  </data>
  <data name="seconds_left" xml:space="preserve">
    <value>Sekunden verbleibend</value>
  </data>
  <data name="Sieving_finished" xml:space="preserve">
    <value>Sieben beendet. Alle {0} Faktoren gefunden.</value>
  </data>
  <data name="Sieving_now" xml:space="preserve">
    <value>Es wird gesiebt.</value>
  </data>
  <data name="Starting_quadratic_sieve" xml:space="preserve">
    <value>Startvorgang, bitte warten.</value>
  </data>
  <data name="Start_" xml:space="preserve">
    <value>Beginn:</value>
  </data>
  <data name="Stopped_by_user" xml:space="preserve">
    <value>Vom Benutzer gestoppt.</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Zeit</value>
  </data>
  <data name="Uploaded_" xml:space="preserve">
    <value>Hochgeladen:</value>
  </data>
  <data name="very_soon" xml:space="preserve">
    <value>In Kürze</value>
  </data>
  <data name="Bits" xml:space="preserve">
    <value>Bits</value>
  </data>
  <data name="Digits" xml:space="preserve">
    <value>Dezimalstellen</value>
  </data>
  <data name="day" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="hour" xml:space="preserve">
    <value>Stunde</value>
  </data>
  <data name="minute" xml:space="preserve">
    <value>Minute</value>
  </data>
  <data name="second" xml:space="preserve">
    <value>Sekunde</value>
  </data>
  <data name="NoneLeft" xml:space="preserve">
    <value>Keine</value>
  </data>
  <data name="SievingFinished2" xml:space="preserve">
    <value>Sieben beendet.</value>
  </data>
  <data name="Input_too_big_" xml:space="preserve">
    <value>Eingabe zu groß.</value>
  </data>
  <data name="Digit" xml:space="preserve">
    <value>Dezimalstelle</value>
  </data>
  <data name="Bit" xml:space="preserve">
    <value>Bit</value>
  </data>
</root>