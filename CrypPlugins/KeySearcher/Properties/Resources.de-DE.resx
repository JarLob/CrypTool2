<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Start_bruteforcing_pattern__" xml:space="preserve">
    <value>Start bruteforcing pattern '</value>
  </data>
  <data name="Wrong_key_pattern_" xml:space="preserve">
    <value>Wrong key pattern!</value>
  </data>
  <data name="Bytes_used_not_valid__" xml:space="preserve">
    <value>Bytes used not valid: </value>
  </data>
  <data name="Waiting_for_external_client_" xml:space="preserve">
    <value>Waiting for external client!</value>
  </data>
  <data name="Launching_p2p_based_bruteforce_logic___" xml:space="preserve">
    <value>Launching p2p based bruteforce logic...</value>
  </data>
  <data name="P2P_not_connected_" xml:space="preserve">
    <value>P2P not connected.</value>
  </data>
  <data name="Keysearcher_Fullstop__Please_Update_your_Version_" xml:space="preserve">
    <value>Keysearcher Fullstop. Please Update your Version.</value>
  </data>
  <data name="Only_using_external_client_to_bruteforce_" xml:space="preserve">
    <value>Only using external client to bruteforce!</value>
  </data>
  <data name="No_ressources_to_BruteForce_available__Check_the_KeySearcher_settings_" xml:space="preserve">
    <value>No ressources to BruteForce available. Check the KeySearcher settings!</value>
  </data>
  <data name="There_must_be_an_error__because_we_bruteforced_too_much_keys___" xml:space="preserve">
    <value>There must be an error, because we bruteforced too much keys...</value>
  </data>
  <data name="_days_" xml:space="preserve">
    <value> days </value>
  </data>
  <data name="___Bruteforcing_TimeSpan__" xml:space="preserve">
    <value>'. Bruteforcing TimeSpan: </value>
  </data>
  <data name="Ended_bruteforcing_pattern__" xml:space="preserve">
    <value>Ended bruteforcing pattern '</value>
  </data>
  <data name="Client_disconnected_" xml:space="preserve">
    <value>Client disconnected!</value>
  </data>
  <data name="Client__0__connected_" xml:space="preserve">
    <value>Client {0} connected!</value>
  </data>
  <data name="Client_tried_to_connect__but_only_one_client_allowed_" xml:space="preserve">
    <value>Client tried to connect, but only one client allowed!</value>
  </data>
  <data name="Assigning_new_job_with_Guid__0__to_client_" xml:space="preserve">
    <value>Assigning new job with Guid {0} to client!</value>
  </data>
  <data name="Client_returned_result_of_job_with_Guid__0__" xml:space="preserve">
    <value>Client returned result of job with Guid {0}!</value>
  </data>
  <data name="in_a_galaxy_far__far_away___" xml:space="preserve">
    <value>in a galaxy far, far away...</value>
  </data>
  <data name="incalculable____" xml:space="preserve">
    <value>incalculable :-)</value>
  </data>
  <data name="dummykey" xml:space="preserve">
    <value>dummykey</value>
  </data>
  <data name="KeySearcher_must_be_running_to_copy_the_status_key_" xml:space="preserve">
    <value>KeySearcher must be running to copy the status key.</value>
  </data>
  <data name="Status_key___0___has_been_copied_to_clipboard_" xml:space="preserve">
    <value>Status key '{0}' has been copied to clipboard.</value>
  </data>
  <data name="No_OpenCL_Device_available_" xml:space="preserve">
    <value>No OpenCL Device available!</value>
  </data>
  <data name="Initializing_connection_to_the_peer_to_peer_system" xml:space="preserve">
    <value>Initializing connection to the peer-to-peer system</value>
  </data>
  <data name="Unable_to_use_peer_to_peer_system_" xml:space="preserve">
    <value>Unable to use peer-to-peer system.</value>
  </data>
  <data name="Initializing_distributed_key_pool_tree" xml:space="preserve">
    <value>Initializing distributed key pool tree</value>
  </data>
  <data name="Updating_statistic" xml:space="preserve">
    <value>Updating statistic</value>
  </data>
  <data name="Finding_next_leaf_to_calculate" xml:space="preserve">
    <value>Finding next leaf to calculate</value>
  </data>
  <data name="Node_was_already_calculated_" xml:space="preserve">
    <value>Node was already calculated.</value>
  </data>
  <data name="PLEASE_UPDATE" xml:space="preserve">
    <value>PLEASE UPDATE</value>
  </data>
  <data name="Pattern___0__was_reserved_before_it_could_be_reserved_for_this_CrypTool_instance_" xml:space="preserve">
    <value>Pattern #{0} was reserved before it could be reserved for this CrypTool instance.</value>
  </data>
  <data name="Rereserving_pattern___0_" xml:space="preserve">
    <value>Rereserving pattern #{0}</value>
  </data>
  <data name="Rereserving_pattern_failed_" xml:space="preserve">
    <value>Rereserving pattern failed!</value>
  </data>
  <data name="Rereserving_pattern_failed__because_there_is_no_connection_" xml:space="preserve">
    <value>Rereserving pattern failed, because there is no connection!</value>
  </data>
  <data name="Running_pattern___0__of__1_" xml:space="preserve">
    <value>Running pattern #{0} of {1}</value>
  </data>
  <data name="Calculating_pattern_" xml:space="preserve">
    <value>Calculating pattern </value>
  </data>
  <data name="Connection_lost__Waiting_for_reconnection_to_store_the_results_" xml:space="preserve">
    <value>Connection lost! Waiting for reconnection to store the results!</value>
  </data>
  <data name="Processing_results_of_calculation" xml:space="preserve">
    <value>Processing results of calculation</value>
  </data>
  <data name="Calculating_global_statistics" xml:space="preserve">
    <value>Calculating global statistics</value>
  </data>
  <data name="Best_match___0__with__1_" xml:space="preserve">
    <value>Best match: {0} with {1}</value>
  </data>
  <data name="Updating_status_in_DHT" xml:space="preserve">
    <value>Updating status in DHT</value>
  </data>
  <data name="Brute_force_was_stopped__not_saving_results___" xml:space="preserve">
    <value>Brute force was stopped, not saving results...</value>
  </data>
  <data name="Removed_reservation_of_pattern___0_" xml:space="preserve">
    <value>Removed reservation of pattern #{0}</value>
  </data>
  <data name="Reservation_removed_by_another_node__while_calculating___To_avoid_a_state_in_limbo__proceeding_to_first_available_leaf___" xml:space="preserve">
    <value>Reservation removed by another node (while calculating). To avoid a state in limbo, proceeding to first available leaf...</value>
  </data>
  <data name="Could_not_store_results__" xml:space="preserve">
    <value>Could not store results: </value>
  </data>
  <data name="Pushing_statistics_to_evaluation_database" xml:space="preserve">
    <value>Pushing statistics to evaluation database</value>
  </data>
  <data name="Calculation_complete_" xml:space="preserve">
    <value>Calculation complete.</value>
  </data>
  <data name="Total_amount_of_patterns___0___each_containing__1__keys_" xml:space="preserve">
    <value>Total amount of patterns: {0}, each containing {1} keys.</value>
  </data>
  <data name="Ready_for_calculation" xml:space="preserve">
    <value>Ready for calculation</value>
  </data>
  <data name="__last_reservation_date_" xml:space="preserve">
    <value>, last reservation date </value>
  </data>
  <data name="__LeftChildFinished_" xml:space="preserve">
    <value>, LeftChildFinished </value>
  </data>
  <data name="___RightChildFinished_" xml:space="preserve">
    <value>,  RightChildFinished </value>
  </data>
  <data name="P2P_network_not_connected_and_autoconnect_disabled__Cannot_compute_job_" xml:space="preserve">
    <value>P2P network not connected and autoconnect disabled. Cannot compute job.</value>
  </data>
  <data name="P2P_network_was_connected_due_to_plugin_setting_" xml:space="preserve">
    <value>P2P network was connected due to plugin setting.</value>
  </data>
  <data name="P2P_network_could_not_be_connected_" xml:space="preserve">
    <value>P2P network could not be connected.</value>
  </data>
  <data name="An_error_occured_when_trying_to_compile_OpenCL_code__" xml:space="preserve">
    <value>An error occured when trying to compile OpenCL code: </value>
  </data>
  <data name="You_have_to_connect_the_KeySearcher_with_the_Decryption_Control_" xml:space="preserve">
    <value>You have to connect the KeySearcher with the Decryption Control!</value>
  </data>
  <data name="_Machines_" xml:space="preserve">
    <value>Machines</value>
  </data>
  <data name="_Users_" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Chunks_" xml:space="preserve">
    <value>Chunks:</value>
  </data>
  <data name="Current_Chunk_" xml:space="preserve">
    <value>Current chunk:</value>
  </data>
  <data name="Devices_" xml:space="preserve">
    <value>Devices:</value>
  </data>
  <data name="Elapsed_" xml:space="preserve">
    <value>Elapsed:</value>
  </data>
  <data name="Endgame_Mode_" xml:space="preserve">
    <value>Endgame mode</value>
  </data>
  <data name="End_" xml:space="preserve">
    <value>End:</value>
  </data>
  <data name="Finished_Chunks_" xml:space="preserve">
    <value>Finished chunks:</value>
  </data>
  <data name="Keys_Per_Chunk_" xml:space="preserve">
    <value>Keys per chunk:</value>
  </data>
  <data name="Keys_Sec_" xml:space="preserve">
    <value>Keys / sec:</value>
  </data>
  <data name="Keys_sec_CPU_" xml:space="preserve">
    <value>Keys/sec (CPU):</value>
  </data>
  <data name="Keys_sec_OpenCL_" xml:space="preserve">
    <value>Keys/sec (OpenCL):</value>
  </data>
  <data name="Local_" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="Overhead_Abs_" xml:space="preserve">
    <value>Overhead (abs):</value>
  </data>
  <data name="Overhead_Perc_" xml:space="preserve">
    <value>Overhead (%):</value>
  </data>
  <data name="Participants_" xml:space="preserve">
    <value>Participants:</value>
  </data>
  <data name="Per_Chunk_" xml:space="preserve">
    <value>Per chunk:</value>
  </data>
  <data name="Ration_" xml:space="preserve">
    <value>Ratio:</value>
  </data>
  <data name="Received_Link_" xml:space="preserve">
    <value>Received (link):</value>
  </data>
  <data name="Received_Payload_" xml:space="preserve">
    <value>Received (payload):</value>
  </data>
  <data name="Remaining_" xml:space="preserve">
    <value>Remaining:</value>
  </data>
  <data name="Remove_" xml:space="preserve">
    <value>Remove:</value>
  </data>
  <data name="Requests_" xml:space="preserve">
    <value>Requests</value>
  </data>
  <data name="Retrieve_" xml:space="preserve">
    <value>Retrieve:</value>
  </data>
  <data name="Sent_Link_" xml:space="preserve">
    <value>Sent (link):</value>
  </data>
  <data name="Sent_Payload_" xml:space="preserve">
    <value>Sent (payload):</value>
  </data>
  <data name="Start_" xml:space="preserve">
    <value>Start:</value>
  </data>
  <data name="Static_" xml:space="preserve">
    <value>Static</value>
  </data>
  <data name="Store_" xml:space="preserve">
    <value>Store:</value>
  </data>
  <data name="Tested_Bits_" xml:space="preserve">
    <value>Tested bits:</value>
  </data>
  <data name="Top_Ten_" xml:space="preserve">
    <value>Top Ten</value>
  </data>
  <data name="Total_" xml:space="preserve">
    <value>Total:</value>
  </data>
  <data name="Total_Chunks_" xml:space="preserve">
    <value>Total chunks:</value>
  </data>
  <data name="Total_Link_" xml:space="preserve">
    <value>Total (link):</value>
  </data>
  <data name="Total_Payload_" xml:space="preserve">
    <value>Total (payload):</value>
  </data>
  <data name="Traffic_" xml:space="preserve">
    <value>Traffic</value>
  </data>
  <data name="Work_Items_" xml:space="preserve">
    <value>Work Items:</value>
  </data>
</root>