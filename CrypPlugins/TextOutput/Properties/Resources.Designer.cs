//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TextOutput.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TextOutput.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Append n-breaks ähnelt.
        /// </summary>
        internal static string AppendBreaksCaption {
            get {
                return ResourceManager.GetString("AppendBreaksCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Defines how much new lines are added after new input. (Applies only if &quot;Append text input&quot; is active.) ähnelt.
        /// </summary>
        internal static string AppendBreaksTooltip {
            get {
                return ResourceManager.GetString("AppendBreaksTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Append text input ähnelt.
        /// </summary>
        internal static string AppendCaption {
            get {
                return ResourceManager.GetString("AppendCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, incoming text will be appended to the current text. ähnelt.
        /// </summary>
        internal static string AppendTooltip {
            get {
                return ResourceManager.GetString("AppendTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die byte ähnelt.
        /// </summary>
        internal static string Byte {
            get {
                return ResourceManager.GetString("Byte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die bytes ähnelt.
        /// </summary>
        internal static string Bytes {
            get {
                return ResourceManager.GetString("Bytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die character ähnelt.
        /// </summary>
        internal static string Char {
            get {
                return ResourceManager.GetString("Char", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die characters ähnelt.
        /// </summary>
        internal static string Chars {
            get {
                return ResourceManager.GetString("Chars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input data ähnelt.
        /// </summary>
        internal static string InputCaption {
            get {
                return ResourceManager.GetString("InputCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input data of any type ähnelt.
        /// </summary>
        internal static string InputTooltip {
            get {
                return ResourceManager.GetString("InputTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die line ähnelt.
        /// </summary>
        internal static string Line {
            get {
                return ResourceManager.GetString("Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die lines ähnelt.
        /// </summary>
        internal static string Lines {
            get {
                return ResourceManager.GetString("Lines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum length ähnelt.
        /// </summary>
        internal static string MaxLengthCaption {
            get {
                return ResourceManager.GetString("MaxLengthCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Provide the maximum number of characters to display. ähnelt.
        /// </summary>
        internal static string MaxLengthTooltip {
            get {
                return ResourceManager.GetString("MaxLengthTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text Output ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Simple text output ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0:#,0} characters ({1:#,0} bytes) ähnelt.
        /// </summary>
        internal static string PresentationFmt {
            get {
                return ResourceManager.GetString("PresentationFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of characters ähnelt.
        /// </summary>
        internal static string ShowCharsCaption {
            get {
                return ResourceManager.GetString("ShowCharsCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status bar ähnelt.
        /// </summary>
        internal static string ShowCharsGroup {
            get {
                return ResourceManager.GetString("ShowCharsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, the number of characters in the text is displayed in the status line of the component. ähnelt.
        /// </summary>
        internal static string ShowCharsTooltip {
            get {
                return ResourceManager.GetString("ShowCharsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Number of lines ähnelt.
        /// </summary>
        internal static string ShowLinesCaption {
            get {
                return ResourceManager.GetString("ShowLinesCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die With this checkbox enabled, the number of lines in the text is displayed in the status line of the component. ähnelt.
        /// </summary>
        internal static string ShowLinesTooltip {
            get {
                return ResourceManager.GetString("ShowLinesTooltip", resourceCulture);
            }
        }
    }
}
