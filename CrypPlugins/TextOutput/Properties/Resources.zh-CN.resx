<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PluginCaption" xml:space="preserve">
    <value>文字输出</value>
  </data>
  <data name="PluginTooltip" xml:space="preserve">
    <value>简单文本输出</value>
  </data>
  <data name="AppendCaption" xml:space="preserve">
    <value>追加文字输入</value>
  </data>
  <data name="AppendTooltip" xml:space="preserve">
    <value>启用此复选框后，传入的文本将被追加到当前文本之后。</value>
  </data>
  <data name="AppendBreaksCaption" xml:space="preserve">
    <value>追加n中断</value>
  </data>
  <data name="AppendBreaksTooltip" xml:space="preserve">
    <value>定义在新输入之后添加多少行。 （仅在“附加文本输入”处于活动状态时适用。）</value>
  </data>
  <data name="MaxLengthCaption" xml:space="preserve">
    <value>最大长度</value>
  </data>
  <data name="MaxLengthTooltip" xml:space="preserve">
    <value>提供要显示的最大字符数。</value>
  </data>
  <data name="InputCaption" xml:space="preserve">
    <value>输入数据</value>
  </data>
  <data name="InputTooltip" xml:space="preserve">
    <value>任何类型的输入数据</value>
  </data>
  <data name="PresentationFmt" xml:space="preserve">
    <value>{0：＃，0}个字符（{1：＃，0}个字节）</value>
  </data>
  <data name="Byte" xml:space="preserve">
    <value>字节</value>
  </data>
  <data name="Bytes" xml:space="preserve">
    <value>个字节</value>
  </data>
  <data name="Char" xml:space="preserve">
    <value>字符</value>
  </data>
  <data name="Chars" xml:space="preserve">
    <value>人物</value>
  </data>
  <data name="Line" xml:space="preserve">
    <value>线</value>
  </data>
  <data name="Lines" xml:space="preserve">
    <value>线</value>
  </data>
  <data name="ShowCharsCaption" xml:space="preserve">
    <value>字符数</value>
  </data>
  <data name="ShowCharsTooltip" xml:space="preserve">
    <value>启用此复选框后，文本中的字符数将显示在组件的状态行中。</value>
  </data>
  <data name="ShowLinesCaption" xml:space="preserve">
    <value>行数</value>
  </data>
  <data name="ShowLinesTooltip" xml:space="preserve">
    <value>启用此复选框后，文本的行数将显示在组件的状态行中。</value>
  </data>
  <data name="ShowCharsGroup" xml:space="preserve">
    <value>状态栏</value>
  </data>
  <data name="Bit" xml:space="preserve">
    <value>一点</value>
  </data>
  <data name="Bits" xml:space="preserve">
    <value>位</value>
  </data>
  <data name="Digit" xml:space="preserve">
    <value>十进制数字</value>
  </data>
  <data name="Digits" xml:space="preserve">
    <value>十进制数字</value>
  </data>
  <data name="ShowDigitsCaption" xml:space="preserve">
    <value>位数和位数</value>
  </data>
  <data name="ShowDigitsTooltip" xml:space="preserve">
    <value>启用此复选框后，如果输入仅包含数字，则输入的十进制数字和位数将显示在组件的状态行中。</value>
  </data>
  <data name="ChangesGroup" xml:space="preserve">
    <value>变化</value>
  </data>
  <data name="DontShow" xml:space="preserve">
    <value>不显示</value>
  </data>
  <data name="ShowChangesCaption" xml:space="preserve">
    <value>显示变更</value>
  </data>
  <data name="ShowChangesTooltip" xml:space="preserve">
    <value>显示两次执行之间Textoutput的更改。</value>
  </data>
  <data name="ShowInsertsAndDeletions" xml:space="preserve">
    <value>显示插入和删除</value>
  </data>
  <data name="ShowOnlyDifferences" xml:space="preserve">
    <value>只显示差异</value>
  </data>
  <data name="ShowChangedSymbols" xml:space="preserve">
    <value>显示不同的符号</value>
  </data>
  <data name="FontCaption" xml:space="preserve">
    <value>字形</value>
  </data>
  <data name="FontGroup" xml:space="preserve">
    <value>字形</value>
  </data>
  <data name="FontSizeCaption" xml:space="preserve">
    <value>字体大小</value>
  </data>
  <data name="FontSizeTooltip" xml:space="preserve">
    <value>设置此TextOutput的字体大小。</value>
  </data>
  <data name="FontTooltip" xml:space="preserve">
    <value>设置此TextOutput的字体。</value>
  </data>
  <data name="ManualFontSettingsCaption" xml:space="preserve">
    <value>手动字体设置</value>
  </data>
  <data name="ManualFontSettingsTooltip" xml:space="preserve">
    <value>手动设置字体。</value>
  </data>
  <data name="LineBreaksCaption" xml:space="preserve">
    <value>换行处理</value>
  </data>
  <data name="LineBreaksTooltip" xml:space="preserve">
    <value>设置是否使用Windows（LF + CR）或Unix（LF）换行符。</value>
  </data>
</root>