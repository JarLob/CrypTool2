<?xml version="1.0" encoding="utf-8" ?>

<!-- This is the XML file defining the classic encryption/decryption categories a user can select from. -->

<step>

  <!-- This is the step's headline. It should be short, but precise. -->
  <headline lang="en-US" >Algorithm Selection</headline>

  <!-- This is the step's description. -->
  <desc lang="en-US" >Select a classic encryption/decryption algorithm.</desc>

  <!-- Caesar input -->
  <input id ="Caesar" image="Caesar">
    <name lang="en-US" >Caesar</name>
    <description lang="en-US" >
      This encryption algorithm already used by the Roman general and dictator Caesar substitutes single letters: The substitution rule is that the letters of the cleartext alphabet are shifted by a special value (key).
    </description>

    <headline lang="en-US" >Message Input</headline>
    <desc lang="en-US" >Here, you can enter the message to encrypt.</desc>
    <inputBox plugin="TextInput1" property="Text" defaultValue="Input your Message here!">
      <description lang="en-US">
        Message to encrypt: 
      </description>
    </inputBox>
    <loadSample file="WorkspaceManagerSamples\Caesar_Sample.cwm" title="W_Caesar_Sample"/>
    
  </input>

  <!-- Vigenère input -->
  <input id ="Vigenere" image="Vigenere">
    <name lang="en-US" >Vigenère</name>
    <description lang="en-US" >
      Vigenère is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- Substitution input -->
  <input id ="Substitution" image="Substitution">
    <name lang="en-US" >Substitution</name>
    <description lang="en-US" >
      Substitution is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- Enigma input -->
  <input id ="Enigma" image="Enigma">
    <name lang="en-US" >Enigma</name>
    <description lang="en-US" >
      Enigma is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- Playfair input -->
  <input id ="Playfair" image="Playfair">
    <name lang="en-US" >Playfair</name>
    <description lang="en-US" >
      Playfair is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- ADFGVX input -->
  <input id ="ADFGVX" image="ADFGVX">
    <name lang="en-US" >ADFGVX</name>
    <description lang="en-US" >
      ADFGVX is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- XOR input -->
  <input id ="XOR" image="XOR">
    <name lang="en-US" >XOR</name>
    <description lang="en-US" >
      XOR is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- Vernam input -->
  <input id ="Vernam" image="Vernam">
    <name lang="en-US" >Vernam</name>
    <description lang="en-US" >
      Vernam is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- Transposition input -->
  <input id ="Transposition" image="Transposition">
    <name lang="en-US" >Transposition</name>
    <description lang="en-US" >
      Transposition is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

  <!-- Scytale input -->
  <input id ="Scytale" image="Scytale">
    <name lang="en-US" >Scytale</name>
    <description lang="en-US" >
      Scytale is a classic algorithm to encrypt plaintext or to decrypt ciphertext... (add instead some really helpful text).
    </description>
  </input>

</step>
