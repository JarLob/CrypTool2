<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Copy_all" xml:space="preserve">
    <value>Copy all lines</value>
  </data>
  <data name="Copy_transkey" xml:space="preserve">
    <value>Copy transpositionkey</value>
  </data>
  <data name="Copy_line" xml:space="preserve">
    <value>Copy selected line</value>
  </data>
  <data name="Copy_ic1" xml:space="preserve">
    <value>Copy IoC1</value>
  </data>
  <data name="Copy_ic2" xml:space="preserve">
    <value>Copy IoC2</value>
  </data>
  <data name="CiphertextCaption" xml:space="preserve">
    <value>Ciphertext</value>
  </data>
  <data name="CiphertextTooltip" xml:space="preserve">
    <value>The ciphertext that should be analyzed.</value>
  </data>
  <data name="ElapsedLabel" xml:space="preserve">
    <value>Elapsed Time:</value>
  </data>
  <data name="EndLabel" xml:space="preserve">
    <value>End Time:</value>
  </data>
  <data name="StartLabel" xml:space="preserve">
    <value>Start Time:</value>
  </data>
  <data name="KeyLengthLabel" xml:space="preserve">
    <value>Analyzed keylength:</value>
  </data>
  <data name="LocalLabel" xml:space="preserve">
    <value>Analysis</value>
  </data>
  <data name="TopTenLabel" xml:space="preserve">
    <value>Bestlist</value>
  </data>
  <data name="ChooseAlphabetList1" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="ChooseAlphabetList2" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="ChooseAlphabetList3" xml:space="preserve">
    <value>France</value>
  </data>
  <data name="ChooseAlphabetList4" xml:space="preserve">
    <value>Italia</value>
  </data>
  <data name="ChooseAlphabetList5" xml:space="preserve">
    <value>Spain</value>
  </data>
  <data name="ADFGVXAnalyzerCaption" xml:space="preserve">
    <value>ADFGVX Analyzer</value>
  </data>
  <data name="AlphabetGroup" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="ChooseAlphabetCaption" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="ChooseAlphabetTooltip" xml:space="preserve">
    <value>Language of messages</value>
  </data>
  <data name="ChooseSeparatorList1" xml:space="preserve">
    <value>Newline</value>
  </data>
  <data name="ChooseSeparatorList2" xml:space="preserve">
    <value>Comma</value>
  </data>
  <data name="ChooseSeparatorList3" xml:space="preserve">
    <value>Semicolon</value>
  </data>
  <data name="ChooseSeparatorList4" xml:space="preserve">
    <value>Blank</value>
  </data>
  <data name="AlphabetCaption" xml:space="preserve">
    <value>Plaintext alphabet</value>
  </data>
  <data name="AlphabetTooltip" xml:space="preserve">
    <value>Characters contained in plaintext</value>
  </data>
  <data name="ChooseSeparatorCaption" xml:space="preserve">
    <value>Separator</value>
  </data>
  <data name="ChooseSeparatorTooltip" xml:space="preserve">
    <value>Character to separate the messages.</value>
  </data>
  <data name="EncryptAlphabetCaption" xml:space="preserve">
    <value>Ciphertext alphabet</value>
  </data>
  <data name="EncryptAlphabetTooltip" xml:space="preserve">
    <value>Characters contained in cipher text</value>
  </data>
  <data name="KeyLength" xml:space="preserve">
    <value>Keylength</value>
  </data>
  <data name="KeyLengthToolTip" xml:space="preserve">
    <value>Keylength of the transpositionkey</value>
  </data>
  <data name="MessageGroup" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="Copy_score" xml:space="preserve">
    <value>Copy Score</value>
  </data>
  <data name="Copy_plaintext" xml:space="preserve">
    <value>Copy transposition result</value>
  </data>
  <data name="IoC1Header" xml:space="preserve">
    <value>IoC 1</value>
  </data>
  <data name="IoC2Header" xml:space="preserve">
    <value>IoC 2</value>
  </data>
  <data name="KeysLabel" xml:space="preserve">
    <value>keys / sec:</value>
  </data>
  <data name="MessagesLabel" xml:space="preserve">
    <value>Number of messages:</value>
  </data>
  <data name="ParametersGroup" xml:space="preserve">
    <value>Additional Options</value>
  </data>
  <data name="PlaintextHeader" xml:space="preserve">
    <value>Transposition result</value>
  </data>
  <data name="Restarts" xml:space="preserve">
    <value>Restarts</value>
  </data>
  <data name="RestartsToolTip" xml:space="preserve">
    <value>How often should the algorithm restart</value>
  </data>
  <data name="ScoreHeader" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="Threads" xml:space="preserve">
    <value>Threads</value>
  </data>
  <data name="ThreadsToolTip" xml:space="preserve">
    <value>How many threads should be started in parallel</value>
  </data>
  <data name="TranskeyHeader" xml:space="preserve">
    <value>Transposition key</value>
  </data>
  <data name="LogTextCaption" xml:space="preserve">
    <value>Logger</value>
  </data>
  <data name="LogTextToolTip" xml:space="preserve">
    <value>Complete log of the analysis component</value>
  </data>
  <data name="MessagesCaption" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="MessagesToolTip" xml:space="preserve">
    <value>Encrypted messages, multiple messages separated by a delimiter</value>
  </data>
  <data name="TranspositionkeyCaption" xml:space="preserve">
    <value>Transposition key</value>
  </data>
  <data name="TranspositionkeyToolTip" xml:space="preserve">
    <value>A permutation of the transposition key expressed in letters</value>
  </data>
  <data name="TranspositionResultCaption" xml:space="preserve">
    <value>Transposition result</value>
  </data>
  <data name="TranspositionResultToolTip" xml:space="preserve">
    <value>Interim result of ADFGVX, result requires a monoalphabetic substitution</value>
  </data>
  <data name="ADFGVXAnalyzerToolTip" xml:space="preserve">
    <value>This component analyzes the transposition key of the ADFGVX cipher</value>
  </data>
  <data name="Deviation" xml:space="preserve">
    <value>Deviation</value>
  </data>
  <data name="DeviationToolTip" xml:space="preserve">
    <value>Deviation in percent of the ideal cost value, from when the substitution analysis is to be carried out.</value>
  </data>
  <data name="ExceptionDuringCheckOfMessages" xml:space="preserve">
    <value>Exception occured during check of messages: {0}</value>
  </data>
  <data name="ExceptionDuringThread" xml:space="preserve">
    <value>Exception occured during execution of ADFGAnalyzer thread: {0}</value>
  </data>
  <data name="InvalidCharacters" xml:space="preserve">
    <value>One of the messages contains invalid characters: {0}</value>
  </data>
  <data name="NotEvenLength" xml:space="preserve">
    <value>One of the messages is not of even length: {0}</value>
  </data>
</root>