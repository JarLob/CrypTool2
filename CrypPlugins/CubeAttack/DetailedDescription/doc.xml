<?xml version="1.0" encoding="utf-8" ?>

<documentation>
  <language culture="en"/>
  <language culture="de-DE"/>

  <introduction lang="en">
    The cube attack is a type of algebraic attack in order to find out the cryptosystem's secret key. 
    It was published by Itai Dinur and Adi Shamir in September 2008.
    <newline/><newline/>
    Cube attacks can be applied to any block cipher, stream cipher or MAC (message authentication code) which is provided as a black box
    in which at least one output bit can be represented by a low degree multivariate polynomial over GF(2) in the key and plaintext bits.
    <newline/><newline/>
    It works by summing a cryptosystem's output bit value for all possible values of a subset of public input bits,
    chosen such that the sum results in derived polynomials on the secret bits. The goal is to get a set of linearly independent polynomials
    on the secret key bits and to solve this system of equations to discover the secret key.
    <newline/><newline/>
    The cube attack consists of two phases, a preprocessing and an online phase.
    In the preprocessing phase, the attacker has the possibility to set the values in the public bits as well as in the secret bits and
    to query the black box in order to evaluate the corresponding output bit.
    The aim of the preprocessing phase is to determine subsets of public bits that correspond to linear polynomials on the secret bits and
    to reconstruct the algebraic structure of those polynomials. The preprocessing phase is computed only once per each cryptosystem and
    can be used in all subsequent online phases on this appropriate cryptosystem. In other words, once enough linearly independent
    polynomials on the secret bits have been found, they can be stored and used in all subsequent online phases to discover the secret key
    bits of the cryptosystem. The preprocessing phase stops if n linearly independent polynomials have been found, whereby n is the number
    of secret input bits on the cryptosystem under attack.
    <newline/><newline/>
    During the online phase of the attack, the secret bits are fixed and unknown to the attacker. He is only allowed to set the 
    public bits to any value and to evaluate the output bit on this combined input. The aim of the online phase is to compute the values of 
    the polynomials found in the preprocessing phase. The polynomials with their corresponding values form a system of linear equations on 
    the secret bits. If we have found n linearly independent polynomials equations in the preprocessing phase, then we can solve the system 
    of equations to recover the values of the secret bits.
  </introduction>

  <introduction lang="de-DE">
    Der Cube-Angriff ist ein algebraischer Angriff auf ein Kryptosystem, der den geheimen Schlüssel offenlegen soll.
    Er wurde von Itai Dinur und Adi Shamir im September 2008 vorgestellt.
    <newline/><newline/>
    Der Cube-Angriff kann auf alle Blockchiffren, Stromchiffren und Nachrichtenauthentifizierungscodes (message authentication codes) durchgeführt werden,
    bei denen mindestens ein Bit der Ausgabe als ein multivariates Polynom mit niedrigem Grad über GF(2) über den Bits des Schlüssels und des Klartextes
    dargestellt werden kann.
    <newline/><newline/>
    Dazu wird das Ausgabebit des Kryptosystems für alle möglichen Belegungen einer Teilmenge der öffentlichen Eingabebits summiert. 
    Die Teilmenge wird so gewählt, dass das Ergebnis einem Polynom in den geheimen Bits des Schlüssels entspricht.
    Das Ziel ist, eine Menge von linear unabhängigen Polynomen über den Bits des Schlüssels zu erhalten und durch Lösen des resultierenden Gleichungssystems den Schlüssel zu rekonstruieren. 
    <newline/><newline/>
    Der Cube-Angriff besteht aus einer Vorverarbeitungsphase und einer Onlinephase.
    In der Vorverarbeitungsphase hat der Angreifer die Möglichkeit, die Bits der Eingabe und des Schlüssels beliebig zu belegen
    und in das als Black-Box vorliegende Kryptosystem einzugeben, um dessen Ausgabe auszuwerten.
    Das Ziel der Vorverarbeitungsphase ist, Teilmengen der öffentlichen Bits zu bestimmen, die linearen Polynomen über den geheimen Bits entsprechen
    und die algebraische Struktur dieser Polynome zu rekonstruieren.
    Die Vorverarbeitungsphase muss für jedes Kryptosystem nur einmal durchgeführt werden und kann bei allen folgenden Onlinephasen für dieses Kryptosystem wiederverwendet werden.
    Wenn also genügend linear unabhängige Polynome über den geheimen Bits gefunden wurden, können diese gespeichert und bei allen weiteren Onlinephasen bei der Bestimmung der geheimen Bits verwendet werden.
    Die Vorverarbeitungsphase endet, wenn n linear unabhängige Polynome gefunden wurden, wobei n die Anzahl der geheimen Eingabebits des angegriffenen Kryptosystems ist.
    <newline/><newline/>
    Während der Onlinephase des Angriffs bleiben die geheimen Bits unverändert und sie sind dem Angreifer nicht bekannt.
    Er kann nur die öffentlichen Bits mit beliebigen Werten belegen und das auf die kombinierte Eingabe resultierende Ausgabebit der Black Box auswerten.
    Das Ziel der Onlinephase ist, die Werte der in der Vorverarbeitungsphase gefundenen Polynome zu berechnen.
    Die Polynome ergeben zusammen mit ihren zugehörigen Werten ein lineares Gleichungssystem über den geheimen Bits.
    Wenn n linear unabhängige Polynomgleichungen in der Vorverarbeitungsphase gefunden wurden, so kann das Gleichungssystem gelöst werden und die Werte der geheimen Bits können bestimmt werden.
  </introduction>

  <usage lang="en">
    For the cube attack to work correctly we need to set it up accordingly through use of its options. The settings Panel for the component
    consists of the following options:
    <newline/><newline/>
    The setting "Action" is needed to decide between the cube attack modes "Preprocessing", "Online" and "Manual Public Bit Input".
    <newline/><newline/>
    The settings "Public Bit Size" and "Secret Bit Size" are used to set the bit size of public and secret input bits of the cryptosystem
    under attack.
    <newline/><newline/>
    The setting "Max Cube Size" is used to limit the size of the cube in the preprocessing phase of the attack. Any subset of public bits
    of size k defines a k-dimensional Boolean cube of 2^k vectors in which we assign all the possible combinations of 0/1 values to the
    public variables. Therefore, we have to limit the size to avoid a number of computations that are infeasible in practise.
    <newline/><newline/>
    The "Constant Tests" setting is used to set the number of constant tests for each polynomial. The test computes the value of the
    polynomial for several different secret inputs and checks that the result is always the same. If it is, it must be constant.
    <newline/><newline/>
    The "Linearity Tests" setting is used to set the number of linearity tests for each polynomial. The test always succeeds if the
    polynomial is linear. However, if the polynomial is not linear, the test fails with high probability. The default value is fifty.
    Setting the value higher increases the probability that the polynomial is truly linear on the secret bits.
    <newline/><newline/>
    The setting "Output Bit" chooses the target output bit of the cryptosystem under attack. A cube attack can be successful against a
    single output bit, but in most cryptosystems we need more than just one output bit to find enough linearly independent superpolys to
    cover all the secret
    bits. The setting is changeable while excecuting a preprocessing phase to consider multiple output bit values.
    <newline/><newline/>
    The text box "Manual Public Bit Input" provides the manual input of values for the public bits. Possible inputs are '0' (set bit to
    value 0), '1' (set bit to value 1) and '*' (sum over this bit value). Note, you have to set under "Action" the modus "Manual Public Bit
    Input" to evaluate the polynomial under this public bit input.
    <newline/><newline/>
    The component itself provides two text outputs. On the one hand the output of the linearly independent polynomials on the secret bits with
    its corresponding cube indexes and output bit index and on the other hand a text output that provides the recovered key bits.
    <newline/><newline/>
    For computing the values of the polynomials and according to that to discover the secret bit values just click on the "Stop" button,
    select the "Online" phase and click on the "Start" button to begin with the online phase.
  </usage>

  <usage lang="de-DE">
    Damit der Cube-Angriff korrekt durchgeführt werden kann, müssen die Optionen der Komponente richtig eingestellt werden.
    Die Komponente hat die folgenden Einstellungsmöglichkeiten:
    <newline/><newline/>
    Unter dem Punkt "Aktion" kann die Betriebsart der Komponente gewählt werden. Es gibt die Optionen "Vorverarbeitung", "Online" und "Manuelle Eingabe der öffentlichen Bits".
    <newline/><newline/>
    In den Einstellungen "öffentliche Bitgröße" und "private Bitgröße" können Sie die Anzahl der öffentlichen und der geheimen Bits des angegriffenen Kryptosystems angeben.
    <newline/><newline/>
    Unter "Maximale Würfelgröße" können Sie die Größe des Würfels in der Vorverarbeitungsphase begrenzen.
    Jede k-elementige Teilmenge der öffentlichen Bits definiert einen k-dimensionalen booleschen Würfel mit 2^k Ecken, denen alle 0/1-Belegungen
    der öffentlichen Bits entsprechen. Die Angabe einer oberen Schranke vermeidet Fälle, in denen die Anzahl der Berechnungen für den praktischen Einsatz zu groß werden würde.
    <newline/><newline/>
    Unter "Konstantentest" können Sie die Anzahl der Tests einstellen, die für jedes Polynom durchgeführt werden sollen, um festzustellen,
    ob es sich um ein konstantes Polynom handelt. Ein solcher Test berechnet den Wert des Polynoms für mehrere geheime Bits und prüft, ob das Resultat immer dasselbe ist.
    <newline/><newline/>
    Unter "Linearitätstests" können Sie die Anzahl der Tests einstellen, die für jedes Polynom durchgeführt werden sollen, um festzustellen,
    ob es sich um ein lineares Polynom handelt. Während lineare Polynome diesen Test immer bestehen, scheitern nichtlineare Polynome mit großer Wahrscheinlichkeit daran.
    Als Voreinstellung werden 50 Tests angenommen. Ein größerer Wert erhöht die Wahrscheinlichkeit, dass das Polynom tatsächlich linear in den geheimen Bits ist.
    <newline/><newline/>
    Die Einstellung "Ausgabebit" wählt das Zielbit der Ausgabe des angegriffenen Kryptosystems aus.
    Ein Cube-Angriff kann bereits gegen ein einzelnes Ausgabebit erfolgreich sein, aber bei den meisten Kryptosystemen wird mehr als ein Ausgabebit benötigt,
    um genügend linear unabhängige Polynome zu finden, die alle geheimen Bits abdecken.
    Diese Option kann während der Vorverarbeitungsphase geändert werden, so dass mehrere Ausgabebits berücksichtigt werden.
    <newline/><newline/>
    Im Textfeld "Manuelle Eingabe der öffentlichen Bits" können die Werte der öffentlichen Bits manuell festgelegt werden.
    Mögliche Eingaben sind '0' (setzt das Bit auf 0), '1' (setzt das Bit auf 1), und '*' (summiert dieses Bit).
    Beachten Sie, dass unter "Aktion" die Betriebsart "Manuelle Eingabe der öffentlichen Bits" ausgewählt worden sein muss,
    damit das Polynom mit den angegebenen öffentlichen Bits ausgewertet wird.
    <newline/><newline/>
    Die Komponente hat zwei Ausgänge.
    An einem werden die linear unabhängigen Polynome über den geheimen Bits mit den zugehörigen Cube-Indices und Ausgabebits ausgegeben,
    am anderen die gefundenen geheimen Bits.
    <newline/><newline/>
    Um nach Ablauf der Vorverarbeitungsphase in die Onlinephase einzutreten und die geheimen Bits zu berechnen, halten Sie den Arbeitsbereich durch Klick auf "Stop" an,
    schalten in den Einstellungen auf den "Online"-Modus und starten den Arbeitsbereich wieder.
  </usage>
  
  <presentation lang="en">
  </presentation>
  
  <presentation lang="de-DE">
  </presentation>
  
  <references>
      <linkReference>
        <link url="http://eprint.iacr.org/2008/385" lang="en" />
        <caption lang="en">A more detailed description of the cube attack.</caption>
        <link url="http://eprint.iacr.org/2008/385" lang="de-DE" />
        <caption lang="de-DE">Detailliertere Beschreibung des Cube-Angriffs (englisch)</caption>
      </linkReference>
  </references>
  
</documentation>