//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DCAPathVisualiser.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DCAPathVisualiser.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Active S boxes: ähnelt.
        /// </summary>
        internal static string ActiveSBoxes {
            get {
                return ResourceManager.GetString("ActiveSBoxes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Characteristics ähnelt.
        /// </summary>
        internal static string Characteristics {
            get {
                return ResourceManager.GetString("Characteristics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choice of the cipher ähnelt.
        /// </summary>
        internal static string ChoiceOfAlgorithm {
            get {
                return ResourceManager.GetString("ChoiceOfAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die At this point, you can select one of the ciphers contained in the list. This is used to display the differential. ähnelt.
        /// </summary>
        internal static string ChoiceOfAlgorithmToolTop {
            get {
                return ResourceManager.GetString("ChoiceOfAlgorithmToolTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher 1 (16 bit block size, 2 round keys, 32 bit key length) ähnelt.
        /// </summary>
        internal static string Cipher1 {
            get {
                return ResourceManager.GetString("Cipher1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher 2 (16 bit block size, 4 round keys, 64 bit key length) ähnelt.
        /// </summary>
        internal static string Cipher2 {
            get {
                return ResourceManager.GetString("Cipher2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cipher 3 (16 bit block size, 6 round keys, 96 bit key length) ähnelt.
        /// </summary>
        internal static string Cipher3 {
            get {
                return ResourceManager.GetString("Cipher3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die #Characteristics: ähnelt.
        /// </summary>
        internal static string CountOfDifferentials {
            get {
                return ResourceManager.GetString("CountOfDifferentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Differential: ähnelt.
        /// </summary>
        internal static string Differential {
            get {
                return ResourceManager.GetString("Differential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Differential ähnelt.
        /// </summary>
        internal static string DifferentialInput {
            get {
                return ResourceManager.GetString("DifferentialInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input of the differential to be visualized ähnelt.
        /// </summary>
        internal static string DifferentialInputToolTip {
            get {
                return ResourceManager.GetString("DifferentialInputToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected difference: ähnelt.
        /// </summary>
        internal static string ExpectedDifferential {
            get {
                return ResourceManager.GetString("ExpectedDifferential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input difference: ähnelt.
        /// </summary>
        internal static string InputDifferential {
            get {
                return ResourceManager.GetString("InputDifferential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input difference ähnelt.
        /// </summary>
        internal static string InputDiffHeader1 {
            get {
                return ResourceManager.GetString("InputDiffHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die u ähnelt.
        /// </summary>
        internal static string InputDiffR1Header1Run1 {
            get {
                return ResourceManager.GetString("InputDiffR1Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 ähnelt.
        /// </summary>
        internal static string InputDiffR1Header1Run2 {
            get {
                return ResourceManager.GetString("InputDiffR1Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die u ähnelt.
        /// </summary>
        internal static string InputDiffR2Header1Run1 {
            get {
                return ResourceManager.GetString("InputDiffR2Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 ähnelt.
        /// </summary>
        internal static string InputDiffR2Header1Run2 {
            get {
                return ResourceManager.GetString("InputDiffR2Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die u ähnelt.
        /// </summary>
        internal static string InputDiffR3Header1Run1 {
            get {
                return ResourceManager.GetString("InputDiffR3Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 3 ähnelt.
        /// </summary>
        internal static string InputDiffR3Header1Run2 {
            get {
                return ResourceManager.GetString("InputDiffR3Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die u ähnelt.
        /// </summary>
        internal static string InputDiffR4Header1Run1 {
            get {
                return ResourceManager.GetString("InputDiffR4Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 4 ähnelt.
        /// </summary>
        internal static string InputDiffR4Header1Run2 {
            get {
                return ResourceManager.GetString("InputDiffR4Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die u ähnelt.
        /// </summary>
        internal static string InputDiffR5Header1Run1 {
            get {
                return ResourceManager.GetString("InputDiffR5Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 5 ähnelt.
        /// </summary>
        internal static string InputDiffR5Header1Run2 {
            get {
                return ResourceManager.GetString("InputDiffR5Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die v ähnelt.
        /// </summary>
        internal static string OutputDiffR1Header1Run1 {
            get {
                return ResourceManager.GetString("OutputDiffR1Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 ähnelt.
        /// </summary>
        internal static string OutputDiffR1Header1Run2 {
            get {
                return ResourceManager.GetString("OutputDiffR1Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die v ähnelt.
        /// </summary>
        internal static string OutputDiffR2Header1Run1 {
            get {
                return ResourceManager.GetString("OutputDiffR2Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 ähnelt.
        /// </summary>
        internal static string OutputDiffR2Header1Run2 {
            get {
                return ResourceManager.GetString("OutputDiffR2Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die v ähnelt.
        /// </summary>
        internal static string OutputDiffR3Header1Run1 {
            get {
                return ResourceManager.GetString("OutputDiffR3Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 3 ähnelt.
        /// </summary>
        internal static string OutputDiffR3Header1Run2 {
            get {
                return ResourceManager.GetString("OutputDiffR3Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die v ähnelt.
        /// </summary>
        internal static string OutputDiffR4Header1Run1 {
            get {
                return ResourceManager.GetString("OutputDiffR4Header1Run1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 4 ähnelt.
        /// </summary>
        internal static string OutputDiffR4Header1Run2 {
            get {
                return ResourceManager.GetString("OutputDiffR4Header1Run2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DCA PathVisualizer ähnelt.
        /// </summary>
        internal static string PluginCaption {
            get {
                return ResourceManager.GetString("PluginCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This component visualizes the characteristics found by the DCA PathFinder component. ähnelt.
        /// </summary>
        internal static string PluginTooltip {
            get {
                return ResourceManager.GetString("PluginTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Probability: ähnelt.
        /// </summary>
        internal static string Probability {
            get {
                return ResourceManager.GetString("Probability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 1 ähnelt.
        /// </summary>
        internal static string R1 {
            get {
                return ResourceManager.GetString("R1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 2 ähnelt.
        /// </summary>
        internal static string R2 {
            get {
                return ResourceManager.GetString("R2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 3 ähnelt.
        /// </summary>
        internal static string R3 {
            get {
                return ResourceManager.GetString("R3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 4 ähnelt.
        /// </summary>
        internal static string R4 {
            get {
                return ResourceManager.GetString("R4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Round 5 ähnelt.
        /// </summary>
        internal static string R5 {
            get {
                return ResourceManager.GetString("R5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attacked encryption round: ähnelt.
        /// </summary>
        internal static string Round {
            get {
                return ResourceManager.GetString("Round", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Characteristic visualization ähnelt.
        /// </summary>
        internal static string TabItemHeaderCipher {
            get {
                return ResourceManager.GetString("TabItemHeaderCipher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Characteristic table ähnelt.
        /// </summary>
        internal static string TabItemHeaderTable {
            get {
                return ResourceManager.GetString("TabItemHeaderTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Depending on the message pair ähnelt.
        /// </summary>
        internal static string TableHeaderLastRoundExpectedDiff {
            get {
                return ResourceManager.GetString("TableHeaderLastRoundExpectedDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Depending on the message pair ähnelt.
        /// </summary>
        internal static string TableHeaderLastRoundInputDiff {
            get {
                return ResourceManager.GetString("TableHeaderLastRoundInputDiff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Depending on the difference that occurs ähnelt.
        /// </summary>
        internal static string TableHeaderLastRoundProbability {
            get {
                return ResourceManager.GetString("TableHeaderLastRoundProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The wrong cipher is selected in the DCA PathVisualizer component. Please check the configuration of the component. ähnelt.
        /// </summary>
        internal static string WarningWrongAlgorithm {
            get {
                return ResourceManager.GetString("WarningWrongAlgorithm", resourceCulture);
            }
        }
    }
}
