<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlphabetTypeSwitch" xml:space="preserve">
    <value>字母</value>
  </data>
  <data name="AlphabetTypeSwitchCaption" xml:space="preserve">
    <value>原始西里尔字母或拉丁字母之间的变化</value>
  </data>
  <data name="ComponentDescription" xml:space="preserve">
    <value>代理ReinoHäyhänen使用的苏联密码（Victor = VIC）</value>
  </data>
  <data name="ComponentName" xml:space="preserve">
    <value>VIC密码</value>
  </data>
  <data name="DateCaption" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="DateTooltip" xml:space="preserve">
    <value>大陆格式的日期，最小长度为5，例如1945年9月2日= 3.9.1945</value>
  </data>
  <data name="EncryptionTypeSwitch" xml:space="preserve">
    <value>加密/解密</value>
  </data>
  <data name="EncryptionTypeSwitchCaption" xml:space="preserve">
    <value>加密和解密之间的变化</value>
  </data>
  <data name="InitializingStringCaption" xml:space="preserve">
    <value>初始化字符串</value>
  </data>
  <data name="InitializingStringTooltip" xml:space="preserve">
    <value>仅由长度为5的数字组成的字符串</value>
  </data>
  <data name="InvalidNumberError" xml:space="preserve">
    <value>数字的大小无效。数字应大于0且小于33</value>
  </data>
  <data name="NumberCaption" xml:space="preserve">
    <value>数</value>
  </data>
  <data name="NumberTooltip" xml:space="preserve">
    <value>1或2位数字</value>
  </data>
  <data name="OutputCaption" xml:space="preserve">
    <value>输出量</value>
  </data>
  <data name="OutputTooltip" xml:space="preserve">
    <value>VIC密码的输出</value>
  </data>
  <data name="PasswordCaption" xml:space="preserve">
    <value>密码</value>
  </data>
  <data name="PasswordTooltip" xml:space="preserve">
    <value>单字密码，至少6个字符</value>
  </data>
  <data name="PhraseCaption" xml:space="preserve">
    <value>短语</value>
  </data>
  <data name="PhraseTooltip" xml:space="preserve">
    <value>至少20个字母长的词组</value>
  </data>
  <data name="ShortDateError" xml:space="preserve">
    <value>日期输入太短。最小长度应为6。</value>
  </data>
  <data name="ShortInitializingStringError" xml:space="preserve">
    <value>初始化字符串太短。最小长度应为5，并且只能由数字组成。</value>
  </data>
  <data name="ShortPasswordException" xml:space="preserve">
    <value>密码输入太短。最小长度为6。</value>
  </data>
  <data name="ShortPhraseError" xml:space="preserve">
    <value>短语太短。最小长度应为20，不包括空格，数字和标点符号。</value>
  </data>
  <data name="TextInputCaption" xml:space="preserve">
    <value>文字输入</value>
  </data>
  <data name="TextInputTooltip" xml:space="preserve">
    <value>VIC密码处理的字符串</value>
  </data>
</root>